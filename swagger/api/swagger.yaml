openapi: 3.0.1
info:
  title: Edgenexus REST API
  description: EdgeADC REST Web Services User Guide
  version: 4.2.3
servers:
- url: https://virtserver.swaggerhub.com/Edgenexus/EdgeAPI/4.2.3
tags:
- name: Add-Ons
  description: Manage Add-Ons.
- name: Apps
  description: Everything about your Apps.
- name: App Store
  description: Licence Details.
- name: Authentication
  description: Create/Edit/Remove Authentication Server/Rule.
- name: Cache
  description: Create caching rules for multiple domains. Fine tune the cache settings
    to speed up web applications.
- name: Clustering
  description: "The Clustering page is the home of High Availability and synchronisation.\
    \ Here you will find three main options \"Cluster\", \"Manual\" and Stand-alone."
- name: Configuration
  description: Download the current configuration. Upload a new configuration or jetPACK
    (application template)
- name: Dashboard
  description: "View the current disk space, memory utilisation and CPU percentage.\
    \ You can also see the most critical events from the syslog."
- name: Date & Time
  description: See the current date and time. Manually set the date and time or configure
    automatic UTC synchronisation to an NTP server.
- name: Email Events
  description: Setup email notifications and alerts.
- name: flightPATH
  description: "Create, edit or delete flightPATH rules. flightPATH is an extremely\
    \ powerful  yet simple to configure layer 7 routing engine for HTTP traffic."
- name: Global Settings
  description: Save global settings like crypto library used such as SSL or YASSL.
- name: History
  description: This page allows you to enable the logging of data that can viewed  as
    an historical graph from the View History section.
- name: IP Services
  description: "Add, Delete, Copy and configure IP Services."
- name: Licence
  description: View or upload your licence.
- name: Logging
  description: Change W3C logging levels. Enable remote W3C log storage.
- name: Login
  description: "Login user, Every user have it's own access rights so it's required\
    \ to login before using any web service."
- name: Logout
  description: Logout user.
- name: Logs
  description: View and manually download W3C log and System log.
- name: Monitor History
  description: View history graph.
- name: Network
  description: "Set your default gateway, add static routes, add appliance, change\
    \ DNS server address and view the routing table."
- name: Power
  description: Power off / shutdown the jetNEXUS ALB-X appliance.
- name: Protocol
  description: Enable Server Too Busy and upload a custom server too busy page. Configure
    the HTTP compression setting to fine tune performance. Set the XFF header settings.
- name: Realserver Monitor
  description: "Create, edit or delete application layer health checks or monitors\
    \ to ensure the real servers are capable of serving content."
- name: Security
  description: Enable SSH access or  to the jetNEXUS ALB-X. Enable REST API access
    and set the port and certificate. Set the GUI secure port and certificate.
- name: SNMP
  description: Enable jetNEXUS ALB-X SNMP agent.
- name: Software
  description: "Download software from cloud, Upload software to ALB and Apply software\
    \ stored on ALB."
- name: SSL Certificates
  description: "Create local certificates or Certificate Signing Request. Manage existing\
    \ certificates, including the ability to add intermediates. Install and export\
    \ certificates."
- name: Statistics
  description: "View the overall statistics for the jetNEXUS ALB-X including compression,\
    \ hits, connections and caching."
- name: Status
  description: See load balancing in action per service in real time with current
    connections and data to each real server.
- name: Troubleshooting
  description: Send ICMP echo requests to troubleshoot network connectivity and generate
    and download a capture of all TCP packets to aid troubleshooting.
- name: Users
  description: Create mulitple users and assign a role for each user. In this section
    you can also see the actions of each user.
- name: Widget
  description: Manage widgets
paths:
  /GET/54:
    get:
      tags:
      - Add-Ons
      summary: Container details
      description: "This service is used to FETCH all container details.\n\n  The\
        \ nodes of JSON received, contains the given information-\n\n    AddOns: This\
        \ node contains containers details.\n    id: This node contains container\
        \ is.\n    AppName: This node contains app name.\n    ParentImage: \n    DockerImage:\
        \ \n    TimeStarted:\n    TimeStopped:\n    InternalIP: \n    AddOnID: \n\
        \    AddOnGUI: \n    ExternalIP: \n    ExternalPort: \n    ExternalAdapter:\
        \ \n    sIcon: \n    isPaused: \n    AddonImport: \n    dataset: dataset.\n\
        \    row:row .\n    isRestore: This node contains either true or false.\n"
      responses:
        "200":
          description: Json object of response of service /GET/54
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOns_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
      - Add-Ons
      summary: Play
      description: "This service is used to play the container.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    AddOnName: \n    ConfigID:\n    ExternalIPAddress:\n    ExternalPort:\n\
        \    AddOnID:\n    Repository:\n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddOns_Play'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/54?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOns_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/54?iAction=4&iType=1:
    post:
      tags:
      - Add-Ons
      summary: Public Ip
      description: "This service is used to get Public Ip of the container.\n\n  JSON\
        \ that needs to be sent as request payload, Should contains given information-\n\
        \  \n    AddOnGUI: \n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddOns_PublicIP'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/54?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOns_PublicIP_response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/54?iAction=7&iType=1:
    post:
      tags:
      - Add-Ons
      summary: Pause
      description: "This service is used to pause the container.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    AddOnID: \n    ConfigID:\n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddOns_Pause'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/54?iAction=7&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOns_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/54?iAction=7&iType=2:
    post:
      tags:
      - Add-Ons
      summary: Unpause
      description: "This service is used to unpause the container.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    AddOnName: \n    ConfigID:\n    ExternalIPAddress:\n    ExternalPort:\n\
        \    AddOnID:\n    Repository:\n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddOns_Play'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/54?iAction=7&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOns_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/54?iAction=8&iType=2:
    post:
      tags:
      - Add-Ons
      summary: Stop
      description: "This service is used to stop the container.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    AddOnID: \n    ConfigID:\n    Repository:\n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddOns_Stop'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/54?iAction=8&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOns_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/26?iAction=12&iType=1:
    post:
      tags:
      - Add-Ons
      summary: Update container
      description: "This service is used to update the container.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    Repository: \n    AddOnName:\n    ExternalIPAddress:\n    ExternalPort:\n\
        \    ConfigID:\n"
      requestBody:
        description: Json object that needs to be added to the store
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddOns_Update_PostData'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=12&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOns_UpdateData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/54?iAction=8&iType=3:
    post:
      tags:
      - Add-Ons
      summary: Remove add-on
      description: "This service is used to remove the container.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    ConfigID: \n    AddOnID:\n"
      requestBody:
        description: Json object that needs to be added to the store
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddOns_Remove'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/54?iAction=8&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOns_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/54?iAction=9&iType=1&ConfigID=5&send=docker:
    post:
      tags:
      - Add-Ons
      summary: Import
      description: |
        This service is used to import the file using form submit.
      responses:
        "200":
          description: Json object of response of service /POST/54?iAction=9&iType=1&ConfigID=5&send=docker
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOns_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/54?download=docker&ConfigID=5:
    get:
      tags:
      - Add-Ons
      summary: Export
      description: |
        This service is used to export the file.
      responses:
        "200":
          description: File will be downloaded in response of service /GET/54?download=docker&ConfigID=5
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/39:
    get:
      tags:
      - Apps
      summary: Licence Details
      description: "This service is used to FETCH licence details.\n\n  The nodes\
        \ of JSON received, contains the given information\n  \n    UserID: This node\
        \ contains user id.\n    MachineID: This node contains machine id.\n    Location:\
        \ This node contains location.\n    PublicIP: This node contains public ip.\n\
        \    LicenceID: This node contains licence id.\n    SoftwareVersion: This\
        \ node contains software version.\n    AppStoreUrl: \n"
      responses:
        "200":
          description: Json object of response of service /GET/39
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppStore_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/49?smartInfo=apps:
    get:
      tags:
      - Apps
      summary: Avaliable download
      description: "This service is used to fetch smart file details of avaliable\
        \ softwares for download.\n\n  The nodes of JSON received, contains the given\
        \ information\n  \n    SmartFiles: \n    File_Name: This node contains File\
        \ Name. \n    Version: This node contains Version.\n    Message_Digest: \n\
        \    Machine_Id: This node contains Machine id. \n    Product_Id: This node\
        \ contains Product id.\n    Order_Id: This node contains order id. \n    Icon:\
        \ This node contains icon.\n    Description:\n    Name:\n    Type:\n    Certified:\n\
        \    Vendor:\n    ReleaseDate:\n    DockerImageName:\n"
      responses:
        "200":
          description: Json object of response of service /GET/49
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apps_Available'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/26?iAction=10&iType=1:
    post:
      tags:
      - Apps
      summary: Deploy
      description: "This service is used to deploy the software.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    Name: file name.\n"
      requestBody:
        description: Object that needs to be sent to the store.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Apps_Deploy'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=10&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apps_Available'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/26?iAction=8&iType=1:
    post:
      tags:
      - Apps
      summary: Download
      description: "This service is used to download the software.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    URL: file url. \n    Name: file name.\n"
      requestBody:
        description: Object that needs to be sent to the store.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Apps_Download'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=8&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apps_DownResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/26?iAction=9&iType=1:
    post:
      tags:
      - Apps
      summary: Download Status
      description: "This service is used to fetch download status of downloading software.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    URL: file url. \n    Name: file name.\n    TotalSize: file size.\n"
      requestBody:
        description: Object that needs to be sent to the store.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Apps_DownloadOne'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=9&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apps_DownResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/26?iAction=6&iType=1:
    post:
      tags:
      - Apps
      summary: Remove
      description: "This service is used to remove the downloaded sofware.\n\n  JSON\
        \ that needs to be sent as request payload, Should contains given information-\n\
        \  \n    FileName: file name.\n    DockerImageName:\n"
      requestBody:
        description: Object that needs to be sent to the store.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Apps_Remove'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=6&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Apps_Available'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/39?page=Appstore:
    get:
      tags:
      - App Store
      summary: Licence Details
      description: "This service is used to FETCH licence details.\n\n  The nodes\
        \ of JSON received, contains the given information\n  \n    UserID: This node\
        \ contains user id.\n    MachineID: This node contains machine id. \n    Location:\
        \ This node contains location of browser.\n    PublicIP: This node contains\
        \ public ip. \n    LicenceID: This node contains licence id.\n    SoftwareVersion:\
        \ This node contains software version.\n    AppStoreUrl: This node contains\
        \ app store url.\n"
      responses:
        "200":
          description: Json object of response of service /GET/39?page=Appstore
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/63:
    get:
      tags:
      - App Store
      summary: Licence Details
      description: "This service is used to FETCH licence details.\n\n  The nodes\
        \ of JSON received, contains the given information\n  \n    CsmKey: This node\
        \ contains Csm Key.\n    TimeofDay: This node contains datetime stamp. \n"
      responses:
        "200":
          description: Json object of response of service /GET/63
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App_Data_69_Get'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/40:
    get:
      tags:
      - Authentication
      summary: Authentication page data
      description: "This service is used to FETCH all data for Authentication page(grid\
        \ data and combo box options), it uses three API structures\n\n  Authentication_Server:\
        \ Used to get rows details for Authentication server grid.\n\n  Authentication_Rule:\
        \ Used to get rows details for Authentication rule grid.\n\n  Authentication_Form:\
        \ Used to get all avalable authentication forms.\n  \n  The nodes of JSON\
        \ received, contains the given information\n  \n    AuthServersCombo: This\
        \ node contains options of various authentication server configured.\n   \
        \ AuthMethodCombo: This node contains options of various authentication methods\
        \ such as LDAP and RADIUS.\n    ClientAuthMethodsCombo: This node contains\
        \ options of various client authentication methods such as Forms, Basic etc.\n\
        \    ServerAuthMethodsCombo: This node contains options of various server\
        \ authentication methods such as NTLM and BASIC.\n    AuthFormsCombo: This\
        \ node contains options of various forms uploaded.\n    LoginFormatListString:\
        \ This node contains options of various login formats such as username only,\
        \ username and domain etc.\n    PreAuthServerGrid: This node contains authentication\
        \ server grid data.\n    id: This node contains index of each server which\
        \ needed to update or delete that server.\n    Name: This node contains name\
        \ of server.\n    Description: This node contains description of server.\n\
        \    AuthMethod: This node contains authentication method used for this server.\n\
        \    Domain: This node contains domain.\n    Address: This node contains ip\
        \ address.\n    Port: This node contains port.\n    SearchBase: This node\
        \ contains search base.\n    LoginFormat: This node contains login format.\n\
        \    Passphrase: This node contains authentication server password.\n    DeadTime:\
        \ This node contains authentication server dead time.\n    Searchcondition:\
        \ This node contains authentication searchcondition .\n    PreAuthRuleGrid:\
        \ This node contains authentication rule grid data.\n    id: This node contains\
        \ index of each rule which needed to update or delete that rule.\n    Name:\
        \ This node contains name of rule.\n    Description: This node contains description\
        \ of rule.\n    RootDomain: \n    AuthServer: This node contains authentication\
        \ server used for this rule.\n    ClientAuthMethod: This node contains client\
        \ authentication method.\n    ServerAuthMethod: This node contains server\
        \ authentication method.\n    AuthForm: This node contains authentication\
        \ form used for this rule.\n    Message: This node contains message.\n   \
        \ dataset:dataset.\n    row:row.\n    Timeout: This node contains timeout.\n"
      responses:
        "200":
          description: Json object of response of service /GET/40
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/38?iAction=4&iType=1:
    post:
      tags:
      - Authentication
      summary: Remove Form
      description: "This service is used to Remove Form. you have to send id, that\
        \ needs to be remove, with POST request json.\n\n  JSON that needs to be sent\
        \ as request payload, Should contains given information- \n  \n      id: id.\n"
      requestBody:
        description: Object that needs to be sent to the service
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RemoveAuthenticationForm'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/38?iAction=4&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/38?iAction=1&iType=1:
    post:
      tags:
      - Authentication
      summary: Add Authentication Server
      description: "This service is used to add new Authentication server in Authentication\
        \ server grid. you have to send data of new Row, that needs to be added, with\
        \ POST request json.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information- \n  \n      Address: IP address.\n      AuthMethod:\
        \ Value(Received as Value in GET/40 service, node AuthMethodCombo) of option\
        \ selected from Authentication method options.\n      DeadTime: \n      Description:\
        \ Authentication server Description.\n      Domain: Domain Name.\n      LoginFormat:\
        \ id(Received as id in GET/40 service, node LoginFormatListString) of option\
        \ selected from Login Format options.\n      Name: Username.\n      Passphrase:\
        \ Password.\n      Port: Port number.\n      SearchBase: \n      Searchcondition:\n"
      requestBody:
        description: Object that needs to be sent to the service
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddAuthentication'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/38?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/38?iAction=1&iType=2:
    post:
      tags:
      - Authentication
      summary: Update Authentication Server
      description: "This service is used to update details in Authentication server\
        \ grid, you have to send id of Authentication server with data, that needs\
        \ to be updated, with POST request json.\n\n  JSON that needs to be sent as\
        \ request payload, Should contains given information-\n  \n        Address:\
        \ IP address.\n        AuthMethod: Value(Received as Value in GET/40 service,\
        \ node AuthMethodCombo) of option selected from Authentication method options.\n\
        \        DeadTime: \n        Description: Authentication server Description.\n\
        \        Domain: Domain Name.\n        LoginFormat: id(Received as id in GET/40\
        \ service, node LoginFormatListString) of option selected from Login Format\
        \ options.\n        Name: Username.\n        Passphrase: Password.\n     \
        \   Port: Port number.\n        SearchBase: \n        Searchcondition:\n \
        \       id: index(Received as id in GET/40 service) of PreAuthServerGrid that\
        \ needs to updated.\n"
      requestBody:
        description: Object that needs to be sent to the service
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateAuthentication'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/38?iAction=1&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/38?iAction=1&iType=3:
    post:
      tags:
      - Authentication
      summary: Remove Authentication Server
      description: "This service is used to remove row in Authentication server grid,\
        \ you have to send id of Authentication server, that needs to be removed,\
        \ with POST request json.\n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information-\n  \n    Id: index(Received as id in\
        \ GET/40 service) of Authentication Server that needs to be deleted.\n"
      requestBody:
        description: Object that needs to be sent to the service
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RemoveAuthentication'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/38?iAction=1&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/38?iAction=2&iType=1:
    post:
      tags:
      - Authentication
      summary: Add Authentication Rule
      description: "This service is used to add new Authentication rule in Authentication\
        \ rule grid. you have to send data of new Row, that needs to be added, with\
        \ POST request json.\n\n   JSON that needs to be sent as request payload,\
        \ Should contains given information-\n   \n     AuthForm: id(Received as id\
        \ in GET/40 service, node AuthFormsCombo) of option selected from Form options.\n\
        \     AuthServer: id(Received as id in GET/40 service, node AuthServersCombo)\
        \ of option selected from Authentication server options.\n     ClientAuthMethod:\
        \ id(Received as id in GET/40 service, node ClientAuthMethodsCombo) of option\
        \ selected from client Authentication options.\n     Description: \n     Message:\
        \ Message.\n     Name: Authentication server name\n     RootDomain:\n    \
        \ ServerAuthMethod: id(Received as id in GET/40 service, node ServerAuthMethodsCombo)\
        \ of option selected from server Authentication options.\n     Timeout: Authentication\
        \ server name\n"
      requestBody:
        description: Object that needs to be sent to the service
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RuleAuthentication'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/38?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/38?iAction=2&iType=2:
    post:
      tags:
      - Authentication
      summary: Update Authentication Rule
      description: "This service is used to Update Authentication Rule in Authentication\
        \ rule grid. you have to send data of new Row, that needs to be added, with\
        \ POST request json.\n\n   JSON that needs to be sent as request payload,\
        \ Should contains given information-\n   \n     AuthForm: id(Received as id\
        \ in GET/40 service, node AuthFormsCombo) of option selected from Form options.\n\
        \     AuthServer: id(Received as id in GET/40 service, node AuthServersCombo)\
        \ of option selected from Authentication server options.\n     ClientAuthMethod:\
        \ id(Received as id in GET/40 service, node ClientAuthMethodsCombo) of option\
        \ selected from client Authentication options.\n     Description: \n     Message:\
        \ Message.\n     Name: Authentication server name\n     RootDomain:\n    \
        \ ServerAuthMethod: id(Received as id in GET/40 service, node ServerAuthMethodsCombo)\
        \ of option selected from server Authentication options.\n     Timeout: Authentication\
        \ server name\n     id: index(Received as id in GET/40 service) of PreAuthRuleGrid\
        \ that needs to updated.\n"
      requestBody:
        description: Object that needs to be sent to the service
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RuleUpdateAuthentication'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/38?iAction=2&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/38?iAction=2&iType=3:
    post:
      tags:
      - Authentication
      summary: Remove Authentication Rule
      description: "This service is used to remove row in Authentication rule grid,\
        \ you have to send id of Authentication rule, that needs to be removed, with\
        \ POST request json.\n\n   JSON that needs to be sent as request payload,\
        \ Should contains given information-\n   \n     id: index(Received as id in\
        \ GET/40 service) of Authentication rule that needs to be deleted.\n"
      requestBody:
        description: Object that needs to be sent to the service
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RuleDeleteAuthentication'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/38?iAction=2&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/38?iAction=3&iType=1&send=form:
    post:
      tags:
      - Authentication
      summary: Upload Authentication Form
      description: "This service is used to upload Authentication form file, you have\
        \ to send name in form field(UploadFormName) and file with send=form in query\
        \ string, that needs to be uploaded, with form submit.\n\n   We have to send\
        \ given values to form submit\n   \n     UploadFormName: Upload Form Name.\n\
        \     file: File needs to be Uploaded.\n"
      responses:
        "200":
          description: Json object of response of service /POST/38?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/18:
    get:
      tags:
      - Cache
      summary: Cache page data with combo data
      description: "This service is used to FETCH all data for Cache page, it uses\
        \ one API structures.\n\n  Config_Cache: Used to get all cache Rules, domains\
        \ and other cache settings details. \n  \n  The nodes of JSON received, contains\
        \ the given information\n  \n    CacheIncExcCombo: This node contains options\
        \ of include and exclude.\n    CacheRuleHelpTypeCombo: This node contains\
        \ options of various cache rule help to include or exclude.\n    CCHMaxCache:\
        \ This node contains value of maximum cache size.\n    CCHMinCache: This node\
        \ contains value of minimum cache size.\n    CCHHeuristicExpiry: This node\
        \ contains value of heuristic expiry.\n    CCHCachableResponses: This node\
        \ contains information of cacheable responses such as 302, 200 etc.\n    CCHTrimCache:\
        \ This node contains trim cache information.\n    CCHCache304Stream: This\
        \ node contains 304 stream information.\n    CacheOtherDomainCombo:This node\
        \ contains options of various CacheOtherDomain.\n    CacheDomainGrid: This\
        \ node contains data for cache domain grid.\n        name: This node contains\
        \ information of name.\n    rule: This node contains information of rule.\n\
        \    CacheRulesGrid: This node contains data for cache rule grid.\n    id:This\
        \ node contains id.\n    description: This node contains the value of description.\n\
        \    add:This node contains +.\n    cacheRuleText: This node contains the\
        \ value of cacheRuleText.\n    CacheDomainCombo: This node contains data for\
        \ cache other domain served.\n"
      responses:
        "200":
          description: Json object of response of service /GET/18
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Cache'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/18?isCacheRequest=true&req=refresh:
    get:
      tags:
      - Cache
      summary: Cache page data for Domain Combo
      description: |
        This service is used to FETCH  data for Cache page Domain Combo, it uses one API structures.

              CacheOtherDomainCombo:This node contains options of various CacheOtherDomain.
      responses:
        "200":
          description: Json object of response of service /GET/18?isCacheRequest=true&req=refresh
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_CacheOtherDomainCombo'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/18?iAction=1&iType=1:
    post:
      tags:
      - Cache
      summary: Update global cache settings
      description: "\nThis service is used to update global cache setting.\n\n  JSON\
        \ that needs to be sent as request payload, Should contains given information-\n\
        \  \n    vButtonFlag: 'flag to update Global Cache Settings section(1 to check\
        \ cache, 2 for clear cache and 3 for save global cache settings).'\n    CCHMaxCache:\
        \ Maximum Cache Size.\n    CCHMinCache: Minimum Cache Size.\n    CCHHeuristicExpiry:\
        \ Cache time.\n    CCHCachableResponses: Cacheable http response code.\n \
        \   CCHTrimCache: Cache checking time.\n    CCHCache304Stream: Cache fill\
        \ counter.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateCache'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/18?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Cache'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/18?iAction=2&iType=4:
    post:
      tags:
      - Cache
      summary: Add Domain(Other Domains Served)
      description: "\nThis service is used Add Domain.\n\n  JSON that needs to be\
        \ sent as request payload, Should contains given information-\n  \n    name:\
        \ Domain name.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Cache_AddDomain'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/18?iAction=2&iType=4
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Cache'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/18?iAction=2&iType=5:
    post:
      tags:
      - Cache
      summary: Remove Domain(Other Domains Served)
      description: "\nThis service is used Remove Domain.\n\n  JSON that needs to\
        \ be sent as request payload, Should contains given information-\n  \n   \
        \ name: Domain name.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Cache_AddDomain'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/18?iAction=2&iType=5
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Cache'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/18?iAction=2&iType=1:
    post:
      tags:
      - Cache
      summary: Add new host
      description: |2

        This service is used to add new host in Apply cache rule grid.

          JSON that needs to be sent as request payload, Should contains given information- not required to send json.
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Cache_AddNew'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/18?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Cache'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/18?iAction=2&iType=2:
    post:
      tags:
      - Cache
      summary: Remove host
      description: "\nThis service is used to remove a host from Apply cache domain\
        \ grid, you have to send id of row, that needs to be removed, with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    Id : index (Received as id in GET/18 service)\
        \ of Cache Domain that needs to be deleted.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RemoveCache'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/18?iAction=2&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Cache'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/18?iAction=2&iType=3:
    post:
      tags:
      - Cache
      summary: Update apply cache domain grid
      description: "\nThis service is used to update details in Apply cache domain\
        \ grid, you have to send id of row with data, that needs to be updated, with\
        \ POST request json.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-\n  \n    id: index (Received as id in GET/18\
        \ service) of CacheDomainGrid that needs to updated.\n    name: name.\n  \
        \  Rule: id(Received as id in GET/18 service, node CacheDomainCombo) of option\
        \ selected from Caching Rulebase options.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateApplyCache'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/18?iAction=2&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Cache'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/18?iAction=3&iType=1:
    post:
      tags:
      - Cache
      summary: Add new cache rule
      description: |2

        This service is used to add new rule in create cache rule grid.

          JSON that needs to be sent as request payload, Should contains given information- not required to send json.
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Cache_AddNew'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/18?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Cache'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/18?iAction=3&iType=2:
    post:
      tags:
      - Cache
      summary: Remove cache rule
      description: "\nThis service is used to remove rule from create cache rule grid,\
        \ you have to send id of row, that needs to be removed, with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    id: index(Received as id in GET/18 service)\
        \ of Cache Rules that needs to be deleted.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RemoveCacheRule'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/18?iAction=3&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Cache'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/18?iAction=3&iType=3:
    post:
      tags:
      - Cache
      summary: Update cache rule
      description: "\nThis service is used to update details in create cache rule\
        \ grid, you have to send id of row with data, that needs to be updated, with\
        \ POST request json.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-\n  \n    id: index(Received as id in GET/18\
        \ service) of CacheRulesGrid that needs to updated.\n    name: Rule name.\n\
        \    description: Rule description.\n    add:\n    cacheRuleText: Rule Condition.\n"
      requestBody:
        description: Object that needs to be sent to the service
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateCacheRule'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/18?iAction=3&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Cache'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/30:
    get:
      tags:
      - Clustering
      summary: Cluster details
      description: "This service is used to FETCH cluster details , it uses one API\
        \ structure.\n\n Setup_Cluster: Used to get cluster details like failover\
        \ time, cluster members and unclustered servers ready to cluster(Unpartnered).\
        \ \n \n   The nodes of JSON received, contains the given information\n   \
        \  \n     clusterState: This node contains the state of cluster such as if\
        \ it's clustered, manual or standby.\n     Failover: This node contains value\
        \ of failover time.\n     Members: This node contains information of all clustered\
        \ members.\n     UnPartenered: This node contains information of ALB that\
        \ are ready(available) to be clustered.\n     Clustermember: This node contains\
        \ cluster member.\n     ChannelStatusReason: This node contains channel Status\
        \ Reason.\n     Status:This node contains the value of status.\n     Id: This\
        \ node contains the value of id.\n     Unclaimeddevices: This node contains\
        \ the value of unclaimed devices.\n     dataset:dataset.\n"
      responses:
        "200":
          description: Json object of response of service /GET/30
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_Cluster'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/30?iAction=1&iType=2:
    post:
      tags:
      - Clustering
      summary: Update cluster state
      description: "This service is used to update cluster state(Cluster, Manual or\
        \ Standalone), you have to send ClusterState=(1,2 or 3), with POST request\
        \ json.\n  1. Cluster\n  2. Manual\n  3. Stand-alone\n  \n  \n    ClusterState:\
        \ radio box value.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateCluster'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/30?iAction=1&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_Cluster'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/30?iAction=1&iType=1:
    post:
      tags:
      - Clustering
      summary: Update cluster failover time
      description: "This service is used to update cluster Failover time(wait time),\
        \ you have to send Cluster FailOvertimer=(time in miliseconds), with POST\
        \ request json.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-\n  \n    FailOvertimer: It's the amount of time\
        \ an ALB should wait before takeover the cluster if primary ALB failed.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/FailoverCluster'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/30?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_Cluster'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/30?iAction=2&iType=1:
    post:
      tags:
      - Clustering
      summary: Move up ALB in cluster grid
      description: "This service is used to move up a server in cluster grid, you\
        \ have to send ip address of server as ipAddr=IP address of server, with POST\
        \ request json.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-\n  \n    ipAddr: IP address\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MoveupCluster'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/30?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_Cluster'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/30?iAction=2&iType=2:
    post:
      tags:
      - Clustering
      summary: Move down ALB in cluster grid
      description: "This service is used to move down a server in cluster grid, you\
        \ have to send ip address of server as ipAddr=IP address of server, with POST\
        \ request json.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-\n  \n    ipAddr: IP address\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MoveupCluster'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/30?iAction=2&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_Cluster'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/30?iAction=2&iType=3:
    post:
      tags:
      - Clustering
      summary: Move ALB from cluster to unclaimed
      description: |
        This service is used to move a server from cluster to unclaimed, you have to send ip address of server as ipAddr=IP address of server, with POST request json .

          JSON that needs to be sent as request payload, Should contains given information-

            ipAddr: IP address
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MoveupCluster'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/30?iAction=2&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_Cluster'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/30?iAction=2&iType=4:
    post:
      tags:
      - Clustering
      summary: Move ALB from unclaimed to cluster
      description: "This service is used to move a server from unclaimed to cluster,\
        \ you  have to send ip address of server as ipAddr=IP address of server, with\
        \ POST request json.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-\n  \n    ipAddr: IP address\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/MoveupCluster'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/30?iAction=2&iType=4
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_Cluster'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/26?download=conf&preDownloadCheck=yes:
    get:
      tags:
      - Configuration
      summary: Download configuration
      description: |
        This service is used to download Configuration file in text format, you have to send download=conf in query string.
      responses:
        "200":
          description: File will be downloaded in response of service /GET/26?download=conf&preDownloadCheck=yes
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/26?iAction=1&iType=1&send=conf:
    post:
      tags:
      - Configuration
      summary: Upload configuration
      description: |
        This service is used to upload Configuration, you have to send Configuration file and send=conf in query string, that needs to be uploaded, by using form submit.
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=1&iType=1&send=conf
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration_Response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/51?isRefreshRequest=true:
    get:
      tags:
      - Dashboard
      summary: Widget details
      description: "This service is used to FETCH widget details.\n\n  The nodes of\
        \ JSON received, contains the given information\n\n    ConfiguredWidgetsComboStore:\n\
        \    data: This node contains avaliable widgets.\n    PartID: This node contains\
        \ partid of widget. \n    SectionName: This node contains section of widget.\
        \ \n    Widget_Name: This node contains name of widget.\n"
      responses:
        "200":
          description: Json object of response of service /GET/51?isRefreshRequest=true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDashboard'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/2:
    get:
      tags:
      - Dashboard
      summary: Show Event Widget details
      description: |
        This service is used for show event widget.

            Headlines: This node contains Headlines.
            CPU:CPU.
            GraphMemory:GraphMemory.
            PageTitle:PageTitle.
            nature: nature.
            colour:colour.
            id:id.
            message:message.
             data:data.
      responses:
        "200":
          description: Json object of response of service /GET/2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashEventWidget2'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/62:
    get:
      tags:
      - Dashboard
      summary: Show Event Widget details
      description: "This service is used for show event widget.\n\n    interfaceImagePath:\
        \ interfaceImagePath\n    data: This node contains avaliable widgets.\n  \
        \  conn: This node contains conn of widget. \n    compress: This node contains\
        \ the value of compress. \n    cacheperc: This node contains cacheperc.\n\
        \    rsStatusReason: rsStatusReason.\n    channelStatusReason: channelStatusReason.\n\
        \    pool: pool.\n    RowType:RowType.\n    VIPPort: VIPPort.\n    serviceName:serviceName.\n\
        \    realServerNotes:realServerNotes.\n    realServer: realServer.\n    rsImagePath:rsImagePath.\n\
        \    hitsecnew:hitsecnew.\n    channelImagePath: channelImagePath.\n    interfaceStatusReason:\
        \ interfaceStatusReason.\n    reqsec: reqsec.\n    SeriesDataConn: SeriesDataConn.\n\
        \    SeriesDataDat:SeriesDataDat.\n    SeriesDataReq: SeriesDataReq.\n"
      responses:
        "200":
          description: Json object of response of service /GET/62
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusData_row'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/48:
    get:
      tags:
      - Dashboard
      summary: Show Event Widget details
      description: "This service is used for show event widget.\n\n    period: period\n\
        \    systemData: This node contains systemData.\n    responseError: This node\
        \ contains responseError. \n    timesServer: This node contains the value\
        \ of timesServer. \n    axesCount: This node contains axesCount.\n    VSRS:\
        \ VSRS.\n    RS: RS.\n    ipPort: ipPort.\n    responseWarning:responseWarning.\n\
        \    periodEnd: periodEnd.\n    type: reqsec.\n    periodEndNow: periodEndNow.\n\
        \    columns:columns.\n    timesUtc: timesUtc.\n"
      responses:
        "200":
          description: Json object of response of service /GET/48
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditIPServiceResp_widget1'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/51?iAction=1&iType=3:
    post:
      tags:
      - Dashboard
      summary: Show System Widget
      description: "This service is used for show system widget. \n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    Section_Name: widget section name. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DashSystemWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=1&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashSystemWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=1&iType=1:
    post:
      tags:
      - Dashboard
      summary: Show Event Widget
      description: "This service is used for show event widget.\n\n   JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    Section_Name: widget section name. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DashEventWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashEventWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=1&iType=4:
    post:
      tags:
      - Dashboard
      summary: Show IPStatus Widget
      description: "This service is used for show ipstatus widget.\n\n JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    Section_Name: widget section name. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DashIPStatusWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=1&iType=4
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashIPStatusWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=1&iType=2:
    post:
      tags:
      - Dashboard
      summary: Show IPService Widget
      description: "This service is used for show IPService widget.\n\n JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    Section_Name: widget section name. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DashIPServiceWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=1&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashIPServiceWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=1&iType=6:
    post:
      tags:
      - Dashboard
      summary: Show Interface Widget
      description: "This service is used for show interface widget.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    Section_Name: widget section name.  \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DashInterfaceWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=1&iType=6
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashInterfaceWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=1&iType=5:
    post:
      tags:
      - Dashboard
      summary: Remove Widget
      description: "This service is used for remove widget.\n\n  JSON that needs to\
        \ be sent as request payload, Should contains given information-\n  \n   \
        \ Section_Name: widget section name.  \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DashInterfaceWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=1&iType=5
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashRemoveWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=3&iType=1:
    post:
      tags:
      - Dashboard
      summary: Default Widget
      description: "This service is used for show default dashboard.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    Test:  \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DefaultWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=2&iType=3:
    post:
      tags:
      - Dashboard
      summary: Default System Widget
      description: "This service is used for show default system widget.\n\n  JSON\
        \ that needs to be sent as request payload, Should contains given information-\n\
        \  \n    Section_Name: widget section name.  \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DefaultSystemWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=2&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultSystemWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=2&iType=1:
    post:
      tags:
      - Dashboard
      summary: Default Event Widget
      description: "This service is used for show default Event widget.\n\n  JSON\
        \ that needs to be sent as request payload, Should contains given information-\n\
        \  \n    Section_Name: widget section name.  \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DefaultEventWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultEventWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=2&iType=4:
    post:
      tags:
      - Dashboard
      summary: Default IPStatus Widget
      description: "This service is used for show default IPStatus widget.\n\n  JSON\
        \ that needs to be sent as request payload, Should contains given information-\n\
        \  \n    Section_Name: widget section name.  \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DefaultIPStatusWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=2&iType=4
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultIPStatusWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=2&iType=2:
    post:
      tags:
      - Dashboard
      summary: Default IPService Widget
      description: "This service is used for show default IPService widget.\n\n  JSON\
        \ that needs to be sent as request payload, Should contains given information-\n\
        \  \n    Section_Name: widget section name.  \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DefaultIPServiceWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=2&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultIPServiceWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/21:
    get:
      tags:
      - Date & Time
      summary: Date and time page data
      description: "This service is used to FETCH date and time data, it uses three\
        \ API structure.\n\n  Setup_SetTime: Used to get current time.\n\n  Setup_TimeServer:\
        \ Used to get URL of time server to synchronize.\n\n  Setup_TimeChecks: Used\
        \ to get other Synchrinization settings(updated at, period and timezone).\n\
        \n  The nodes of JSON received, contains the given information-\n  \n    \
        \   NTPTimeZoneCombo:\n      NTPTypeCombo: This node contains options of NTP\
        \ type such as SNTP, TCP, UDP.\n      NTPType: This node contains the id of\
        \ item that user selected from NTP Type combo.\n      DateTime: This node\
        \ contains current date and time.\n      NtpTimeServer: This node contains\
        \ NTP time server for time synchronization.\n      NtpTimeUpdate: This node\
        \ contains NTP time update at.\n      NtpPeriodUpdate: This node contains\
        \ NTP time update period.\n      NtpTimeZone:\n      Enabled: This node contains\
        \ NTP 'true/false' value\n"
      responses:
        "200":
          description: Json object of response of service /GET/21
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_SetTime'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/21?iAction=1&iType=1:
    post:
      tags:
      - Date & Time
      summary: Update current date time
      description: "This service is used to update current date and time, you have\
        \ to send date time as TimeOfDay=date(DD/MM/YYYY) H|M|S, with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    NtpTimeZone: id(Received as id in GET/21 service,\
        \ node NTPTimeZoneCombo) of option selected from Time Zone options.\n    TimeOfDay:\
        \ current System Time. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Setup_UpdateTime'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/21?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_SetTime'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/21?iAction=1&iType=2:
    post:
      tags:
      - Date & Time
      summary: Update server time details
      description: "This service is used to update server time detaiils for date and\
        \ time sync, you have to send server time details, with POST request json.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    NTPType: id(Received as id in GET/21 service, node NTPTypeCombo)\
        \ of option selected from NTP Type options.\n    Timeserver: Timeserver url.\n\
        \    Updated: Update time. \n    Updateperiod: Update Period.\n    Enabled:\
        \ 0 or 1.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Setup_UpdateServer'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/21?iAction=1&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_SetTime'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/17:
    get:
      tags:
      - Email Events
      summary: Email events page data
      description: "This service is used to FETCH E-MAIL Events data, it uses one\
        \ API structure.\n\n  EmailEvents_All: Used to get Email events setings.\n\
        \  \n  The nodes of JSON received, contains the given information\n  \n  \
        \  SecurityCombo: This node contains options of security such as SSL and TLS.\n\
        \    CEERemoteEmailAddress: This node contains Email address for Send E-mail.\n\
        \    CEELocalEmailAddress: This node contains Return E-Mail address.\n   \
        \ CEEMailServer: This node contains Host Address.\n    CEEPort: This node\
        \ contains Port.\n    CEETimeout: This node contains Timeout.\n    CEEAuthorisationRequired:\
        \ This node contains '1', if authorization required.\n    CEESecurity: This\
        \ node contains information of type of security such as SSL or TLS.\n    CEEMailServerLogon:\
        \ This node contains Mail server account name\n    CEEEvIpServiceNoticeEnabled:\
        \ This node have 1 if IP service notice enabled. \n    CEEEvIpServiceNoticeText:\
        \ This node have ip service notice text.\n    CEEEvIpServiceAlertTextEnabled:\
        \ This node have 1 if IP service alert text enabled.\n    CEEEvIpServiceAlertText:\
        \ This node have ip service alert text.\n    CEEEvChannelNoticeEnabled: This\
        \ node have 1 if VS notice enabled. \n    CEEEvChannelNoticeText: This node\
        \ have VS notice text.\n    CEEEvChannelAlertEnabled: This node have 1 if\
        \ VS alert text enabled.\n    CEEEvChannelAlertText: This node have VS alert\
        \ text.\n    CEEEvContentServerNoticeEnabled: This node have 1 if real server\
        \ notice enabled. \n    CEEEvContentServerNoticeText: This node have real\
        \ server notice text.\n    CEEEvContentServerAlertEnabled: This node have\
        \ 1 if real server alert text enabled.\n    CEEEvContentServerAlertText: This\
        \ node have real server alert text.\n    CEEEvFlightPathEnabled: This node\
        \ have 1 if flightpath notice enabled. \n    CEEEvFlightPathText: This node\
        \ have flightpath notice text.\n    CEEGroupEnabled: This node have 1 if group\
        \ notice enabled. \n    CEEGroupText: This node have group notice text.\n\
        \    CEEGroupTime: This node have group time.\n    CEEEvDiskSpaceEnabled:\
        \ This node have 1 if disk space notice enabled.\n    CEEEvDiskSpaceText:\
        \ This node have disk space notice text.\n    CEEEvLicenceRenevalEnabled:\
        \ This node have 1 if Licence Reneval notice enabled.\n    CEEEvLicenceRenevalText:\
        \ This node have Licence Reneval text.\n    CEEEvDiskSpacePercent: This node\
        \ have disk space percentage.\n    CEEEvTestTempFile:\n    CEEEvTestProcessID:\n\
        \    CEEEvTestEndTime:\n    CEEEvTestStatus:\n"
      responses:
        "200":
          description: Json object of response of service /GET/17
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Emailevents_All'
                x-content-type: application/json
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/17?iAction=9&iType=9&CEE_TestPid=38555&CEE_TestEndtime=&CEE_TestTempfile=mailtestpi6Qbd:
    get:
      tags:
      - Email Events
      summary: Email events test
      description: "This service is used to FETCH E-MAIL Events data, it uses one\
        \ API structure.\n\n  EmailEvents_All: Used to get Email events setings.\n\
        \  \n  The nodes of JSON received, contains the given information\n  \n  \
        \  SecurityCombo: This node contains options of security such as SSL and TLS.\n\
        \    CEERemoteEmailAddress: This node contains Email address for Send E-mail.\n\
        \    CEELocalEmailAddress: This node contains Return E-Mail address.\n   \
        \ CEEMailServer: This node contains Host Address.\n    CEEPort: This node\
        \ contains Port.\n    CEETimeout: This node contains Timeout.\n    CEEAuthorisationRequired:\
        \ This node contains '1', if authorization required.\n    CEESecurity: This\
        \ node contains information of type of security such as SSL or TLS.\n    CEEMailServerLogon:\
        \ This node contains Mail server account name\n    CEEEvIpServiceNoticeEnabled:\
        \ This node have 1 if IP service notice enabled. \n    CEEEvIpServiceNoticeText:\
        \ This node have ip service notice text.\n    CEEEvIpServiceAlertTextEnabled:\
        \ This node have 1 if IP service alert text enabled.\n    CEEEvIpServiceAlertText:\
        \ This node have ip service alert text.\n    CEEEvChannelNoticeEnabled: This\
        \ node have 1 if VS notice enabled. \n    CEEEvChannelNoticeText: This node\
        \ have VS notice text.\n    CEEEvChannelAlertEnabled: This node have 1 if\
        \ VS alert text enabled.\n    CEEEvChannelAlertText: This node have VS alert\
        \ text.\n    CEEEvContentServerNoticeEnabled: This node have 1 if real server\
        \ notice enabled. \n    CEEEvContentServerNoticeText: This node have real\
        \ server notice text.\n    CEEEvContentServerAlertEnabled: This node have\
        \ 1 if real server alert text enabled.\n    CEEEvContentServerAlertText: This\
        \ node have real server alert text.\n    CEEEvFlightPathEnabled: This node\
        \ have 1 if flightpath notice enabled. \n    CEEEvFlightPathText: This node\
        \ have flightpath notice text.\n    CEEGroupEnabled: This node have 1 if group\
        \ notice enabled. \n    CEEGroupText: This node have group notice text.\n\
        \    CEEGroupTime: This node have group time.\n    CEEEvDiskSpaceEnabled:\
        \ This node have 1 if disk space notice enabled.\n    CEEEvDiskSpaceText:\
        \ This node have disk space notice text.\n    CEEEvLicenceRenevalEnabled:\
        \ This node have 1 if Licence Reneval notice enabled.\n    CEEEvLicenceRenevalText:\
        \ This node have Licence Reneval text.\n    CEEEvDiskSpacePercent: This node\
        \ have disk space percentage.\n    CEEEvTestTempFile:\n    CEEEvTestProcessID:\n\
        \    CEEEvTestEndTime:\n    CEEEvTestStatus:\n"
      responses:
        "200":
          description: Json object of response of service /GET/17?iAction=9&iType=9&CEE_TestPid=38555&CEE_TestEndtime=&CEE_TestTempfile=mailtestpi6Qbd
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Emailevents_All'
                x-content-type: application/json
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/17?iAction=1&iType=1:
    post:
      tags:
      - Email Events
      summary: Update email event
      description: "This service is used to update email events detaiils, you have\
        \ to send email events details, with POST request json.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    CEEAuthorisationRequired: set \"true\" if authorization required.\n \
        \   CEEEMailServerPassword: Mail server password.\n    CEELocalEmailAddress:\
        \ E-Mail address.\n    CEEMailServer: Host Address.\n    CEEMailServerLogon:\
        \ Mail server account name.\n    CEEPort: Port address.\n    CEERemoteEmailAddress:\
        \ Email address for Send E-mail.\n    CEESecurity: security \n    CEETimeout:\
        \ Timeout.\n    Test: set \"true\" if want to send test mail with update otherwise\
        \ set \"false\" to only update.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Update_emailEvent'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/17?iAction=1&iType=1
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Emailevents_All'
                x-content-type: application/json
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/17?iAction=2&iType=1:
    post:
      tags:
      - Email Events
      summary: Test Break email event
      description: "This service is used to update email events detaiils, you have\
        \ to send email events details, with POST request json.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    CEEAuthorisationRequired: set \"true\" if authorization required.\n \
        \   CEEEMailServerPassword: Mail server password.\n    CEELocalEmailAddress:\
        \ E-Mail address.\n    CEEMailServer: Host Address.\n    CEEMailServerLogon:\
        \ Mail server account name.\n    CEEPort: Port address.\n    CEERemoteEmailAddress:\
        \ Email address for Send E-mail.\n    CEESecurity: security \n    CEETimeout:\
        \ Timeout.\n    Test: set \"true\" if want to send test mail with update otherwise\
        \ set \"false\" to only update.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Update_emailEvent'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/17?iAction=2&iType=1
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Emailevents_All'
                x-content-type: application/json
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/17?iAction=1&iType=2:
    post:
      tags:
      - Email Events
      summary: Notifications details
      description: "This service is used to update notifications details, you have\
        \ to send notifications details, with POST request json.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    CEEEvChannelAlertEnabled: set \"true\" if VS alert text enabled.\n  \
        \  CEEEvChannelAlertText: VS alert text.\n    CEEEvChannelNoticeEnabled: set\
        \ \"true\" if channel notice enabled. \n    CEEEvChannelNoticeText: channel\
        \ notice text.\n    CEEEvContentServerAlertEnabled: set \"true\" if real server\
        \ alert text enabled.\n    CEEEvContentServerAlertText: real server alert\
        \ text.\n    CEEEvContentServerNoticeEnabled:\n    CEEEvContentServerNoticeText:\n\
        \    CEEEvFlightPathEnabled: set \"true\" if flightpath notice enabled. \n\
        \    CEEEvFlightPathText: flightpath notice text.\n    CEEEvIpServiceAlertTextEnabled:\
        \ set \"true\" if IP service alert text enabled.\n    CEEEvIpServiceAlertText:\
        \ ip service alert text.\n    CEEEvIpServiceNoticeEnabled: set \"true\" if\
        \ IP service notice enabled. \n    CEEEvIpServiceNoticeText: ip service notice\
        \ text.\n    CEEGroupEnabled: set \"true\" if group notice enabled. \n   \
        \ CEEGroupText: group notice text.\n    CEEGroupTime: group time.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Notification_emailEvent'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/17?iAction=1&iType=2
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Emailevents_All'
                x-content-type: application/json
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/17?iAction=1&iType=3:
    post:
      tags:
      - Email Events
      summary: Warning details
      description: "This service is used to update warnings details, you have to send\
        \ warnings details, with POST request json.\n\n  JSON that needs to be sent\
        \ as request payload, Should contains given information-\n  \n    CEEEvDiskSpaceEnabled:\
        \ set \"true\" if disk space notice enabled.\n    CEEEvDiskSpaceText: disk\
        \ space notice text.\n    CEEEvLicenceRenevalEnabled: set \"true\" if Licence\
        \ Reneval notice enabled.\n    CEEEvLicenceRenevalText: Licence Reneval text.\n\
        \    CEEEvDiskSpacePercent: disk space percentage.\n"
      parameters:
      - name: iAction
        in: query
        description: "1"
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: integer
      - name: iType
        in: query
        description: "3"
        required: true
        style: form
        explode: true
        schema:
          type: number
          format: integer
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Warnings_emailEvent'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/17?iAction=1&iType=3
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Emailevents_All'
                x-content-type: application/json
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/11?isPageLoad=true:
    get:
      tags:
      - flightPATH
      summary: flightPATH page data
      description: "This service is used to FETCH all data for flightPATH page, it\
        \ uses one API structures-\n\n  Config_FlightPath: Used to get all flightPATH\
        \ and their Condition, evaluation and action settings details.\n  \n  The\
        \ nodes of JSON received, contains the given information\n  \n    dataset:\
        \ This node contains information of all flighPATHs.\n    fId: This node contains\
        \ index of flightPATH row.\n    flightPathName: This node contains name of\
        \ flightPATH.\n    flightPathDesc: This node contains description of flightPATH.\n\
        \    DiagnosticTracing: This node contains diagnostic tracing enabled or not.\n\
        \    flightPathInUse: This node contains all VS's IP address with which this\
        \ flightPATH is in use.\n    conditions: This node contains information of\
        \ all Conditions applied on a flightPATH.\n    cId: This node contains index\
        \ of condition row.\n    condition: This node contains condition.\n    sense:\
        \ This node contains sense.\n    check: This node contains check.\n    match:\
        \ This node contains match.\n    condValue: This node contains Condition value.\n\
        \    values: This node contains information of all evaluation applied on a\
        \ flightPATH.\n    vId: This node contains index of evaluation row.\n    variable:\
        \ This node contains variable.\n    source: This node contains source.\n \
        \   detail: This node contains details.\n    valValue: This node contains\
        \ evaluation value.\n    actions: This node contains information of all actions\
        \ applied on a flightPATH.\n    aId: This node contains index of action row.\n\
        \    data: This node contains data.\n    action: This node contains action.\n\
        \    target: This node contains target.\n    conditionId:conditionId.\n  \
        \  valuesId:valuesId.\n    actionId:actionId.\n    FilterKeyword:FilterKeyword.\n"
      responses:
        "200":
          description: Json object of response of service /GET/11?isPageLoad=true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/12:
    get:
      tags:
      - flightPATH
      summary: flightPATH combo options
      description: "This service is used to FETCH all data for Combo boxes of flightPATH\
        \ page, we created a separate services to get combo box values because we\
        \ need them just once when page loaded i. e. They are not changed on each\
        \ update of flightPATH page, it uses one API structure \n\n  Config_FlightPath:\
        \ Used to get all combo box(drop down) values used in flightPATH page-\n \
        \ \n  The nodes of JSON received, contains the given information\n  \n   \
        \ SenseCombo: This node contains options of all senses.\n    CheckCombo: This\
        \ node contains options of all Checks.\n    SourceCombo: This node contains\
        \ options of all sources.\n    languageCombo: This node contains options of\
        \ all languages.\n    conditionCombo: This node contains options of all conditions.\n\
        \    MatchCombo: This node contains options of all matches.\n    ConValueCombo:\
        \ This node contains options of all condition value.\n    ActionCombo: This\
        \ node contains options of all actions.\n    CountryCombo: This node contains\
        \ options of all country.\n    AuthRuleCombo: This node contains options of\
        \ authentication rules.\n"
      responses:
        "200":
          description: Json object of response of service /GET/12
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_Combo'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/11?iAction=1&iType=1:
    post:
      tags:
      - flightPATH
      summary: add new flightPATH
      description: |
        This service is used to add new flightPATH in flightPATH grid.
          JSON that needs to be sent as request payload, Should contains given information- not required to send json.
      parameters:
      - name: FilterKeyword
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/11?iAction=2&iType=1&FilterKeyword="":
    post:
      tags:
      - flightPATH
      summary: update flightPATH
      description: "This service is used to update details in flightPATH grid, you\
        \ have to send id of row with data, that needs to be updated, with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    fid : index(Received as fid in GET/11 service)\
        \ of flightPATH that needs to be updated.\n    flightPathName : Flightpath\
        \ Name.\n    flightPathDesc : Flightpath description.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/flightPath_Update'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=2&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/11?iAction=3&iType=1&FilterKeyword="":
    post:
      tags:
      - flightPATH
      summary: Remove flightPATH
      description: "This service is used to remove flightPATH rule from flightPATH\
        \ grid, you have to send id of row, that needs to be removed, with POST request\
        \ json. \n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    fid: index(Received as id in GET/11 service)\
        \ of flightPATH that needs to be deleted.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/flightPath_Remove'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=3&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/11?iAction=4&iType=1&FilterKeyword="":
    post:
      tags:
      - flightPATH
      summary: Add new condition
      description: "This service is used to add new Condition for a flightPATH in\
        \ flightPATH Condition grid. you have to send id of flightPATH, with POST\
        \ request json. \n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-.\n  \n    fid: index(Received as fid in GET/11\
        \ service) of flightPATH for that condition needs to be added.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/flightPath_AddCon'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=4&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/11?iAction=5&iType=1&FilterKeyword="":
    post:
      tags:
      - flightPATH
      summary: Update condition
      description: "This service is used to update details in flightPATH condition\
        \ grid, you have to send id of flightPATH with id of row and data, that needs\
        \ to be updated, with POST request json. \n\n  JSON that needs to be sent\
        \ as request payload, Should contains given information-\n  \n    fid: index(Received\
        \ as fid in GET/11 service) of flightPATH for that condition needs to be updated.\n\
        \    cid: index(Received as cid in GET/11 service) of conditions that needs\
        \ to updated.\n    condition : id(Received as id in GET/12 service, node ActionCombo)\
        \ of option selected from Condition options.\n    match: id(Received as id\
        \ in GET/12 service, node ConValueCombo) of option selected from match options.\n\
        \    sense: id(Received as id in GET/12 service, node SenseCombo) of option\
        \ selected from sense options.\n    check: id(Received as id in GET/12 service,\
        \ node CheckCombo) of option selected from check options.\n    condValue:\
        \ \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/flightPath_UpdateCon'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=5&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/11?iAction=6&iType=1&FilterKeyword="":
    post:
      tags:
      - flightPATH
      summary: Remove condition
      description: "This service is used to remove row in flightPATH condition grid,\
        \ you have to send id of flightPATH with id of row, that needs to be removed,\
        \ with POST request json.\n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information-\n  \n    fid: index(Received as fid in\
        \ GET/11 service) of flightPATH for condition needs to be deleted.\n    cid:\
        \ index(Received as cid in GET/11 service) of conditions that needs to delete.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/flightPath_RemoveCon'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=6&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/11?iAction=7&iType=1&FilterKeyword="":
    post:
      tags:
      - flightPATH
      summary: add evaluation
      description: "This service is used to add new evaluation for a flightPATH in\
        \ flightPATH evaluation grid. you have to send id of flightPATH, with POST\
        \ request json. \n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-\n  \n    fid: index(Received as fid in GET/11\
        \ service) of flightPATH for that evaluation needs to be added.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/flightPath_AddEva'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=7&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/11?iAction=8&iType=1&FilterKeyword="":
    post:
      tags:
      - flightPATH
      summary: Update Evaluation
      description: "This service is used to update details in flightPATH evaluation\
        \ grid, you have to send id of flightPATH with id of row and data, that needs\
        \ to be updated, with POST request json.\n\n  JSON that needs to be sent as\
        \ request payload, Should contains given information-\n  \n    fid: index(Received\
        \ as fid in GET/11 service) of flightPATH for evaluation needs to be updated.\n\
        \    vid: index(Received as vid in GET/11 service) of values that needs to\
        \ updated.\n    variable: variable\n    source: id(Received as id in GET/12\
        \ service, node SourceCombo) of option selected from Source options.\n   \
        \ Detail: id(Received as id in GET/12 service, node ConValueCombo) of option\
        \ selected from Detail options.\n    valValue: valValue\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/flightPath_UpdateEva'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=8&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/11?iAction=9&iType=1&FilterKeyword="":
    post:
      tags:
      - flightPATH
      summary: Remove evaluation
      description: "This service is used to remove row in flightPATH evaluation grid,\
        \ you have to send id of flightPATH with id of row, that needs to be removed,\
        \ with POST request json.\n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information-\n  \n    fid: index(Received as fid in\
        \ GET/11 service) of flightPATH for evaluation needs to be deleted.\n    cId:\
        \ index(Received as vid in GET/11 service) of evaluation needs to be deleted.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/flightPath_RemoveEva'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=9&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/11?iAction=10&iType=1&FilterKeyword="":
    post:
      tags:
      - flightPATH
      summary: Add Action
      description: "This service is used to add new action for a flightPATH in flightPATH\
        \ action grid. you have to send id of flightPATH, with POST request json.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    fid: index(Received as fid in GET/11 service) of flightPATH for action\
        \ needs to be added.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/flightPath_AddAct'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=10&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/11?iAction=11&iType=1&FilterKeyword="":
    post:
      tags:
      - flightPATH
      summary: Update Action
      description: "This service is used to update details in flightPATH action grid,\
        \ you have to send id of flightPATH with id of row and data, that needs to\
        \ be updated, with POST request json. \n\n  JSON that needs to be sent as\
        \ request payload, Should contains given information-\n  \n    fid: index(Received\
        \ as fid in GET/11 service) of flightPATH for Action needs to be update.\n\
        \    aid: index(Received as aid in GET/11 service) of actions that needs to\
        \ updated.\n    action: id(Received as id in GET/12 service, node ActionCombo)\
        \ of option selected from Action options.\n    target: id(Received as id in\
        \ GET/12 service, node ConValueCombo) of option selected from Target options.\n\
        \    data: Action data \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/flightPath_UpdateAct'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=11&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/11?iAction=12&iType=1&FilterKeyword="":
    post:
      tags:
      - flightPATH
      summary: Remove action
      description: "This service is used to remove row in flightPATH action grid,\
        \ you have to send id of flightPATH with id of row, that needs to be removed,\
        \ with POST request json.\n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information-\n  \n    fid: index(Received as fid in\
        \ GET/11 service) of flightPATH for action needs to be deleted.\n    aid:\
        \ index(Received as aid in GET/11 service) of action that needs to be deleted.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/flightPath_RemoveAct'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/11?iAction=12&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/flightPath_RespData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/47:
    get:
      tags:
      - Global Settings
      summary: Global Settings page data
      description: "This service is used to FETCH Global settings data like crypto\
        \ library used, it uses one API structure. \n  AdvGlobalSetting: Used to get\
        \ global settings. \n  \n  The nodes of JSON received, contains the given\
        \ information\n  \n    GlobalSettingListString: This node contains options\
        \ of cryptographic library can be used like SSL and YASSL.\n    CryptoLib:\
        \ This node contains the value of current crypto lib used.\n    HostCacheTimer:\
        \ This node contains the value of host cache timer(in seconds).\n    LdapTimeout:\
        \ This node contains information of Authentication server time out.\n    DrainClearPersistence:\
        \ This node contains the value of DrainClearPersistence.\n"
      responses:
        "200":
          description: Json object of response of service /GET/47
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobSetting_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/47?iAction=1&iType=1:
    post:
      tags:
      - Global Settings
      summary: Update SSL Cryptographic Library
      description: "This service is used to update cryptographic library used.\n\n\
        \  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    CryptoLib: id(Received as id in GET/47 service, node GlobalSettingListString)\
        \ of option selected from crypto lib options. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Glob_UpdateCrypto'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/47?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobSetting_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/47?iAction=1&iType=2:
    post:
      tags:
      - Global Settings
      summary: Update Host Cache Timer
      description: "This service is used to update Host Cache Timer.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    HostCacheTimer: This node contains the value of host cache timer(in\
        \ seconds). \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Glob_UpdateHChacheTimer'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/47?iAction=1&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobSetting_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/47?iAction=1&iType=3:
    post:
      tags:
      - Global Settings
      summary: Update drain
      description: "This service is used to update drain. \n  \n  JSON that needs\
        \ to be sent as request paylad,  Should contains given information-\n  \n\
        \    DrainClearPersistence: This node contains either 0 or 1. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Glob_UpdateDrain'
        required: true
      responses:
        "200":
          description: Json object of response of service /api/47?iAction=1&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobSetting_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/47?iAction=1&iType=4:
    post:
      tags:
      - Global Settings
      summary: Update authentication-setting
      description: "This service is used to update authentication setting.  \n  \n\
        \  JSON that needs to be sent as request payload,  Should contains given information--\n\
        \  \n    LdapTimeout: This node contains the value of authentication server\
        \ timeout. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Glob_UpdateAuthenticationSetting'
        required: true
      responses:
        "200":
          description: Json object of response of service /api/47?iAction=1&iType=4
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobSetting_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/32:
    get:
      tags:
      - History
      summary: History page data
      description: |
        This service is used to FETCH History settings(RRD database enabled, backup and restore etc) data, it uses one API structure.

          RRDtool: Used to get Backup, restore and other information of current RRD database.

          The nodes of JSON received, contains the given information-

            CRRD_Enabled: This node contains information that if RRD database enabled.
            CRRD_Interval: This node contains interval for RRD.
            CRRD_Last: This node contains last date of RRD.
            CRRD_LastRed: This node contains last error date.
            CRRD_LastMsg: This node contains last error messsage.
            CRRD_BackupName: This node contains the backup options.
            CRRD_DeleteName: This node contains the delete options.
            CRRD_RestoreName: This node contains restore options.
            CRRD_HasCurrent: This node contains information of if RRD has current database.
            dataset:dataset.
      responses:
        "200":
          description: Json object of response of service /GET/32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/31?iAction=1&iType=2:
    post:
      tags:
      - History
      summary: Update RRD status and time interval
      description: "This service is used to update RRD status and time interval, you\
        \ have to send CRRD_Enabled=('ON' to enable otherwise 'OFF') and CRRD_Interval=(time\
        \ in seconds 1 to 60) , with POST request json.\n\n  JSON that needs to be\
        \ sent as request payload, Should contains given information-\n  \n    CRRD_Enabled:\
        \ set CRRD_Enabled='ON' to enable otherwise 'OFF'.\n    CRRD_Interval: CRRD\
        \ Interval.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RRDUpdate'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/31?iAction=1&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/31?iAction=1&iType=4:
    post:
      tags:
      - History
      summary: Save backup
      description: "This service is used to save backup of RRD database, you have\
        \ to send CRRD_BackupName=(select from available databases), with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    CRRD_BackupName:\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RRDSave'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/31?iAction=1&iType=4
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/31?iAction=1&iType=7:
    post:
      tags:
      - History
      summary: Save backup
      description: "This service is used to save backup of RRD database, you have\
        \ to send CRRD_BackupName=(select from available databases), with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    CRRD_BackupName:\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RRDSave'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/31?iAction=1&iType=7
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/31?iAction=1&iType=5:
    post:
      tags:
      - History
      summary: Delete RRD database
      description: "This service is used to delete a RRD database, you have to send\
        \ CRRD_DeleteName=(select from available databases), with POST request json.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    CRRD_DeleteName : Database name for delete.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RRDDelete'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/31?iAction=1&iType=5
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/31?iAction=1&iType=6:
    post:
      tags:
      - History
      summary: Restore RRD database
      description: "This service is used to restore a RRD database, you have to send\
        \ CRRD_RestoreName=(select from available databases), with POST request json.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\
        \ \n\n    CRRD_RestoreName : Restore database name.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RRDRestore'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/31?iAction=1&iType=6
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/History_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/9?isPageLoad=true:
    get:
      tags:
      - IP Services
      summary: IP Services page data
      description: "This service is used to FETCH all data for IP services page, it\
        \ uses two API structures\n\n  Setup_IPServices: Used to get all virtual services\
        \ and thier real server's inforamtion.\n\n  Setup_Cluster: Used to get information,\
        \ if ALB is clustered with other ALB.\n\n  JSON returned, Contains given information-\n\
        \  \n     ipService: This node contains information of a Virtual Services,\
        \ their real server and other settings. \n      sId: This node contains information\
        \ of index of each VS. \n      InterfaceID: This node contains index of each\
        \ interface(VIP) which needed to update or delete that VIP. \n      ChannelID:\
        \ This node contains index of each channel(VS) which needed to update or delete\
        \ that VS. \n      ipAddr: This node contains IP Address. \n      subnetMask:\
        \ This node contains subnet mask. \n      serviceName: This node contains\
        \ service name. \n      localPortEnabledChecked:  This node contains true\
        \ if VS is enabled.  \n      interfaceImagePath:This node contains image path\
        \ for VIP to show status lights. \n      interfaceStatusReason: This node\
        \ contains status reason to show as tooltip of status image for VIP. \n  \
        \    channelImagePath: This node contains image path for VS to show status\
        \ lights. \n      channelStatusReason: This node contains status reason to\
        \ show as tooltip of status image for VS. \n      primaryChecked: This node\
        \ contains \"active/passive\" if ALB is clustered otherwise true if check\
        \ for manual mode and standalone for standalone mode in clutering. \n    \
        \  serviceType: This node contains service type. \n      maxConn: This node\
        \ contains maximum connection allowed. \n      contentServerGroupName: This\
        \ node contains real server group name. \n      enableConnectionPool: This\
        \ node contains true if connection pool is enabled. \n      connectionPoolSize:\
        \ This node contains connection pool size. \n      serverMonitoring: This\
        \ node contains monitoring policy. \n      loadBalancingPolicy: This node\
        \ contains load balancing policy. \n      connectivity: This node contains\
        \ connectivity used. \n      acceleration: This node contains accelaration.\
        \ \n      sslCertificate: This node contains server SSL certificate. \n  \
        \    sslClientCertificate: This node contains client ssl certificate. \n \
        \     cachingRule: This node contains caching strategy. \n      monitoringInterval:\
        \ This node contains monitoring interval. \n      monitoringTimeout: This\
        \ node contains monitoring timeout. \n      ConnectionTimeout: This node contains\
        \ connection timeout. \n      InCount: This node contains In Count. \n   \
        \   offlinonfailure: This node contains information of Switch to offline on\
        \ failure.\n      OutCount: This node contains Out Count. \n      sslRenegotiation:\
        \ This node contains on/off value. \n      SecurityLog: This node contains\
        \ on/off value. \n      CipherName: This node contains Cipher Name. \n   \
        \   flightPath: This node contains list of all flightpath. \n      fId: This\
        \ node contains information of index of each flightpath. \n      flightPathSelected:\
        \ If this node contains 0 then it's not applied to this VS, otherwise it shows\
        \ priority of applied flightpath on that VS. \n      Name: This node contains\
        \ name of flightpath. \n      contentServer: This node contains list of all\
        \ real servers. \n      cId: This node contains information of index of each\
        \ real server. \n      imagePath: This node contains image path for real server\
        \ to show status lights. \n      statusReason: This node contains status reason\
        \ to show as tooltip of status image for RS.\n      CSActivity:  \n      CSIPAddr:\
        \ This node contains IP Address of real server. \n      CSPort: This node\
        \ contains port of real server. \n      CSNotes: This node contains notes\
        \ of real server. \n      WeightFactor: This node contains weight factor of\
        \ real server.\n      WeightFactorCalculated: This node contains calculated\
        \ weight factor of real server.\n      ServerKey: This node contains config\
        \ ID.\n      FilterKeyword: FilterKeyword.\n      InterfaceKey:InterfaceKey.\n\
        \      ChannelKey:ChannelKey.\n      MaskState:MaskState.\n      SNIDefaultCertificateName:SNIDefaultCertificateName.\n\
        \      CServerId:CServerId.\n"
      responses:
        "200":
          description: Json object of response of service /GET/9?isPageLoad=true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServices'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/29:
    get:
      tags:
      - IP Services
      summary: IP Services page combo options
      description: "This service is used to FETCH all data for Combo boxes of IP services\
        \ page, we created a separate services to get combo box values because we\
        \ need them just once when page loaded i. e. They are not changed on each\
        \ update of IP services page, it uses one API structure\n\n  Setup_IPServices:\
        \ Used to get all combo box(drop down) values used in IP services page.\n\
        \  \n  JSON returned, Contains given information-\n  \n    ServiceTypeCombo:\
        \ This node contains options of all available service types. \n    SSLCertCombo:\
        \ This node contains options of all available SSL Certificates that can be\
        \ applied on VS. \n    CacheRuleCombo: This node contains options of all cache\
        \ types. \n    MonitorPolicyCombo: This node contains options of all Monitoring\
        \ policy available, you can create or upload custom monitor in Real server\
        \ monitor page.\n    SSLClientCertCombo: This node contains options of all\
        \ available SSL Certificates that can be applied on a Real server. \n    LBPolicyCombo:\
        \ This node contains options of all Load Balancing policy \n    LBPolicyFTPCombo:\
        \ This node contains options of all Load Balancing policy when service type\
        \ selected is FTP. \n    ConnectivityCombo: This node contains options of\
        \ connectivity that can be selected for a VS. \n    CSActivityCombo: This\
        \ node contains options of all activities that can be selected for a real\
        \ server. \n    AccelerateCombo: This node contains all acceleration options.\
        \ \n    FlightPathSelectionList: This node contains all selected flightpaths.\
        \ \n    SSLCipherListString: This node contains options of all Cipher.\n \
        \   SNICertificateListString: This node contains options of all SNI Certificate.\n\
        \    SSLRenegotiationString: This node contains options of all SSL Renegotiation.\n\
        \    SecurityLogString: This node contains options of all Security Log.\n\
        \    isNoVIP:\n"
      responses:
        "200":
          description: Json object of response of service /GET/29
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicescombo'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/9?iAction=3&iType=1&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Add/Copy Virtual Service
      description: "This service is used to ADD/Copy Virtual Service. JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    CopyVIP: set to 1 if it's update request after copy VIP, otherwise 0.\
        \ \n    editedInterface: index(Received as InterfaceID in GET/9 service) of\
        \ interface that needs to add/copy. \n    editedChannel: index(Received as\
        \ ChannelID in GET/9 service) of channel that needs to copy. \n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CopyIPAddress'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=3&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=2&iType=1&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Update Virtual Service
      description: "This service is used to UPDATE Virtual Service, In case of update\
        \ after COPY request send \"CopyVIP\":\"1\" (It'll copy all real server and\
        \ settings of a VS to a new VS), with POST request json.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    CopyVIP: set to 1 if it's update request after copy VIP, otherwise 0.\
        \ \n    editedInterface: index(Received as InterfaceID in GET/9 service) of\
        \ interface that needs to updated. \n    editedChannel: index(Received as\
        \ ChannelID in GET/9 service) of channel that needs to updated. \n    IpAddr:\
        \ IP address of VS. \n    localPortEnabledChecked: if enabled checked for\
        \ VS then send 'true' otherwise 'false'. \n    primaryChecked: send 'true'\
        \ to set primary, if manual mode in clustering. \n    interfaceImagePath:\
        \ interface image path. \n    port: PORT of VS. \n    serviceName: Service\
        \ name. \n    serviceType: id(Received as id in GET/29 service, node ServiceTypeCombo)\
        \ of option selected from service type options. \n    subnetMask: Subnet mask.\n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CopyIP'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=2&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=3&iType=4&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Remove Virtual Service
      description: "This service is used to REMOVE Virtual Service, you have to send\
        \ Interface id and channel id , that needs to be removed, with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    editedInterface: index(Received as InterfaceID\
        \ in GET/9 service) of interface that needs to removed.\n    editedChannel:\
        \ index(Received as ChannelID in GET/9 service) of channel that needs to removed.\n"
      parameters:
      - name: FilterKeyword
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RemoveIP'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=3&iType=4&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=3&iType=2&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Add Port
      description: "This service is used to Add PORT, you have to send Interface id\
        \ and channel id , to which real server needs to be added, with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    editedInterface: index(Received as InterfaceID\
        \ in GET/9 service) of interface to which real server needs to be added. \n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddServer'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=3&iType=2&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=3&iType=3&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Add/Copy Real Server
      description: "This service is used to Add/Copy Real Server to a VS, you have\
        \ to send Interface id and channel id , to which real server needs to be added,\
        \ with POST request json.\n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information-\n  \n    editedInterface: index(Received\
        \ as InterfaceID in GET/9 service) of interface to which real server needs\
        \ to be added. \n    editedChannel: index(Received as ChannelID in GET/9 service)\
        \ of channel to which real server needs to be added.\n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AddServer'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=3&iType=3&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=2&iType=2&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Update Real Server
      description: "This service is used to update Real Server, you have to send Interface\
        \ id and channel id and server id with data, that needs to be updated, with\
        \ POST request json. \n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information \n  \n    editedInterface: index(Received\
        \ as InterfaceID in GET/9 service) of interface that's real server needs to\
        \ be updated. \n    editedChannel: index(Received as ChannelID in GET/9 service)\
        \ of channel that's real server needs to be updated. \n    cId: index(Received\
        \ as cId in GET/9 service) of server that needs to be updated. \n    CSActivity:\
        \ Activity of real server(online or offline etc) \n    CSIPAddr: IP address\
        \ of RS. \n    WeightFactor: Weight Factor of RS. \n    imagePath: imagePath\
        \ of RS. \n    statusReason: statusReason of RS. \n    contentServerGroupName:\
        \ group name of RS. \n    CSPort: PORT of RS. \n    CSNotes: Server notes.\
        \ \n    ServerId: ServerId.\n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateServer'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=2&iType=2&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=3&iType=5&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Remove Real Server
      description: "This service is used to remove Real Server, you have to send Interface\
        \ id and channel id and server id with data, that needs to be remove, with\
        \ POST request json.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information\n  \n    editedInterface: index(Received as InterfaceID\
        \ in GET/9 service) of interface that's real server needs to be removed. \n\
        \    editedChannel: index(Received as ChannelID in GET/9 service) of channel\
        \ that's real server needs to be removed. \n    cId: index(Received as cId\
        \ in GET/9 service) of server that needs to be removed. \n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RemoveServer'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=3&iType=5&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=2&iType=3&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Update Basic Tab Information
      description: "This service is used to update Basic Tab Information, you have\
        \ to send Interface id and channel id with data, that needs to be updated,\
        \ with POST request json.\n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information\n  \n    editedInterface: index(Received\
        \ as InterfaceID in GET/9 service) of interface that's Basic information needs\
        \ to be updated \n    editedChannel: index(Received as ChannelID in GET/9\
        \ service) of channel that's Basic information needs to be updated. \n   \
        \ serverMonitoring: id(Received as id in GET/29 service, node MonitorPolicyCombo)\
        \ of option selected from Server monitoring options. \n    acceleration: id(Received\
        \ as id in GET/29 service, node AccelerateCombo) of option selected from accelaration\
        \ options. \n    loadBalancingPolicy: id(Received as id in GET/29 service,\
        \ node LBPolicyCombo) of option selected from Load balancing options. \n \
        \   sslCertificate: id(Received as id in GET/29 service, node SSLCertCombo)\
        \ of option selected from VS certificate options. \n    sslClientCertificate:\
        \ id(Received as id in GET/29 service, node SSLClientCertCombo) of option\
        \ selected from RS certificate options. \n    cachingRule: id(Received as\
        \ id in GET/29 service, node CacheRuleCombo) of option selected from Caching\
        \ options. \n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateBasicTab'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=2&iType=3&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=2&iType=4&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Update Advance Tab Information
      description: "This service is used to update Advance Tab Information, you have\
        \ to send Interface id and channel id with data, that needs to be updated,\
        \ with POST request json.\n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information\n  \n    editedInterface: index(Received\
        \ as InterfaceID in GET/9 service) of interface that's advance information\
        \ needs to be updated. \n    editedChannel: index(Received as ChannelID in\
        \ GET/9 service) of channel that's advance information needs to be updated.\
        \ \n    connectivity: id(Received as id in GET/29 service, node ConnectivityCombo)\
        \ of option selected from Connectivity options. \n    SNIDefaultCertificateName:\
        \ send 'true' if enabling connection pool. \n    maxConn: Maximum connection.\
        \ \n    sslResumption: \n    ConnectionTimeout: \n    monitoringInterval:\
        \ \n    monitoringTimeout: \n    InCount: \n    OutCount: \n    CipherName:\
        \ id(Received as id in GET/29 service, node SSLCipherListString) of option\
        \ selected from Cipher options. \n    securityLog:id(Received as id in GET/29\
        \ service, node SecurityLogString). \n    sslRenegotiation:\n    offlinonfailure:\
        \ This node contains information of Switch to offline on failure.\n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateAdvanceTab'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=2&iType=4&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=4&iType=1&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Move flightPATH Available to Applied
      description: "This service is used to move flightPATH Available to Applied in\
        \ IP services page, you have to send Interface id and channel id with data,\
        \ that needs to be updated, with POST request json. JSON that needs to be\
        \ sent as request payload, Should contains given information \n\n    editedInterface:\
        \ index(Received as InterfaceID in GET/9 service) of interface that's flightPATH\
        \ information needs to be updated. \n    editedChannel: index(Received as\
        \ ChannelID in GET/9 service) of channel that's flightPATH information needs\
        \ to be updated. \n    flightPathName: name of flightpath. \n    flightPathDropId:\
        \ \n    flightPathDropName: \n    position:flightpath rule drop position.\
        \ \n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/moveFlightToSelected'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=4&iType=1&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=4&iType=2&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Move flightPATH Applied to Available
      description: "This service is used to move flightPATH Applied to Available in\
        \ IP services page, you have to send Interface id and channel id with data,\
        \ that needs to be updated, with POST request json. \n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information \n  \n\
        \    editedInterface: index(Received as InterfaceID in GET/9 service) of interface\
        \ that's flightPATH information needs to be updated. \n    editedChannel:\
        \ index(Received as ChannelID in GET/9 service) of channel that's flightPATH\
        \ information needs to be updated. \n    flightPathName: name of flightpath.\
        \ \n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/moveFlightToAvailable'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=4&iType=2&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=4&iType=4&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Move flightPATH DOWN in Applied
      description: "This service is used to move flightPATH down (change Applied grid\
        \ Data index) in flightPATH Tab of IP services page, you have to send Interface\
        \ id and channel id with data, that needs to be updated, with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information\n  \n    editedInterface: index(Received as InterfaceID\
        \ in GET/9 service) of interface that's flightPATH information needs to be\
        \ updated. \n    editedChannel: index(Received as ChannelID in GET/9 service)\
        \ of channel that's flightPATH information needs to be updated. \n    flightPathName:\
        \ name of flightpath. \n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/moveFlightDown'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=4&iType=4&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=4&iType=3&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: Move flightPATH UP in Applied
      description: "This service is used to move flightPATH Up (change Applied grid\
        \ Data index) in flightPATH Tab of IP services page, you have to send Interface\
        \ id and channel id with data, that needs to be updated, with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information\n  \n    editedInterface: index(Received as InterfaceID\
        \ in GET/9 service) of interface that's flightPATH information needs to be\
        \ updated. \n    editedChannel: index(Received as ChannelID in GET/9 service)\
        \ of channel that's flightPATH information needs to be updated. \n    flightPathName:\
        \ name of flightpath. \n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/moveFlightUp'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=4&iType=3&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/9?iAction=4&iType=5&FilterKeyword="":
    post:
      tags:
      - IP Services
      summary: DragDrop flightPATH in Applied grid
      description: "This service is used to DragDrop flightPATH in Applied grid ,\
        \ you have to send Interface id and channel id with data, that needs to be\
        \ updated, with POST request json. JSON that needs to be sent as request payload,\
        \ Should contains given information \n\n    editedInterface: index(Received\
        \ as InterfaceID in GET/9 service) of interface that's flightPATH information\
        \ needs to be updated. \n    editedChannel: index(Received as ChannelID in\
        \ GET/9 service) of channel that's flightPATH information needs to be updated.\
        \ \n    flightPathDragName:  \n    flightPathDropId: \n    flightPathDropName:\
        \ \n    flightPathDragId: \n"
      requestBody:
        description: Json data that needs to be sent to the server.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/dragDropFlight'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/9?iAction=4&iType=5&FilterKeyword=""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPServicesPost'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/7:
    get:
      tags:
      - Licence
      summary: License page data
      description: "This service is used to FETCH licence details, it uses two API\
        \ structure.\n\n  Setup_LicenseRows: Used to get License information like\
        \ license of how many VS and RS and for how much time it'll be valid. \n \
        \ \n  Config_Bonding: Used to get Machine ID. \n   \n  The nodes of JSON received,\
        \ contains the given information\n  \n      success:\n      IssuedTo: This\
        \ node contains information, to whom this license is issued.\n      ContactPerson:\
        \ This node contains information of contact person.\n      DateIssued: This\
        \ node contains date when licence was issued.\n      ServerRef: This node\
        \ contains ALB name.\n      ALB: This node contains information of ALB licecne(Expiry\
        \ and other information).\n      SSL: This node contains information of SSL\
        \ licecne(Expiry and other information).\n      Cache: This node contains\
        \ information of Cache licecne(Expiry and other information).\n      FlightPath:\
        \ This node contains information of FlightPath licecne(Expiry and other information).\n\
        \      JetSTREAM: This node contains information of JetSTREAM licecne(Expiry\
        \ and other information).\n      Interfaces: This node contains information\
        \ of Interface licecne(Expiry and other information).\n      RealServers:\
        \ This node contains information of Real Server licecne(Expiry and other information).\n\
        \      MachineID: This node contains Machine ID of this ALB.\n      UUID:\
        \ This node contains UUID.\n      GLBLicense:\n      AuthLicense:\n      FirewallLicense:\n\
        \      Throughput:\n      B2BLicense:\n      Layer4BaseLicense:\n      HttpBaseLicense:\n\
        \      ALB1:\n      SSL1:\n      Cache1:\n      FlightPath1:\n      JetSTREAM1:\n\
        \      Interfaces1:\n      RealServers1:\n      MachineID1:\n      GLBLicense1:\n\
        \      AuthLicense1:\n      FirewallLicense1:\n      Throughput1:\n      B2BLicense1:\n\
        \      Layer4BaseLicense1:\n      HttpBaseLicense1:\n      data:data.\n"
      responses:
        "200":
          description: Json object of response of service /GET/7
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Licence_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/27:
    get:
      tags:
      - Licence
      summary: Page Footer data
      description: "This service is used to FETCH footer details.\n\n  success:\n\
        \      StatusText:\n      StatusImage:\n      PageTitle: \n"
      responses:
        "200":
          description: Json object of response of service /GET/27
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Licence_FooterData'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/8:
    get:
      tags:
      - Licence
      summary: License support information
      description: "This service is used to FETCH licence support information details,\
        \ it uses one API structure. \n\n  Support_Information: Used to get License\
        \ support information like config file, license conf and system logs.\n  \n\
        \  Config_Bonding: Used to get Machine ID.\n  \n  We receive a string separated\
        \ by a unique combination of characters(^#$@) because a huge amount of data(all\
        \ data from config, license and syslog files).\n  \n  It contains the given\
        \ information in indexes when splitted by ^#$@\n    \n    0: This index contains\
        \ error information otherwise 'true'.\n    1: This index contains MAC address.\n\
        \    2: This index contains ALB name.\n    3: This index contains OS VERSION.\n\
        \    4: This index contains all contents of configuration file.\n    5: This\
        \ index contains all contents of licence configuration file.\n    6: This\
        \ index contains curent software version.\n    7: This index contains contents\
        \ of most recent syslog file.\n"
      responses:
        "200":
          description: Receive licence support information(string) in response of
            service /GET/8
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/7?iAction=1&send=license:
    post:
      tags:
      - Licence
      summary: Upload license
      description: "This service is used to upload License, you have to send license\
        \ file, that needs to be uploaded, by using form submit. \n  \n"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POST_7iAction1sendlicense_body'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/7?iAction=1&send=license
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload_licence'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/7?iAction=2&iType=1:
    post:
      tags:
      - Licence
      summary: Upload License(Licence Text)
      description: "This service is used to Upload License, you have to send Licence\
        \ Text , that needs to be uploaded.\n\n  JSON that needs to be sent as request\
        \ payload, Should contains given information-\n  \n    sLicenceText: licence\
        \ text.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Past_Licence'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/7?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload_licence'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/16:
    get:
      tags:
      - Logging
      summary: Logging page data
      description: "This service is used to FETCH Logging details, it uses four API\
        \ structure.\n\n  Config_Logging: Used to get Logging level details. \n  Config_StatsInHeader:\
        \ Used to get list of JETNEXUS HEADERS.\n\n  Config_RemoteLogStorage: Used\
        \ to get Remote log storage details.\n\n  Config_RemoteSysLogServer: Used\
        \ to get Remote Syslog Server details\n  \n  The nodes of JSON received, contains\
        \ the given information\n    \n    W3CCombo: This node contains options of\
        \ w3c logging.\n    W3CFCombo: This node contains options of jetnexus w3c\
        \ logging.\n    RemoteLogStorage: This node have 1 if remote log storage enabled.\n\
        \    RemoteLogIP: This node contains information, to whom this licence is\
        \ issued.\n    RemoteLogShare: This node contains information of contact person.\n\
        \    RemoteLogDir: This node contains date when licence was issued.\n    RemoteLogUser:\
        \ This node contains ALB name.\n    W3cLoggingModeList: This node contains\
        \ information, to whom this licence is issued.\n    LogClearListString: This\
        \ node contains information of contact person.\n    SecurityLogCombo:\n  \
        \  SecurityLog:\n    XffLoggingList:\n    RsysLog1IP:\n    RsysLog2IP:\n \
        \   RsysLog1PROTOCOL:\n    RsysLog2PROTOCOL:\n    RsysServerPort1:\n    RsysServerPort2:\n\
        \    RsysServer1enabled:\n    RsysServer2enabled:\n    RsysProtocolCombo:\n\
        \    AdvancedW3C: This node contains either 0 or 1.\n    LogMessageLevel:\
        \ Id of option selected from message level.\n    LogMessageLevelCombo:\n"
      responses:
        "200":
          description: Json object of response of service /GET/16
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logging_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/16?iAction=1&iType=1:
    post:
      tags:
      - Logging
      summary: Update logging levels
      description: "This service is used to update Logging level details, you have\
        \ to send logging level data, with POST request json.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    W3cLoggingModeList: id(Received as id in GET/16 service, node W3CCombo)\
        \ of option selected from W3C Logging options.\n    XffLoggingList: id(Received\
        \ as id in GET/16 service, node W3CFCombo) of option selected from jetnexus\
        \ w3c Logging options.\n    securityLog: on/off value.\n    AdvancedW3C:.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Update_logging'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/16?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logging_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/16?iAction=2&iType=1:
    post:
      tags:
      - Logging
      summary: Update remote log storage
      description: "This service is used to update remote log storage details, you\
        \ have to send remote log settings, with POST request json.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    RemoteLogStorage: 'true/false'.\n    RemoteLogIP: IP address.\n \
        \   RemoteLogShare: share name. \n    RemoteLogDir: Remote Log Directory.\n\
        \    RemoteLogUser: username.\n    RemoteLogPassword: Password.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Update_remotelog'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/16?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logging_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/16?iAction=3&iType=1:
    post:
      tags:
      - Logging
      summary: Update remote syslog server
      description: "This service is used to update remote syslog server details, you\
        \ have to send remote syslog server settings(IP,PORT etc), with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n  \n    RsysLog1IP: Syslog server '1' IP address.\n\
        \    RsysLog1PROTOCOL: id(Received as id in GET/16 service, node W3RsysProtocolCombo)\
        \ of option selected from Protocol options.\n    RsysLog2IP: Syslog server\
        \ '2' IP address.\n    RsysLog2PROTOCOL: id(Received as id in GET/16 service,\
        \ node W3RsysProtocolCombo) of option selected from Protocol options.\n  \
        \  RsysServer1enabled: 'true/false'.\n    RsysServer2enabled: 'true/false'.\n\
        \    RsysServerPort1: Syslog server '1' Port.\n    RsysServerPort2: Syslog\
        \ server '2' Port.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Update_remotesyslog'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/16?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logging_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/16?iAction=4&iType=1:
    post:
      tags:
      - Logging
      summary: Clear log
      description: "This service is used to Clear log, you have to send log files\
        \ name.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    LogClear: id\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Clear_log'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/16?iAction=4&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logging_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/16?iAction=5&iType=1:
    post:
      tags:
      - Logging
      summary: Update syslog
      description: "This service is used to update syslog. \n  ON that needs to be\
        \ sent as request paylad,  Should contains given information-\n  \n    LogMessageLevel:\
        \ This node contains id of LogMessageLevel. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Logging_Data_syslog'
        required: true
      responses:
        "200":
          description: Json object of response of service /api/16?iAction=5&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logging_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/32?page=login:
    post:
      tags:
      - Login
      summary: Login request
      description: "This service is used to login user to ALB that allow him to use\
        \ other services.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-\n\n  username:\"password\" for example admin:\
        \ \"jetnexus\"\n\n  The nodes of JSON received, contains the given information-\n\
        \  \n    LoginStatus: This node contains information of user login status.\n\
        \    UserName: This node contains username.\n    GUID: This node contains\
        \ a unique id(GUID) that needs to be setted in browser cookie(as GUID=) and\
        \ should be sent with each web service request.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/jet_Login'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/32?page=login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jet_LoginResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/35:
    get:
      tags:
      - Logout
      summary: Logout user
      description: |
        This service is used to logout a user. GUID is sent with each request so when ALB receive this service, it logout the user associated with it's GUID.
      responses:
        "200":
          description: Json object of response of service /GET/35
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jet_LogoutResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/10:
    get:
      tags:
      - Logs
      summary: Logs page data
      description: |
        This service is used to FETCH all data for Logs page, it uses one API structure.

          Monitor_Logging: Used to get list of Recent log files generated for both w3clogs and syslogs.

          The nodes of JSON received, contains the given information

            w3CLoggingList: This node contains list of all w3c logs available.
            sysLoggingList: This node contains list of all syslogs available.
      responses:
        "200":
          description: Json object of response of service /GET/10
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor_Logging'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/10?download=w3c&iAction=1&iType=1&name=w3c20140919-07.log&preDownloadCheck=yes:
    get:
      tags:
      - Logs
      summary: Download w3c text file
      description: |
        This service is used to downlaod w3c log file in text format(unzipped), you needs to send two query string params download=w3c and name=FILENAME.
      responses:
        "200":
          description: File will be downloaded in response of service /GET/10?download=w3c&iAction=1&iType=1&name=w3c20140919-07.log&preDownloadCheck=yes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor_Logging_Download'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/10?download=w3c&iAction=1&iType=2&name=w3c2014091-07.log&preDownloadCheck=yes:
    get:
      tags:
      - Logs
      summary: Download w3c compressed file
      description: |
        This service is used to downlaod w3c log file in Compressed format(GZIP), you needs to send two query string params download=w3c and name=FILENAME.
      responses:
        "200":
          description: File will be downloaded in response of service /GET/10?download=w3c&iAction=1&iType=2&name=w3c2014091-07.log&preDownloadCheck=yes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor_Logging_Download'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/10?download=syslog&iAction=2&iType=1&name=w3c20140919-07.log&preDownloadCheck=yes:
    get:
      tags:
      - Logs
      summary: Download syslog text file
      description: |
        This service is used to downlaod syslog file in text format(unzipped), you needs to send two query string params download=syslog and name=FILENAME.
      responses:
        "200":
          description: File will be downloaded in response of service /GET/10?download=syslog&iAction=2&iType=1&name=w3c20140919-07.log&preDownloadCheck=yes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor_Logging_Download'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/10?download=syslog&iAction=2&iType=2&name=w3c20140919-07.log&preDownloadCheck=yes:
    get:
      tags:
      - Logs
      summary: Download w3c compressed file
      description: |
        This service is used to downlaod syslog file in Compressed format(GZIP), you needs to send two query string params download=w3syslog and name=FILENAME.
      responses:
        "200":
          description: File will be downloaded in response of service /GET/10?download=syslog&iAction=2&iType=2&name=w3c20140919-07.log&preDownloadCheck=yes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor_Logging_Download'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/37:
    get:
      tags:
      - Monitor History
      summary: History page data
      description: "This service is used to FETCH all data for history page, it uses\
        \ one API structure .\n\n  Monitor_History:Used to get History data as per\
        \ user preferences(i.e. which database and which metrices are selected and\
        \ how much timespan of data).\n\n  The nodes of JSON received, contains the\
        \ given information\n  \n    responseError: This node contains error message\
        \ from RRD.\n    responseWarning: This node contains warning message.\n  \
        \  type: This node contains te type of database selected(such as System, Virtual\
        \ Service, Real Server).\n    periodEndNow: This node contains the starting\
        \ point of time from where we needs to show data.\n    periodEnd: This node\
        \ contains the starting point of time from where we needs to show data.\n\
        \    period: This node contains the time scale for which we needs to show\
        \ data(last minute or hour or day or week etc).\n    columns: This node contains\
        \ the metrices selected for which we needs to show data.\n    axesCount: This\
        \ node contains number of metrices selected.\n    timesUtc: This node contains\
        \ UTC time of each database entry.\n    timesServer:This node contains UTC\
        \ time of server .\n    systemData: This node contains data for each metrices\
        \ if system is selected as database.\n    name: \n    dataset: This node contains\
        \ collection of all VS and RS available to select and show from RRD database.\n\
        \    VSRS: This node contains collection of all VS and RS.\n    ipPort: This\
        \ node contains ip address and port of each VS.\n    RS: This node contains\
        \ ip address and port of each RS.\n    MaxValue: This node contains maximum\
        \ matrix data value.\n"
      responses:
        "200":
          description: Json object of response of service /GET/37
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor_History'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/37?iAction=1&iType=2:
    post:
      tags:
      - Monitor History
      summary: Update user preferences of History
      description: "This service is used to update user preferences for history page,\
        \ you have to send data as database(System, VS and RS) and metrices(CPU, Bytes\
        \ in etc) selected and timespan(to show data of last minute or hour or day\
        \ etc), that needs to be updated, with POST request json.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    RequestColumn: Name of metrices for which you needs to show graph data.\
        \ \n    RequestVsrs: id(Received as id in GET/19 service, node VSRS) of option\
        \ selected from VS/RS options.\n    Period: option selected from Period options\
        \ such as minute, hour, day, week etc.\n    PeriodEndNow: Number of periods\
        \ in minutes or days(for ex- data for last 20 minutes)\n    type: Type of\
        \ database selected(from System, VS and RS).  \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateMonitor_History'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/37?iAction=1&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor_History'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/6:
    get:
      tags:
      - Network
      summary: Network page data
      description: "This service is used to FETCH Network details, it uses four API\
        \ structure.\n\n  Setup_Network: Used to get Default gateway and static route\
        \ details.\n\n  Setup_Nagle: Used to get Server nagle and client nagle details.\n\
        \n  Setup_ServerRef: Used to get ALB name.\n\n  Setup_DNS_Server: Used to\
        \ get DNS server details.\n\n  The nodes of JSON received, contains the given\
        \ information-\n\n    AdapterOptionsListString: This node contains adapters\
        \ options.\n    DefaultGateway: This node contains default gateway.\n    DefaultGatewayIPv6:\
        \ \n    ServerNagle: This node contains Server Nagle.\n    ClientNagle: This\
        \ node contains Client Nagle.\n    ServerRefField: This node contains ALB\
        \ name.\n    DNSServerField: This node contains DNS server '1'.\n    DNSServerField2:\
        \ This node contains DNS server 2.\n    DefaultStatusImage: This node contains\
        \ status image of gateway.\n    NetworkStaticRoutesGrid: This node contains\
        \ Network Static Routes Grid data.\n    CurrentTable: This node contains Current\
        \ Table data.\n    SNATGrid: Used to get SNAT Grid details.\n    Id: Used\
        \ to get Id details.\n    Interface: This node contains the value of Interface.\n\
        \    Sourceip: This node contains the value of Sourceip.\n    Destinationip:\
        \ This node contains the value od Destinationip.\n    protocol: Used to get\
        \ Protocol details.\n    SourcePort: Used to get Source Port details.\n  \
        \  Destinationport: Used to get Destination port details.\n    Snattoip: Used\
        \ to get Snat to ip details.\n    Snattoport: This node contains the value\
        \ of Snat to port .\n    Notes: Used to get Nodes details.\n    Error: This\
        \ node contains the value of Error.\n    ProtocolCombo: This node contains\
        \ options for SNAT protocol.\n"
      responses:
        "200":
          description: Json object of response of service /GET/6
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/6?iAction=1&iType=1:
    post:
      tags:
      - Network
      summary: Update static route
      description: "This service is used to update network static route details, you\
        \ have to send static route details data with row id, with POST request json.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    destination: destination IP address.\n    gateway: route gatway.\n\
        \    mask: static route mask.\n    adapter: id(Received as id in GET/16 service,\
        \ node AdapterOptionsListString) of option selected from Adapter options.\n\
        \    id: index(Received as id in GET/6 service) of Static Routes that needs\
        \ to delete.\n    isValidationRequired:\n    active:\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Update_static'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/6?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/6?iAction=2&iType=1:
    post:
      tags:
      - Network
      summary: Delete static route
      description: |
        This service is used to delete network static route details, you have to send static route details row id that needs to be deleted, with POST request json.

          JSON that needs to be sent as request payload, Should contains given information-

            id: index(Received as id in GET/6 service) of Static Routes that needs to delete.
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Delete_static'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/6?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/6?iAction=3&iType=1:
    post:
      tags:
      - Network
      summary: "Update default gateway, ALB name and DNS"
      description: "This service is used to update default gateway, ALB name and DNS\
        \ server address details, you have to send data, with POST request json.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    DNSServerField: DSN server '1' address.\n    DNSServerField2: DSN\
        \ server 2 address.\n    DefaultGateway: Defaults gateway.\n    ServerRefField:\
        \ ALB Name.\n    DefaultGatewayIPv6:\n    isValidationRequired:\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Update_default'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/6?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/3:
    get:
      tags:
      - Network
      summary: Network page combo
      description: "This service is used to FETCH hardware page combo box options\
        \ list, it uses three API structure.\n\n  Config_Ethernet: Used to get mode(Full\
        \ duplex, half duplex etc), bond and speed list strings.\n\n  Config_Bonding:\
        \ Used to get ethernet bonding list string.\n\n  Setup_ALB_Addresses_New:\
        \ Used to get VLAN available or not.\n  \n  The nodes of JSON received, contains\
        \ the given information\n  \n    EthDuplexListString: This node contains options\
        \ of ethernet duplex.\n    HideVlan: This node contains 'true' if hide VLAN\
        \ enabled.\n    EthSpeedListString: This node contains options of ethernet\
        \ speed.\n    BondModeListString: This node contains options of bond modes.\n\
        \    NoBonding: This node contains 'true' if 'no' bonding.\n    EthBondListString:\
        \ This node contains options of bonds available.\n"
      responses:
        "200":
          description: Json object of response of service /GET/3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Combo'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/5:
    get:
      tags:
      - Network
      summary: Hardware data
      description: "This service is used to FETCH hardware and bond grid rows details,\
        \ it uses two API structure.\n\n  Config_Etherne: Used to get hardware interfaces\
        \ grid rows details.\n\n  Config_Bonding: Used to get bonding grid rows details.\n\
        \  \n  The nodes of JSON received, contains the given information\n  \n  \
        \  HardwareGrid: This node contains data for hardware grid.\n    id: This\
        \ node contains unique id for each hardware row(index), that used for update\
        \ and delete of row.\n    duplex: This node contains value of duplex.\n  \
        \  speed: This node contains value of speed.\n    ethName: This node contains\
        \ ethernet name.\n    ethBond: This node contains ethernet bond.\n    BondGrid:\
        \ This node contains data of bond grid.\n    ethStatus:\n    id: This node\
        \ contains unique id for each bond row(index), that used for update and delete\
        \ of row.\n    bondName: This node contains bond name.\n    bondMode: This\
        \ node contains bond mode.\n    AdapterListString: This node contains options\
        \ of adapters.\n"
      responses:
        "200":
          description: Json object of response of service /GET/5
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hardware_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/5?iAction=1&iType=1:
    post:
      tags:
      - Network
      summary: Update interface grid
      description: "This service is used to update hardware interfaces details, you\
        \ have to send hardware row data with row id, with POST request json.\n\n\
        \  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    id: index(Received as id in GET/5 service) of HardwareGrid that needs\
        \ to updated. \n    Duplex: id(Received as id in GET/3 service, node EthDuplexListString)\
        \ of option selected from Duplex options. \n    Speed: id(Received as id in\
        \ GET/3 service, node EthSpeedListString) of option selected from Speed options.\
        \ \n    EthName: ethernet name. \n    ethBond: id(Received as id in GET/3\
        \ service, node EthBondListString) of option selected from Bonding options.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Update_interface'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/5?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hardware_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/5?iAction=2&iType=1:
    post:
      tags:
      - Network
      summary: Update bonding grid
      description: "This service is used to update hardware bonding details, you have\
        \ to send hardware bonding row data(bondMode) with row id, with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    bondMode: id(Received as id in GET/3 service,\
        \ node BondModeListString) of option selected from Bond Mode options. \n \
        \   id: index(Received as id in GET/5 service) of Bond that needs to updated.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Update_bonding'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/5?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hardware_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/5?iAction=3&iType=1:
    post:
      tags:
      - Network
      summary: Remove hardware bonding
      description: "This service is used to remove hardware bonding details, you have\
        \ to send hardware bonding grid row id, with POST request json.\n\n  JSON\
        \ that needs to be sent as request payload, Should contains given information-\n\
        \  \n    id: index(Received as id in GET/5 service) of Bond that needs to\
        \ delete.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Remove_bonding'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/5?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hardware_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/5?iAction=4&iType=1:
    post:
      tags:
      - Network
      summary: Add bonding
      description: "This service is used to add new row to hardware bonding grid.\
        \ \n  JSON that needs to be sent as request payload, Should contains given\
        \ information- not required to send json.\n"
      responses:
        "200":
          description: Json object of response of service /POST/5?iAction=4&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hardware_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/1:
    get:
      tags:
      - Network
      summary: Appliance data
      description: "This service is used to FETCH adapter details grid rows details,\
        \ it uses two API structure.\n\n  Setup_ALB_Addresses_New: Used to get adapter\
        \ details grid rows details.\n\n  Setup_FailOver: Used to get Failover enabled\
        \ details.\n\n  The nodes of JSON received, contains the given information\n\
        \  \n      AdapterListString: This node contains options of adapters.\n  \
        \    FailoverEnabled: This node contains \"ON\" if failover enabled.\n   \
        \   FailoverTimer: This node contains value of failover timer.\n      ApplianceGrid:\
        \ This node contains data of appliance grid.\n      id: This node contains\
        \ unique id for each appliance grid row(index), that used for update and delete\
        \ of row.\n      ethtype: This node contains eth name.\n      address: This\
        \ node contains address of appliance.\n      mask: This node contains subnet\
        \ mask.\n      gateway: This node contains gateway.\n      desc: This node\
        \ contains description of appliance.\n      RestEnabled: This node contains\
        \ '1' if REST services is enabled on this appliance.\n      webconsoleChecked:\
        \ This node contains '1' if appliance address is current ALB address.\n  \
        \    ethVlan:\n      RpFilter:\n"
      responses:
        "200":
          description: Json object of response of service /GET/1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appliance_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/1?iAction=4&iType=1:
    post:
      tags:
      - Network
      summary: Add or update adapter
      description: "This service is used to update or add new row in adapter grid\
        \ details, you have to send adapter row data with row id, with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contains\
        \ given information-\n  \n    RestEnabled: \n    address: Appliance IP address.\
        \ \n    desc: Appliance IP address. \n    gateway: Appliance gateway. \n \
        \   ethVlan: Appliance VLAN address. \n    ethtype: id(Received as id in GET/1\
        \ service, node AdapterListString) of option selected from ethernet options.\
        \ \n    id: index(Received as id in GET/1 service) of Appliance that needs\
        \ to updated(if add request then send 'maxid+1'). \n    mask: Appliance subnet\
        \ mask. \n    webconsoleChecked: set \"true\" if you want to change current\
        \ ALB address to IP address of this Appliance.\n    RpFilter:  \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Add_adapter'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/1?iAction=4&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appliance_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/1?iAction=3&iType=1:
    post:
      tags:
      - Network
      summary: Update adapter on specific conditions
      description: "This service is used to update row in adapter grid details, you\
        \ have to send adapter row data with row id, with POST request json.\n\n \
        \ JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n ethName: \n    address:  \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/specific_adapterUpdate'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/1?iAction=4&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appliance_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/1?iAction=2&iType=1:
    post:
      tags:
      - Network
      summary: Remove adapter
      description: "This service is used to remove adapter grid details, you have\
        \ to send adapter grid row id, with POST request json.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information- not required\
        \ to send json.\n  \n    id: index(Received as id in GET/1 service) of Appliance\
        \ that needs to delete\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Remove_adapter'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/1?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appliance_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/6?iAction=4&iType=1:
    post:
      tags:
      - Network
      summary: Advanced Network
      description: "This service is used to update Advanced Network setting, you have\
        \ to send POST request json.\n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information-\n  \n    ClientNagle: 'true/false' value.\
        \ \n    ServerNagle: 'true/false' value.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Advance_Network'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/6?iAction=4&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/6?iAction=7&iType=1:
    post:
      tags:
      - Network
      summary: Add SNAT
      description: "This service is used to add network SNAT details, you have to\
        \ send SNAT details, with POST request json.\n\n  JSON that needs to be sent\
        \ as request payload, Should contain given information-\n  \n    destinationport:\
        \ destination port.\n    interface: interface.\n    notes: snat notes.\n \
        \   protocol: id of option selected from protocol options.\n    snattoip:\
        \ snattoip.\n    snattoport: snattoport.\n    sourceip: sourceip.\n    sourceport:\
        \ sourceport.\n    destinationip: destinationip\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Add_snat'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/6?iAction=7&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/6?iAction=5&iType=1:
    post:
      tags:
      - Network
      summary: Update SNAT
      description: "This service is used to update network SNAT details, you have\
        \ to send SNAT details, with POST request json.\n\n  JSON that needs to be\
        \ sent as request payload, Should contain given information-\n  \n    destinationport:\
        \ destination port.\n    interface: interface.\n    id: This node contains\
        \ row id .\n    notes: snat notes.\n    protocol: id of option selected from\
        \ protocol options.\n    snattoip: snattoip.\n    snattoport: snattoport.\n\
        \    sourceip: sourceip.\n    sourceport: sourceport.\n    destinationip:\
        \ destinationip\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Update_snat'
        required: true
      responses:
        "200":
          description: Json object of response of service /api/6?iAction=5&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/6?iAction=6&iType=1:
    post:
      tags:
      - Network
      summary: Delete snat
      description: "This service is used to delete network snat details, you have\
        \ to send snat details row id that needs to be deleted, with POST request\
        \ json.\n\n  JSON that needs to be sent as request payload, Should contain\
        \ given information-\n  \n    id: index(Received as id in api/network-basic\
        \ service, node SNATGid) of Network SNAT that needs to delete.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Delete_snat'
        required: true
      responses:
        "200":
          description: Json object of response of service /api/6?iAction=6&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/24?page=Power:
    get:
      tags:
      - Power
      summary: Software version
      description: |
        This service is used to FETCH software version details, it uses one API structure.

          Do_Restart: Used to get software version details.
      responses:
        "200":
          description: Json object of response of service /GET/24?page=Power
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Power_Version'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/28:
    get:
      tags:
      - Power
      summary: Software version
      description: |
        This service is used to FETCH software version details, it uses one API structure.
      responses:
        "200":
          description: Json object of response of service /GET/28
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Power_CheckStatus'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/24?iAction=5&iType=1:
    post:
      tags:
      - Power
      summary: Restart ALB
      description: "This service is used to quickly stop and start essential jetNEXUS\
        \ ALB services.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information- not required to send json.\n  \n    Warning\
        \ - This will cause a brief break in current connections.\n"
      responses:
        "200":
          description: Json object of response of service /POST/24?iAction=5&iType=1
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Power_Restart'
                x-content-type: application/json
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/24?iAction=5&iType=2:
    post:
      tags:
      - Power
      summary: Reboot ALB
      description: "This service is used to re-initialise all jetNEXUS ALB services.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\
        \ not required to send json.\n  \n    Warning - This will suspend your Connections\
        \ and Services for about 2 minutes.\n"
      responses:
        "200":
          description: Json object of response of service /POST/24?iAction=5&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Power_Reboot'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/24?iAction=5&iType=3:
    post:
      tags:
      - Power
      summary: Power OFF ALB
      description: "This service is used to completely halt jetNEXUS ALB.\n\n  JSON\
        \ that needs to be sent as request payload, Should contains given information-\
        \ not required to send json.\n  \n    Warning - This will suspend your web\
        \ site and require a hardware power on.\n"
      responses:
        "200":
          description: Json object of response of service /POST/24?iAction=5&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Power_PowerOff'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/25:
    get:
      tags:
      - Protocol
      summary: Protocol page data
      description: "This service is used to FETCH Protocol details, it uses four API\
        \ structure.\n\n  Config_Performance: Used to get Performance settings details.\n\
        \n  Config_ExclusionNew: Used to get current exclusion details.\n\n  Setup_XFF:\
        \ Used to get Forwarding details.\n\n  Setup_ServerBusy: Used to get information\
        \ if server too busy enabled.\n\n  The nodes of JSON received, contains the\
        \ given information-\n    \n    XFFCombo: This node contains options of X\
        \ Forward For.\n    CompressAsYouGoCombo: This node contains options of compress.\n\
        \    SendServerTooBusyPage: This node contains '1' if server too busy page\
        \ enabled.\n    XffOutputList: This node contains XFF output list.\n    XffHeader:\
        \ This node contains XFF header.\n    CPF_INITIAL_PAGE_BUFFER_SIZE_K: This\
        \ node contains initial page buffer size in KB.\n    CPF_MAX_CONTENT_LENGTH_K:\
        \ This node contains maximum content length in KB.\n    CPF_INCREMENT_PAGE_BUFFER_SIZE_K:\
        \ This node contains increment page buffer size in KB.\n    CPF_MinimumCompressionSize:\
        \ This node contains minimum compression size.\n    CPF_DO_NOT_COMPRESS_CSS:\
        \ This node contains '1' if do not compress css.\n    CPF_CompressionDisabled:\
        \ This node contains '1' if compression disabled.\n    CPF_CompressAsYouGo:\
        \ This node contains '1' if compress as you go enabled.\n    CurrentExclusions:\
        \ This node contains current exclusions.\n    SameSite: This node contains\
        \ SameSite.\n    Secure: This node contains either 0 or 1.\n    HttpOnly:\
        \ This node contains either 0 or 1.\n    SameSiteListString: This node contains\
        \ list of SameSiteListString.\n"
      responses:
        "200":
          description: Json object of response of service /GET/25
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/44:
    get:
      tags:
      - Protocol
      summary: Server too busy file content
      description: "This service is used to FETCH Server too busy file content, it\
        \ uses one API structure .\n\n  Setup_ServerBusy: Used to get server too busy\
        \ file content.\n  \n  The nodes of JSON received, contains the given information\n\
        \  \n    File: This node contains all content of server too busy file.\n"
      responses:
        "200":
          description: Json object of response of service /GET/44
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol_Server'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/25?iAction=1&iType=1:
    post:
      tags:
      - Protocol
      summary: Update 'forward for'
      description: "This service is used to update 'Forward for' settings, you have\
        \ to send data, with POST request json.\n\n  JSON that needs to be sent as\
        \ request payload, Should contains given information-\n  \n    ForwardedForOutput\
        \ : id(Received as id in GET/25 service, node XFFCombo) of option selected\
        \ from Forworded-for Output options. \n    ForwardedForHeader : Forworded-for\
        \ Header.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Protocol_Update'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/25?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/25?iAction=5&iType=1:
    post:
      tags:
      - Protocol
      summary: Enable/Disable server too busy page
      description: "This service is used to enable/disable 'server too busy page',\
        \ you have to send data, with POST request json.\n\n  JSON that needs to be\
        \ sent as request payload, Should contains given information-\n  \n    HiddenSendServerTooBusyPage\
        \ : set 'true' to enable server too busy page.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Protocol_UpdateEneble'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/25?iAction=5&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/25?iAction=2&iType=1:
    post:
      tags:
      - Protocol
      summary: Update HTTP Compression
      description: "This service is used to update HTTP Compression settings, you\
        \ have to send data, with POST request json.\n\nJSON that needs to be sent\
        \ as request payload, Should contains given information-\n\n    InitialThreadMemory\
        \ : Initial Thread Memory. \n    MaximumThreadMemory : Maxmimum Thread Memory.\
        \ \n    IncrementMemory : Increment Memory. \n    MinimumCompressionSize :\
        \ Minimum compression size. \n    SafeMode : set 'true' if safe mode enabled.\
        \ \n    DisableCompression : set 'true' if disabled compression. \n    CompressAsYouGo\
        \ : id(Received as id in GET/25 service, node CompressAsYouGoCombo) of option\
        \ selected from compress as you Go options.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Protocol_UpdateHTTP'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/25?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/25?iAction=3&iType=1:
    post:
      tags:
      - Protocol
      summary: Update current exclusion
      description: |
        This service is used to update Current exclusion settings, you have to send CurrentExclusions, with POST request json.

        JSON that needs to be sent as request payload, Should contains given information-

            CurrentExclusions: current exclusions for example *.gif.
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Protocol_UpdateConclusion'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/25?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/25?iAction=4&iType=1&send=protocol:
    post:
      tags:
      - Protocol
      summary: Upload server too busy file
      description: "This service is used to upload Server too busy file, you have\
        \ to send file and send=protocol in query string, that needs to be uploaded,\
        \ by using form submit.\n\n  We have to send given values to form submit.\n\
        \  \n    file: Upload html file.\n"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POST_25iAction4iType1sendprotocol_body'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/25?iAction=4&iType=1&send=protocol
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/25?iAction=6&iType=1:
    post:
      tags:
      - Protocol
      summary: Update Persistence Cookies
      description: |
        This service is used to update Persistence Cookies, you have to send Persistence Cookies, with POST request json.

        JSON that needs to be sent as request payload, Should contain given information-

            SameSite: This node contains SameSite.
            Secure: This node contains either 0 or 1.
            HttpOnly: This node contains either 0 or 1.
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Protocol_Persistence_Cookies'
        required: true
      responses:
        "200":
          description: Json object of response of service /api/25?iAction=6&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Protocol_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/13:
    get:
      tags:
      - Realserver Monitor
      summary: Real Server Monitor page data
      description: "This service is used to FETCH all data for Real Server Monitor\
        \ page, it uses one API structures.\n\n  Config_Monitoring: Used to get all\
        \ real server monitor details.\n\n  The nodes of JSON received, contains the\
        \ given information-\n\n    MethodCombo: This node contains options of monitoring\
        \ methods.\n    ConfigMonitoringGrid: This node contains monitoring grid data.\n\
        \    id: This node contains index of each real server monitor, that can be\
        \ use to update or delete that monitor.\n    Name: This node contains name\
        \ of real server monitor.\n    Description: This node contains description\
        \ of real server monitor.\n    type: This node contains monitoring method\
        \ used for this real server monitor.\n    url: This node contains page location\
        \ url.\n    content: This node contains required content.\n    Username: This\
        \ node contains username.\n    Password: This node contains password.\n  \
        \  Threshold: \n    AppliedtoVS:AppliedtoVS.\n    dataset:dataset.\n    row:row.\n"
      responses:
        "200":
          description: Json object of response of service /GET/13
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Monitoring'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/38:
    get:
      tags:
      - Realserver Monitor
      summary: Custom monitor combo
      description: |
        This service is used to FETCH all Custom Monitors to present them to user to delete from 'Delete Custom Monitor' dropdown, it uses one API structure-

          DeleteCustomMonitor: Used to fetch custom monitors.

          The nodes of JSON received, contains the given information-

            delCSMCombo: This node contains options of custom monitors.
      responses:
        "200":
          description: Json object of response of service /GET/38
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomMonitor'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/13?iAction=1&iType=1:
    post:
      tags:
      - Realserver Monitor
      summary: Add Real Server Monitor
      description: |
        This service is used to add new real server monitor in real server monitor grid.

          JSON that needs to be sent as request payload, Should contains given information-not required to send json.
      responses:
        "200":
          description: Json object of response of service /POST/13?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Monitoring'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/13?iAction=2&iType=1:
    post:
      tags:
      - Realserver Monitor
      summary: Update Real Server Monitor
      description: "This service is used to update details in real server monitor\
        \ grid, you have to send id of realserver monitor with data, that needs to\
        \ be updated, with POST request json.\n\n  JSON that needs to be sent as request\
        \ payload, Should contains given information-\n    \n    Password : Password\n\
        \    Threshold : \n    content : Required content\n    description : \n  \
        \  id : index(Received as id in GET/13 service) of real server monitor that\
        \ needs to updated.\n    Name : Real server name.\n    Username : User Name.\n\
        \    type : id(Received as id in GET/13 service, node MethodCombo) of option\
        \ selected from Monitoring method options.\n    Url : \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateRealRequest'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/13?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Monitoring'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/13?iAction=3&iType=1:
    post:
      tags:
      - Realserver Monitor
      summary: Remove Real Server Monitor
      description: "This service is used to remove row in real server monitor grid,\
        \ you have to send id of real server monitor, that needs to be removed, with\
        \ POST request json.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-\n    \n      id: index(Received as id in GET/13\
        \ service) of real server monitor that needs to be deleted.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RemoveRealRequest'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/13?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Monitoring'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/13?iAction=5&send=csm:
    post:
      tags:
      - Realserver Monitor
      summary: Upload Custom Monitor
      description: "This service is used to upload custom monitor file, you have to\
        \ send name in form field(UploadMonitorName) and file, that needs to be uploaded,\
        \ with form submit.\n\n  We have to send given values to form submit .\n \
        \ \n    UploadMonitorName: upload file name.\n    file: File needs to be Uploaded.\n"
      responses:
        "200":
          description: Json object of response of service /POST/13?iAction=5&send=csm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Monitoring'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/13?iAction=4:
    post:
      tags:
      - Realserver Monitor
      summary: Remove Custom Monitor
      description: |
        This service is used to remove a custom monitor, you have to send id of custom monitor that needs to be removed, with POST request json.

        JSON that needs to be sent as request payload, Should contains given information-

            CustomMonitor: id(Received as id in GET/38 service) of custom monitor that needs to be deleted.
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RemoveCustomMonitor'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/13?iAction=4
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config_Monitoring'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/15:
    get:
      tags:
      - Security
      summary: Securty page data
      description: "This service is used to FETCH security information(GUI PORT and\
        \ SSL certificate used, REST Service Information) and ssl cert combobox data,\
        \ it uses four API structure.\n\n  Setup_ALB_Addresses_New: Used to get IP\
        \ address of all available adapters to those we can bind REST services.\n\n\
        \  Config_Security_SSH: Used to get SSH enable information.\n\n  Config_Security_CP_GUI3:\
        \ Used to get the current PORT and SSL certificate used for GUI webserver\
        \ and list of all available certificates that can be applied.\n\n  Config_Security_CP_GUI3_REST:\
        \ Used to get IP address and ssl certificate used to which REST services is\
        \ binded.\n\n  The nodes of JSON received, contains the given information-\n\
        \  \n      EnableSSH: This node contains '1' if ssh is enabled.\n      SCP_CertificateGUI3:\
        \ This node contains ssl certificate used for GUI.\n      SCP_PortGUI3: This\
        \ node contains port of GUI.\n      SCP_SecurePortGUI3: This node contains\
        \ port of GUI if it's using ssl(https).\n      SCP_CertificateRest: This node\
        \ contains ssl certificate used for REST.\n      SCP_PortRest: This node contains\
        \ port of REST.\n      SCP_IPRest: This node contains ip address of REST.\n\
        \      SCP_EnabledRest: This node contains '1' if REST enabled.\n      RestIPList:\
        \ This node contains comma separated list of IP address of adapters that have\
        \ REST enabled.\n      SCP_CertificateListStringGUI3: This node contains options\
        \ of SSL certificates available.\n"
      responses:
        "200":
          description: Json object of response of service /GET/15
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/15?iAction=1&iType=5:
    post:
      tags:
      - Security
      summary: Update GUI port and ssl cert
      description: "This service is used to update GUI PORT and SSL Certificate, you\
        \ have to send PORT and SSL Certificate information with change accepted confimation,\
        \ with POST request json.\n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information-\n  \n    SCP_CertificateGUI3: ssl certificate\
        \ used for GUI. \n    SCP_ChangeAccepted: set \"1\" to confirm changes. \n\
        \    SCP_PortGUI3: port of GUI. \n    SCP_SecurePortGUI3: port of GUI if it's\
        \ using ssl(https).\n    \n    NOTE: While testing GUI by switching between\
        \ http and https, then take care about protocol changes in URL as well, for\
        \ example if you have ALB running on https and you changed to http, then to\
        \ use REST Services all URL should have protocol http(not https as default\
        \ given in example URLs).\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Security_UpdateGUI'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/15?iAction=1&iType=5
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Security_Data'
                x-content-type: application/json
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/15?iAction=1&iType=4:
    post:
      tags:
      - Security
      summary: Enable and update REST Services
      description: "This service is used to Enable, Disable or Update details of REST\
        \ Services(binded to other PORT or IP), you have to send IP address, PORT,\
        \ SSL Certificate and REST status(Enabled or Disabled) information, with POST\
        \ request json.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-\n  \n    SCP_RESTCertificate : id(Received as\
        \ id in GET/15 service, node SCP_CertificateListStringGUI3) of option selected\
        \ from SSL Certificate options. \n    SCP_RESTEnabled : set \"yes\" to enable\
        \ REST. \n    SCP_RESTIP : Rest API IP address. \n    SCP_RESTPort : REST\
        \ Port Address.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Security_EnableRest'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/15?iAction=1&iType=4
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /15?iAction=1&iType=2:
    post:
      tags:
      - Security
      summary: Enable SSH
      description: "This service is used to Enable, Disable SSH, SSH status(\"true\
        \ to \"Enabled) information.\n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information-\n  \n    SSH :set \"true\" to enable\
        \ ssh.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Security_enableSSH'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/15?iAction=1&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Security_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/22:
    get:
      tags:
      - SNMP
      summary: SNMP page data
      description: "This service is used to FETCH SNMP details, it uses one API structure.\n\
        \n  Setup_SNMP: Used to get SNMPV1V2Checked, SNMPV3Checked and Community string.\n\
        \n  The nodes of JSON received, contains the given information\n  \n     \
        \ SNMPV1V2Checked: This node contains '1' if SNMP V1/2c is enabled.\n    \
        \  SNMPCommunityString: This node contains SNMP Community String.\n      SNMPV3Checked:\
        \ This node contains '1' if SNMP V3 is enabled.\n"
      responses:
        "200":
          description: Json object of response of service /GET/22
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMP_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/22?iAction=3&iType=1:
    post:
      tags:
      - SNMP
      summary: Update SNMP details
      description: "This service is used to update SNMP details, you have to send\
        \ SNMP data, with POST request json.\n\n  JSON that needs to be sent as request\
        \ payload, Should contains given information\n  \n    SNMPV1V2Checked: set\
        \ 'true' if SNMP V1/2c is enabled. \n    SNMPCommunityString : SNMP Community\
        \ String. \n    SNMPV3Checked : set 'true' if SNMP V3 is enabled. \n    oldPassPhrase\
        \ : new password \n    newPassPhrase : Old password \n    confirmNewPassPhrase\
        \ : confirm password\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SNMP_Update'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/22?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMP_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/49:
    get:
      tags:
      - Software
      summary: Smart file
      description: "This service is used to fetch smart file details, it uses one\
        \ API structure.\n\n  The nodes of JSON received, contains the given information\n\
        \  \n    SmartFiles: \n    File_Name: This node contains File Name. \n   \
        \ Version: This node contains Version.\n    Message_Digest: \n    Machine_Id:\
        \ This node contains Machine id. \n    Product_Id: This node contains Product\
        \ id.\n    Order_Id: his node contains order id. \n    Icon: This node contains\
        \ icon.\n    Description:\n    Name:\n    Type:\n    Certified:\n    Vendor:\n\
        \    ReleaseDate:\n    DockerImageName:\n"
      responses:
        "200":
          description: Json object of response of service /GET/49
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/24:
    get:
      tags:
      - Software
      summary: Current software version
      description: "This service is used to get current runing software version details.\n\
        \n  The nodes of JSON received, contains the given information\n  \n    loadevent:\n\
        \    DevVer:\n"
      responses:
        "200":
          description: Json object of response of service /GET/24
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_Version'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/59:
    get:
      tags:
      - Software
      summary: Location details
      description: "This service is used to fetch location details , it uses one API\
        \ structure.\n\n  The nodes of JSON received, contains the given information\n\
        \  \n    as: This node contains network name. \n    city: This node contains\
        \ city name. \n    country: This node contains country.\n    countryCode:\
        \ This node contains countryCode. \n    isp: This node contains isp. \n  \
        \  lat: \n    lon: \n    org:\n    query: This node contains ip.\n    region:\
        \ This node contains region.\n    regionName: This node contains regionName.\n\
        \    status:\n    timezone: This node contains timezone.\n    zip: This node\
        \ contains pin code.\n"
      responses:
        "200":
          description: Json object of response of service /GET/59
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_Location'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/39?page=Software:
    get:
      tags:
      - Software
      summary: Licence details
      description: "This service is used to fetch licence details. \n\n  The nodes\
        \ of JSON received, contains the given information\n  \n    UserID: This node\
        \ contains user id.\n    MachineID: This node contains user machine id\n \
        \   Location: This node contains location.\n    PublicIP: This node contains\
        \ public id.\n    LicenceID: This node contains licence id. \n    SoftwareVersion:\
        \ This node contains software version . \n    AppStoreUrl:\n"
      responses:
        "200":
          description: Json object of response of service /GET/39?page=Software
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_Licence'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/60:
    get:
      tags:
      - Software
      summary: Check valid .software.alb file
      description: "This service is used to Check valid .software.alb file. \n\n"
      responses:
        "200":
          description: Json object of response of service /GET/60
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_LicenceCHECKvalid'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/64:
    get:
      tags:
      - Software
      summary: Check Service running status
      description: "This service is used to Check Service running status. \n\n"
      responses:
        "200":
          description: Json object of response of service /GET/64
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_LicenceCHECKservice'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/26?iAction=4&iType=1:
    post:
      tags:
      - Software
      summary: Download status
      description: "This service is used to download status.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    URL: build url.\n    Name: Name.\n    TotalSize: TotalSize.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Software_DownloadStatus'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=4&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_DownloadStatusResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/26?iAction=3&iType=1:
    post:
      tags:
      - Software
      summary: Download status or check file exist
      description: "This service is used to download status or check file exist.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    URL: build url.\n    Name: Name.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Software_DownloadStatus'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_DownloadStatusResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/26?iAction=13&iType=1:
    post:
      tags:
      - Software
      summary: Download from cloud
      description: "This service is used to download new builds.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    URL: build url.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Software_CloudDownload'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=13&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_DownResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/42:
    post:
      tags:
      - Software
      summary: Save location details
      description: "This service is used to Save location details.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    Location: Brower location.\n    PublicIP: public ip.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Software_SaveLoc'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/42
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_SaveLocationResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/26?iAction=7&iType=1:
    post:
      tags:
      - Software
      summary: Upload software
      description: "This service is used to upload smart file.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    File_Name: Name of file which is to upload.\n"
      parameters:
      - name: sequence
        in: query
        description: request type
        required: true
        style: form
        explode: true
        schema:
          type: string
          default: time
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Software_Upload'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=7&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_UploadResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/26?iAction=5&iType=1:
    post:
      tags:
      - Software
      summary: Remove software
      description: "This service is used to remove smart file from local .\n\n  JSON\
        \ that needs to be sent as request payload, Should contains given information-\n\
        \  \n    File_Name: Name of file which is to delete.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Software_Upload'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=5&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_UploadResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/26?iAction=11&iType=1&send=software:
    post:
      tags:
      - Software
      summary: Upload smart file
      description: |
        This service is used to upload smart file from local .
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=11&iType=1&send=software
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/26?iAction=2&iType=1&send=software:
    post:
      tags:
      - Software
      summary: Apply software
      description: |
        This service is used to upload and apply software file from local .
      responses:
        "200":
          description: Json object of response of service /POST/26?iAction=2&iType=1&send=software
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software_response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/19:
    get:
      tags:
      - SSL Certificates
      summary: SSL page all combo options
      description: "This service is used to FETCH all data for combo boxes used in\
        \ SSL Certificate page, it uses three API structures .\n\n  Adv_CertCreate:\
        \ Used to get Contry and Cert key length combo items.\n\n  Adv_CertMgmt: Used\
        \ to get list of all SSL Certificates available with status(Self signed, pending\
        \ etc).\n\n  Adv_CertExport: Used to get all SSL Cert available to export.\n\
        \      \n  The nodes of JSON received, contains the given information\n  \n\
        \    CerKeyLenghtCombo: This node contains options of certificate key length.\n\
        \    CountryCombo: This node contains options of countries.\n    CertificateManageCombo:\
        \ This node contains options of ssl certificates available to manage(install,\
        \ delete etc).\n    ACE_CertificateListString: This node contains options\
        \ of ssl certificates available to export.\n"
      responses:
        "200":
          description: Json object of response of service /GET/19
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCertificate'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/19?iAction=1&iType=1:
    post:
      tags:
      - SSL Certificates
      summary: Create new SSL
      description: "This service is used to create new SSL certificate, you have to\
        \ send information of SSL Certificate(Name, Organization, City etc) that needs\
        \ to be created, with POST request json.\n\n  JSON that needs to be sent as\
        \ request payload, Should contains given information-\n\n    SslCertificateNameText:\
        \ Certificate name.\n    SslOrganisationText: Organisation name.\n    SslOrganisationUnitNameText:\
        \ Organisation unit .\n    SslCountryText: id(Received as id in GET/12 service,\
        \ node CountryCombo) of option selected from Country options.\n    SslCityText:\
        \ City information.\n    SslCountyText: \n    SslDomainText: Domain Name.\n\
        \    SslKeyLengthText: Key length.\n    SSLPeriod: Period\n    ButtonFlag:\
        \ \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateSSL'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/19?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageCertificate'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/19?iAction=2&iType=7:
    post:
      tags:
      - SSL Certificates
      summary: Update Reorder
      description: |
        This service is used to Update Reorder SSL certificate, you have to send information of SSL Certificate(CetificateName, PasteSignature) that needs to be created, with POST request json.

          JSON that needs to be sent as request payload, Should contains given information-

            CetificateName: Certificate name.
            PasteSignature: PasteSignature.
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateReorderSSL'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/19?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageCertificate'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/19?iAction=1&iType=2&request=cert:
    post:
      tags:
      - SSL Certificates
      summary: Create new SSL cert request
      description: "This service is used to create new SSL certificate request that'll\
        \ generate a key, you have to send information of SSL Certificate(Name, Organization,\
        \ City etc) that needs to be created, with POST request json.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    SslCertificateNameText: Certificate name.\n    SslOrganisationText:\
        \ Organisation name.\n    SslOrganisationUnitNameText: Organisation unit .\n\
        \    SslCountryText: id(Received as id in GET/12 service, node CountryCombo)\
        \ of option selected from Country options.\n    SslCityText: City information.\n\
        \    SslCountyText: \n    SslDomainText: Domain Name.\n    SslKeyLengthText:\
        \ Key length.\n    SSLPeriod: Period\n    ButtonFlag: \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateSSLCert'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/19?iAction=1&iType=2&request=cert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageCertificate'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/19?iAction=2&iType=1&show=cert:
    post:
      tags:
      - SSL Certificates
      summary: Show details of SSL cert
      description: "This service is used to show details of avaialable SSL certificate.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    CetificateName: id(Received as id in GET/19 service, node CertificateManageCombo)\
        \ of option selected from Certificate options.\n    PasteSignature:PasteSignature/n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DetailsSSLReq'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/19?iAction=2&iType=1&show=cert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailsSSL'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/19?iAction=2&iType=2:
    post:
      tags:
      - SSL Certificates
      summary: Install ssl cert
      description: "This service is used to install avaialable SSL certificate, you\
        \ have to send Cert name with signature key, with POST request json.\n\n \
        \ JSON that needs to be sent as request payload, Should contains given information-\n\
        \    \n    CetificateName: id(Received as id in GET/19 service, node CertificateManageCombo)\
        \ of option selected from Certificate options.\n    PasteSignature: Certificate\
        \ signature text.\n    ButtonFlag: ''\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InstallSSL'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/19?iAction=2&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageCertificate'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/19?iAction=2&iType=3:
    post:
      tags:
      - SSL Certificates
      summary: Intermediate install ssl cert
      description: "This service is used to intermediate install avaialable SSL certificate,\
        \ you have to send Cert name with signature key, with POST request json.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    CetificateName: id(Received as id in GET/19 service, node CertificateManageCombo)\
        \ of option selected from Certificate options.\n    PasteSignature: Certificate\
        \ signature text. \n    ButtonFlag: ''\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IntermediateInstallSSL'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/19?iAction=2&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageCertificate'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/19?iAction=2&iType=4:
    post:
      tags:
      - SSL Certificates
      summary: Remove ssl cert
      description: "This service is used to remove avaialable SSL certificate, you\
        \ have to send Cert name, that needs to be removed, with POST request json\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    CetificateName: id(Received as id in GET/19 service, node CertificateManageCombo)\
        \ of option selected from Certificate options.\n    PasteSignature: Certificate\
        \ signature text.\n    ButtonFlag: ''\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RemoveSSL'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/19?iAction=2&iType=4
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageCertificate'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/19?iAction=2&iType=5&renew=cert:
    post:
      tags:
      - SSL Certificates
      summary: Renew ssl cert
      description: "This service is used to renew avaialable SSL certificate, you\
        \ have to send Cert name, that needs to be renewed, with POST request json.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    CetificateName: id(Received as id in GET/19 service, node CertificateManageCombo)\
        \ of option selected from Certificate options.\n    PasteSignature: Certificate\
        \ signature text.\n    ButtonFlag: ''\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RenewSSL'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/19?iAction=2&iType=5&renew=cert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewSSL_Response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/19?iAction=2&iType=6:
    post:
      tags:
      - SSL Certificates
      summary: Reorder ssl cert
      description: "This service is used to reorder avaialable SSL certificate, you\
        \ have to send Cert name, that needs to be reordered, with POST request json.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    CetificateName: id(Received as id in GET/19 service, node CertificateManageCombo)\
        \ of option selected from Certificate options.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReorderSSL'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/19?iAction=2&iType=6
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReorderSSL_Response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/19?iAction=3&iType=1&send=sslimport:
    post:
      tags:
      - SSL Certificates
      summary: Import single SSL cert
      description: "This service is used to upload SSL Certificate, you have to send\
        \ name and password in form field(SslCertificatesImportCertificateNameText,SslCertificatesImportPasswordText)\
        \ with .pfx file, that needs to be uploaded, by using form submit.\n\n  Form\
        \ fields that needs to be sent-\n  \n    SslCertificatesImportCertificateNameText:\
        \ Certificate name\n    SslCertificatesImportPasswordText: Password text\n"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POST_19iAction3iType1sendsslimport_body'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/19?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageCertificate'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/19?iAction=5&iType=1&send=sslimport:
    post:
      tags:
      - SSL Certificates
      summary: Import multiple SSL cert
      description: "This service is used to upload Multiple SSL Certificate, you have\
        \ to send password in form field(SslCertificatesImportPasswordText) with .jnbk\
        \ file, that needs to be uploaded, by using form submit.\n\n  Form fields\
        \ that needs to be sent-\n  \n    SslMultiCertificatesImportCertificateNameText:\
        \ Certificate name\n    SslMultiCertificatesImportPasswordText: Password text\n"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/POST_19iAction5iType1sendsslimport_body'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/19?iAction=5&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageCertificate'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/19?download=sslexport&iAction=4&name=Testcert2&pas=test12345&preDownloadCheck=yes:
    post:
      tags:
      - SSL Certificates
      summary: Export single/multiple certificate
      description: |
        This service is used to export(download) Single/Multiple SSL Certificate, you have to send certificate_name and password in query string.
      responses:
        "200":
          description: File will be downloaded in response of service /POST/19?download=sslexport&iAction=4&name=Testcert2&pas=test12345&preDownloadCheck=yes
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/14?req=refresh:
    get:
      tags:
      - Statistics
      summary: Statistics page data
      description: "This service is used to FETCH all Statistics details, it uses\
        \ one API structure.\n\n  Monitor_Statistics2: Used to get Statistics Information(cache,\
        \ Compression, hit count memory used etc).\n\n  The nodes of JSON received,\
        \ contains the given information-\n  \n    GUISTATUS: This node contains information\
        \ of GUI light.\n    CPU: This node contains CPU used.\n    Disk: This node\
        \ contains DISK used.\n    Memory: This node contains MEMORY used.\n    GraphMemory:\
        \ This node contains graph memory.\n    FromCacheHits1: \n    FromCacheHits2:\
        \ \n    FromCacheBytes1:\n    FromCacheBytes2: \n    FromServerHits1: \n \
        \   FromServerHits2:\n    FromServerBytes1: \n    FromServerBytes2:\n    CacheContentsHits:\
        \ This node contains cache content hits.\n    CacheContentsBytes: This node\
        \ contains bytes of cached content.\n    RawInputBytes: This node contains\
        \ raw input bytes.\n    RawOutputBytes: This node contains raw output bytes.\n\
        \    RawInputBytesSec: This node contains raw input bytes per second.\n  \
        \  RawOutputBytesSec: This node contains raw output bytes per second.\n  \
        \  ContentCompression: This node contains value of content compression.\n\
        \    UploadContentCompression: This node contains value of upload content\
        \ compression.\n    UploadContentUncompressed:\n    ContentCompressed: This\
        \ node contains value of content compressed.\n    ContentUncompressed\n  \
        \  OverallCompression: This node contains value of overall compression.\n\
        \    UploadOverallCompression: This node contains value of overall uploaded\
        \ compression.\n    InstantaneousPercent: This node contains instantaneous\
        \ percent.\n    OverallUncompressed: This node contains value of overall uncompressed.\n\
        \    UploadOverallUncompressed: This node contains value of overall upload\
        \ uncompressed.\n    InstantaneousMbpsIn: This node contains Instantaneous\
        \ Mbps In.\n    OverallCompressed: This node contains value of overall compressed.\n\
        \    OverallCompressedCache: This node contains value of overall compressed\
        \ cache.\n    InstantaneousMbpsOut: This node contains Instantaneous Mbps\
        \ out.\n    InstantaneousMbpsCache: This node contains information of Instantaneous\
        \ Mbps cache.\n    InstantaneousMbpsTotal: This node contains total of Instantaneous\
        \ Mbps.\n    HitCount: This node contains value of Hit Count.\n    InstantaneousHits:\
        \ This node contains Instantaneous Hits.\n    OverallConnections: This node\
        \ contains Overall Connections.\n    InstantaneousConnections: This node contains\
        \ information of Instantaneous Connections.\n    InstantaneousServerConnections:\
        \ This node contains Instantaneous Server Connections.\n    MaxConnections:\
        \ This node contains Maximum Connections.\n    CurrentConnections: This node\
        \ contains information of Current Connections.\n    PageTitle\n    CacheContentsBytes1\n\
        \    CacheContentsBytes2\n    UploadContentCompressed\n    TotalEntries\n\
        \    AllowedEntries\n    NewEntries\n    RevalidatedEntries\n    ExpiredEntries\n\
        \    DeletedEntries\n    LowAverageBufFillSize : This node contains information\
        \ of LowAverageBufFillSize.\n    MedAverageBufFillSize : This node contains\
        \ information of MedAverageBufFillSize.\n    HighAverageBufFillSize : This\
        \ node contains information of HighAverageBufFillSize.\n    PercentLowConnections\
        \ : This node contains information of PercentLowConnections.\n    PercentMedConnections\
        \ : This node contains information of PercentMedConnections.\n    PercentHighConnections\
        \ : This node contains information of PercentHighConnections.\n    PercentLowMemory\
        \ : This node contains information of PercentLowMemory.\n    PercentMedMemory\
        \ : This node contains information of PercentMedMemory.\n    PercentHighMemory\
        \ : This node contains information of PercentHighMemory.\n    LowMemoryFree\
        \ : This node contains information of LowMemoryFree.\n    MedMemoryUsed :\
        \ This node contains information of MedMemoryUsed.\n    MedMemoryFree : This\
        \ node contains information of MedMemoryFree.\n    HighMemoryUsed : This node\
        \ contains information of HighMemoryUsed.\n    HighMemoryFree : This node\
        \ contains information of HighMemoryFree.\n    LowConnectionsUsed : This node\
        \ contains information of LowConnectionsUsed.\n    LowConnectionsFree : This\
        \ node contains information of LowConnectionsFree.\n    MedConnectionsFree\
        \ : This node contains information of MedConnectionsFree.\n    HighConnectionsUsed\
        \ : This node contains information of HighConnectionsUsed.\n    HighConnectionsFree\
        \ : This node contains information of HighConnectionsFree.\n  "
      responses:
        "200":
          description: Json object of response of service /GET/14?req=refresh
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor_Statistics2'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/14?iAction=1&iType=1:
    post:
      tags:
      - Statistics
      summary: Reset
      description: "This service is used to Reset.\n\n  JSON that needs to be sent\
        \ as request payload, Should contains given information-\n  \n      reset:\
        \ \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/statistics_reset'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/36?iAction=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor_Statistics2'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/31?isPageLoad=true:
    get:
      tags:
      - Status
      summary: Status page data
      description: |
        This service is used to FETCH Status details for all Virtual Services (hit/second, request/second, cache % etc), it uses one API structure.

          Setup_IPServices: Used to get Status of all Virtual Services and their Real Servers.

          The nodes of JSON received, contains the given information-

            dataset: This node contains collection of all IP VIP, VS and their real servers.
            RowType: This node contains row information for coloring(such as total, subtotal etc).
            interfaceImagePath: This node contains image path if it's a VIP.
            interfaceStatusReason: This node contains status reason that shown on tooltip of image.
            channelImagePath: This node contains image path if it's a VS.
            channelStatusReason: This node contains status reason that shown on tooltip of image.
            serviceName: This node contains name of VS.
            VIPPort: This node contains value of PORT of VS.
            hitsecnew: This node contains hits per second.
            cacheperc: This node contains cache percentage.
            compress: This node contains value off compression.
            rsImagePath: This node contains image path of real server.
            rsStatusReason: This node contains status reason that shown on tooltip of image..
            realServer: This node contains ip address of real server.
            realServerNotes: This node contains real server notes.
            conn: This node contains value of connections.
            data: This node contains value of data.
            reqsec: This node contains value of request per second.
            pool: This node contains value of pool size.
            ipService:ipService.
            sId:sId.
            FilterKeyword: FilterKeyword.
      responses:
        "200":
          description: Json object of response of service /GET/31
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_IPServices'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/36:
    get:
      tags:
      - Status
      summary: Status Layout data
      description: "This service is used to FETCH Status layout details for all columns.\n\
        \n   The nodes of JSON received, contains the given information\n   \n   \
        \  layoutCheck: This node contains information if layout is selected by user\
        \ or not(otherwise show default layout).\n     dataset: This node contains\
        \ width information of all columns.\n     id: This node contains id that uniquely\
        \ identify each column.\n     width: This node contains width of each column(if\
        \ width is '0' then column is hidden).\n"
      responses:
        "200":
          description: Json object of response of service /GET/36
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_IPServicesLayout'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/36?iAction=1:
    post:
      tags:
      - Status
      summary: Save status layout
      description: "This service is used to update status layout details.\n\n  JSON\
        \ that needs to be sent as request payload, Should contains given information-\n\
        \  \n      id: id of to identify each column.\n      layoutcheck: if user\
        \ selected to save layout information then '1' otherwise '0'. \n      width:\
        \ width of each column, send '0' if needs to hide a column. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Setup_IPServicesSave'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/36?iAction=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setup_IPServicesLayout'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/23:
    get:
      tags:
      - Troubleshooting
      summary: Capture details
      description: "This service is used to FETCH Capture details, it uses two API\
        \ structure.\n\n  Services_Capture: Used to get Capture information like adapter\
        \ used and number of packets etc.\n\n  Setup_Network: Used to get all available\
        \ Adapters list string.\n  \n  The nodes of JSON received, contains the given\
        \ information\n  \n    CaptureAdapterCombo: This node contains options of\
        \ adapter available for capture.\n    CaptureAdapter: This node contains adapter\
        \ selected by user for capture.\n    CapturePackets: This node contains number\
        \ of packets to capture.\n    CaptureTime: This node contains capture time.\n\
        \    CaptureLeft: This node contains capture left to download.\n    SupportFileCombo:\
        \ This node contains options of SupportFile.\n    CaptureAddress: This node\
        \ contains CaptureAddress.\n"
      responses:
        "200":
          description: Json object of response of service /GET/23
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Troubleshooting_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/58:
    get:
      tags:
      - Troubleshooting
      summary: Trace details
      description: "This service is used to FETCH Trace details.\n\n  The nodes of\
        \ JSON received, contains the given information.\n  \n    AutoStopTime: \n\
        \    Nodes: \n    AutoStopRecords:\n    TracePath: \n    TraceConnections:\
        \ \n    TraceCache: \n    TraceData: \n    flightpathCombo:\n    ServerMonitor:\n\
        \    MonitoringFault:\n    TraceStatus:\n    Purpose:\n    List:\n"
      responses:
        "200":
          description: Json object of response of service /GET/58
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trouble_TraceDetail'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/41?PingTempfile=pingresultsxpc62L:
    get:
      tags:
      - Troubleshooting
      summary: Ping Result
      description: "This service is used to FETCH Ping Result after ping request.\n\
        \n  The nodes of JSON received, contains the given information.\n  \n    success:\
        \ \n    StatusImage: \n    StatusText:\n    PingResult: \n    PingTempfile:\
        \ \n"
      responses:
        "200":
          description: Json object of response of service /GET/41?PingTempfile=pingresultsxpc62L
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ping_results'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/21?download=support&pid=242604:
    get:
      tags:
      - Troubleshooting
      summary: Fire After Support File Request
      description: "This service is used to FETCH  Results after support file request.\n\
        \n  The nodes of JSON received, contains the given information.\n  \n    success:\
        \ \n    DownloadStatus: \n"
      responses:
        "200":
          description: Json object of response of service /GET/21?download=support&pid=242604
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resultsAfterSupport_File'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/58?iAction=1&iType=2:
    post:
      tags:
      - Troubleshooting
      summary: Clear Trace
      description: "This service is used to trace. you have to send Purpose with post\
        \ request JSON.\n\n  JSON that needs to be sent as request payload, Should\
        \ contains given information-\n  \n    Purpose: Purpose text. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Trouble_TraceClear'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/58?iAction=1&iType=2
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trouble_TraceDetail'
                x-content-type: application/json
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/23?iAction=4&iType=1:
    post:
      tags:
      - Troubleshooting
      summary: Start capture download process
      description: "This service is used to start capture download processing. you\
        \ have to send Adapter, packets and duration, with post request JSON.\n\n\
        \  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    CaptureHidden: capture flag. \n    Adapter : id(Received as id in\
        \ GET/23 service, node CaptureAdapterCombo) of option selected from Adapter\
        \ options. \n    Packets : number of packets needs to be captured. \n    Duration\
        \ : Duration of capture. \n    CaptureAddress:CaptureAddress.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Trouble_DownCapture'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/23?iAction=4&iType=1
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Troubleshooting_Data'
                x-content-type: application/json
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/23?duration=50&packets=999999&adapter=any&download=capture&preDownloadCheck=yes:
    get:
      tags:
      - Troubleshooting
      summary: Download capture
      description: |
        This service is used to download capture file. you have to send Adapter,packets, duration and download=capture, in query string. This will work only if capture processing already started by above POST request.
          Query string: for example duration=5&packets=99978&adapter=eth0&download=capture
      responses:
        "200":
          description: File will be downloaded in response of service /GET/23?duration=50&packets=999999&adapter=any&download=capture&preDownloadCheck=yes
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/24?iAction=5&iType=4:
    post:
      tags:
      - Troubleshooting
      summary: Ping
      description: "This service is used to ping any IP address. you have to send\
        \ IP address, with post request JSON.\n\n  JSON that needs to be sent as request\
        \ payload, Should contains given information-\n  \n    ipAddress : IP address\
        \ for Ping.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Trouble_Ping'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/24?iAction=5&iType=4
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trouble_PingResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/53?iAction=6&iType=1:
    post:
      tags:
      - Troubleshooting
      summary: Download support file
      description: "This service is used to download support file. you have to send\
        \ days, with post request JSON.\n\n  JSON that needs to be sent as request\
        \ payload, Should contains given information-\n  \n    Days : days.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Trouble_DownSupport'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/53?iAction=6&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trouble_SupportResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/58?iAction=1&iType=1:
    post:
      tags:
      - Troubleshooting
      summary: Start/Stop Trace
      description: "This service is used to start/stop trace .\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    AutoStopRecords: \n    AutoStopTime : \n    Nodes : \n    ServerMonitor\
        \ : \n    TraceData: \n    Start: \n    TraceCache: \n    TraceConnections:\
        \ \n    MonitoringFault: \n    Purpose : \n    TracePath:\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Trouble_Trace'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/58?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trouble_TraceDetail'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/58?download=trace:
    get:
      tags:
      - Troubleshooting
      summary: Trace download
      description: |
        This service is used to download trace file.
      responses:
        "200":
          description: File will be downloaded in response of service /GET/58?download=trace
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/33:
    get:
      tags:
      - Users
      summary: User page data
      description: "This service is used to FETCH USERs details, it uses one API structure.\n\
        \n  Config_MultiUserAccess: Used to get all Users and their information(cluster\
        \ user or local, access rights etc).\n\n  The nodes of JSON received, contains\
        \ the given information-\n  \n      Members: This node contains data of all\
        \ users.\n      id: This node contains id of user.\n      OldPassword: This\
        \ node contains oldpassword of users.\n      NewPassword: This node contains\
        \ newpassword of users.\n      UserType: This node contains user type(such\
        \ as cluster, local or clusterlocal).\n      UserName: This node contains\
        \ username.\n      isAdmin: This node contains '1' if user have admin access\
        \ rights.\n      isGUIW: This node contains '1' if user have GUI Write access\
        \ rights.\n      isGUIR: This node contains '1' if user have GUI Read access\
        \ rights.\n      isSSH: This node contains '1' if user have SSH access rights.\n\
        \      isAPI: This node contains '1' if user have API access rights.\n   \
        \   isAddOn : This node contains '1' if user have AddOn access rights.\n"
      responses:
        "200":
          description: Json object of response of service /GET/33
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/34:
    get:
      tags:
      - Users
      summary: User access logs
      description: "This service is used to FETCH User access log details, it uses\
        \ one API structure.\n\n  Monitor_Logging2: Used to get last 50 access logs\
        \ of current user.\n  \n  The nodes of JSON received, contains the given information\n\
        \    \n    Logs: This node contains data of last 50 access logs.\n    Row:\
        \ This node contains one access log each.\n"
      responses:
        "200":
          description: Json object of response of service /GET/34
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users_Logs'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/33?iAction=1&iType=1:
    post:
      tags:
      - Users
      summary: Add new user
      description: "This service is used to add new user, you have to send username,\
        \ password and access rights needed for user, with POST request json.\n\n\
        \  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    UserName : UserName. \n    NewPassword : New Password. \n    OldPassword\
        \ : Old Password. \n    isAPI : set to '1' if user have API access rights.\n\
        \    isAddOn : set to '1' if user have AddOn access rights. \n    isAdmin\
        \ : set to '1' if user have admin access rights. \n    isGUIR : set to '1'\
        \ if user have GUI Read access rights. \n    isGUIW : set to '1' if user have\
        \ GUI Write access rights. \n    isSSH : set to '1' if user have SSH access\
        \ rights.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Users_Add'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/33?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/33?iAction=1&iType=2:
    post:
      tags:
      - Users
      summary: Update user
      description: "This service is used to update user details.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    UserName : UserName. \n    NewPassword : New Password. \n    OldPassword\
        \ : Old Password. \n    isAPI : set to '1' if user have API access rights.\n\
        \    isAddOn : set to '1' if user have AddOn access rights. \n    isAdmin\
        \ : set to '1' if user have admin access rights. \n    isGUIR : set to '1'\
        \ if user have GUI Read access rights. \n    isGUIW : set to '1' if user have\
        \ GUI Write access rights. \n    isSSH : set to '1' if user have SSH access\
        \ rights.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Users_Update'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/33?iAction=1&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/33?iAction=1&iType=3:
    post:
      tags:
      - Users
      summary: Delete user
      description: "This service is used to delete a user, you have to send username,\
        \ with POST request json.\n\n  JSON that needs to be sent as request payload,\
        \ Should contains given information-\n  \n    UserName : UserName\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Users_Delete'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/33?iAction=1&iType=3
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users_Data'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/34?download=audit&iAction=1&iType=1&preDownloadCheck=yes:
    get:
      tags:
      - Users
      summary: Download access log in text
      description: |
        This service is used to download user access log file in text format, you have to send download=audit in query string.
      responses:
        "200":
          description: File will be downloaded in response of service /GET/34?download=audit&iAction=1&iType=1&preDownloadCheck=yes
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/34?download=audit&iAction=1&iType=2&preDownloadCheck=yes:
    get:
      tags:
      - Users
      summary: Download access log in Compressed
      description: |
        This service is used to download user access log file in compressed format(GZIP), you have to send download=audit in query string.
      responses:
        "200":
          description: File will be downloaded in response of service /GET/34?download=audit&iAction=1&iType=2&preDownloadCheck=yes
          content: {}
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /GET/51:
    get:
      tags:
      - Widget
      summary: Widget details
      description: "This service is used to FETCH widget details.\n\n  The nodes of\
        \ JSON received, contains the given information\n\n    ConfiguredWidgetsComboStore:\
        \ This node contains Configured Widgets options.\n    data: This node contains\
        \ avaliable widgets.\n    PartID: This node contains part id of widget. \n\
        \    SectionName: This node contains section of widget. \n    Widget_Name:\
        \ This node contains name of widget.\n"
      responses:
        "200":
          description: Json object of response of service /GET/51
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWidget'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/51?iAction=2&iType=3&page=Widget:
    post:
      tags:
      - Widget
      summary: Edit System Widget
      description: "This service is used for edit system widget.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    Section_Name: section name of widget. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EditSysWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=2&iType=3&page=Widget
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=2&iType=1&page=Widget:
    post:
      tags:
      - Widget
      summary: Edit Event Widget
      description: "This service is used for edit event widget.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    Section_Name: section name of widget. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EditSysWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=2&iType=1&page=Widget
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditEventResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/51?iAction=2&iType=4&page=Widget:
    post:
      tags:
      - Widget
      summary: Edit IPStatus Widget
      description: "This service is used for edit IPStatus widget.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    Section_Name: section name of widget. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EditSysWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/51?iAction=2&iType=4&page=Widget
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditIPStatusResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /GET/48?EditWidget=true&WidgetName=IPService-widget1:
    get:
      tags:
      - Widget
      summary: Edit IPService Widget
      description: |
        This service is used for edit IPService widget.
      responses:
        "200":
          description: Json object of response of service /GET/48?EditWidget=true&WidgetName=IPService-widget1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditIPServiceResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /POST/48?iAction=8&iType=1:
    post:
      tags:
      - Widget
      summary: Update System Widget
      description: "This service is used for update system widget after edit.\n\n\
        \  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    System_Name: name of widget. \n    System_Type: \n    Update_Section_Name:\
        \ section name of widget. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateSysWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST48?iAction=8&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/48?iAction=5&iType=1:
    post:
      tags:
      - Widget
      summary: Update Event Widget
      description: "This service is used for update event widget after edit.\n\n \
        \ JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    DashboardEvent_Filter: filter keyword. \n    DashboardEvent_Name:\
        \ name of widget.\n    Update_Section_Name: section name of widget. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateEventWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST48?iAction=5&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/48?iAction=7&iType=1:
    post:
      tags:
      - Widget
      summary: Update IPStatus Widget
      description: "This service is used for update IPStatus widget after edit.\n\n\
        \  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    IPStatus_IP: ip address. \n    IPStatus_Layout: \n    IPStatus_Name:\
        \ name of widget.\n    Update_Section_Name: section name of widget. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateIPStatusWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST48?iAction=7&iType=1
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RemoveWidgetResp'
                x-content-type: application/json
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/48?iAction=6&iType=1:
    post:
      tags:
      - Widget
      summary: Update IPService Widget
      description: "This service is used for update IPService widget after edit.\n\
        \n  JSON that needs to be sent as request payload, Should contains given information-\n\
        \  \n    IPService_Columns:  \n    IPService_Period: . \n    IPService_Type:\
        \ \n    IPService_VSRS: \n    IPService_Name: name of widget.\n    Update_Section_Name:\
        \ section name of widget. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateIPServiceWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST48?iAction=6&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/48?iAction=10&iType=1:
    post:
      tags:
      - Widget
      summary: Remove Widget
      description: "This service is used for remove widget.\n\n  JSON that needs to\
        \ be sent as request payload, Should contains given information-\n  \n   \
        \ Remove_Section_Name: section name of widget that needs to be removed. \n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RemoveWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/48?iAction=10&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/48?iAction=1&iType=1:
    post:
      tags:
      - Widget
      summary: Make Event Widget
      description: "This service is used for make event widget.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    DashboardEvent_Filter: filter for widget.\n    DashboardEvent_Name: widget\
        \ name.\n    Section_Name:widget section.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/EventWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/48?iAction=1&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/48?iAction=3&iType=1:
    post:
      tags:
      - Widget
      summary: Make IPstatus Widget
      description: "This service is used for make ipstatus widget.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    IPStatus_IP: filter IP.\n    IPStatus_Layout: widget layout.\n  \
        \  IPStatus_Name:widget name.\n    Section_Name:widget section.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IPStatusWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/48?iAction=3&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/48?iAction=4&iType=1:
    post:
      tags:
      - Widget
      summary: Make System Widget
      description: "This service is used for make system widget.\n\n  JSON that needs\
        \ to be sent as request payload, Should contains given information-\n  \n\
        \    Section_Name: widget section.\n    System_Name: widget name.\n    System_Type:\
        \ system type.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SystemWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/48?iAction=4&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/48?iAction=2&iType=1:
    post:
      tags:
      - Widget
      summary: Make IPService Widget
      description: "This service is used for make ipservice widget.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    IPService_Columns: \n    IPService_Name:\n    IPService_Period:\n\
        \    IPService_Type:\n    IPService_VSRS:\n    Section_Name:\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/IPServiceWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/48?iAction=2&iType=1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
  /POST/48?iAction=4&iType=2:
    post:
      tags:
      - Widget
      summary: Make Interface Widget
      description: "This service is used for make interface widget.\n\n  JSON that\
        \ needs to be sent as request payload, Should contains given information-\n\
        \  \n    Interface_Name: name of interface. \n    Section_Name: widget section.\n"
      requestBody:
        description: Object that needs to be sent to the server
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/InterfaceWidget'
        required: true
      responses:
        "200":
          description: Json object of response of service /POST/48?iAction=4&iType=2
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveWidgetResp'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: jsonData
components:
  schemas:
    Error:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
        StatusText:
          type: string
    AddOns_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        AddOns:
          $ref: '#/components/schemas/AddOns_Data_AddOns'
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        AddOns:
          dataset:
            row:
            - ExternalPort: ExternalPort
              isPaused: isPaused
              ParentImage: ParentImage
              ExternalAdapter: ExternalAdapter
              TimeStopped: TimeStopped
              AppName: AppName
              TimeStarted: TimeStarted
              ExternalIP: ExternalIP
              AddonImport: AddonImport
              AddOnGUI: AddOnGUI
              DockerImage: DockerImage
              id: id
              AddOnID: AddOnID
              sIcon: sIcon
              InternalIP: InternalIP
            - ExternalPort: ExternalPort
              isPaused: isPaused
              ParentImage: ParentImage
              ExternalAdapter: ExternalAdapter
              TimeStopped: TimeStopped
              AppName: AppName
              TimeStarted: TimeStarted
              ExternalIP: ExternalIP
              AddonImport: AddonImport
              AddOnGUI: AddOnGUI
              DockerImage: DockerImage
              id: id
              AddOnID: AddOnID
              sIcon: sIcon
              InternalIP: InternalIP
        isRestore: "false"
    AddOns_UpdateData:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        TotalSize:
          type: string
          description: "0"
        DownloadedSize:
          type: string
          description: ""
      example:
        StatusText: StatusText
        DownloadedSize: DownloadedSize
        success: success
        StatusImage: StatusImage
        TotalSize: TotalSize
    AddOns_Update_PostData:
      type: object
      properties:
        AddOnName:
          type: string
          description: mz12
        ConfigID:
          type: string
          description: "4"
        ExternalIPAddress:
          type: string
          description: ""
        ExternalPort:
          type: string
          description: ""
        Repository:
          type: string
          description: jetnexus/waf
      example:
        ExternalPort: ExternalPort
        Repository: Repository
        ExternalIPAddress: ExternalIPAddress
        ConfigID: ConfigID
        AddOnName: AddOnName
    AddOns_PublicIP:
      type: object
      properties:
        AddOnGUI:
          type: string
          description: ""
      example:
        AddOnGUI: AddOnGUI
    AddOns_PublicIP_response:
      type: object
      properties:
        PUBLIC_IP:
          type: string
          description: ""
      example:
        PUBLIC_IP: PUBLIC_IP
    AddOns_Play:
      type: object
      properties:
        AddOnID:
          type: string
          description: ""
        AddOnName:
          type: string
          description: mz12
        ConfigID:
          type: string
          description: "4"
        ExternalIPAddress:
          type: string
          description: ""
        ExternalPort:
          type: string
          description: ""
        Repository:
          type: string
          description: jetnexus/waf
      example:
        ExternalPort: ExternalPort
        Repository: Repository
        ExternalIPAddress: ExternalIPAddress
        AddOnID: AddOnID
        ConfigID: ConfigID
        AddOnName: AddOnName
    AddOns_Pause:
      type: object
      properties:
        AddOnID:
          type: string
          description: 870b59b6a541fbc7e365366a0751c0c987ca5447a933d011a670478b6bcd391c
        ConfigID:
          type: string
          description: "5"
      example:
        AddOnID: AddOnID
        ConfigID: ConfigID
    AddOns_Stop:
      type: object
      properties:
        AddOnID:
          type: string
          description: 870b59b6a541fbc7e365366a0751c0c987ca5447a933d011a670478b6bcd391c
        ConfigID:
          type: string
          description: "5"
        Repository:
          type: string
          description: jetnexus/alb
      example:
        Repository: Repository
        AddOnID: AddOnID
        ConfigID: ConfigID
    AddOns_Remove:
      type: object
      properties:
        ConfigID:
          type: string
          description: "1"
        AddOnID:
          type: string
          description: "1"
      example:
        ConfigID: ConfigID
        AddOnID: AddOnID
    AddOns_Response:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: Your changes have been applied
    AddOnsdataset_row:
      type: object
      properties:
        id:
          type: string
          description: "1"
        AppName:
          type: string
          description: jony
        ParentImage:
          type: string
          description: ""
        DockerImage:
          type: string
          description: training/webapp
        TimeStarted:
          type: string
          description: ""
        TimeStopped:
          type: string
          description: 2016-03-11T13:03:35.000Z
        InternalIP:
          type: string
          description: ""
        AddOnID:
          type: string
          description: ""
        AddOnGUI:
          type: string
          description: ""
        ExternalIP:
          type: string
          description: 192.168.1.148
        ExternalPort:
          type: string
          description: "80"
        ExternalAdapter:
          type: string
          description: 192.168.1.148 is available on eth0
        sIcon:
          type: string
          description: ""
        isPaused:
          type: string
          description: "0"
        AddonImport:
          type: string
          description: "true"
      example:
        ExternalPort: ExternalPort
        isPaused: isPaused
        ParentImage: ParentImage
        ExternalAdapter: ExternalAdapter
        TimeStopped: TimeStopped
        AppName: AppName
        TimeStarted: TimeStarted
        ExternalIP: ExternalIP
        AddonImport: AddonImport
        AddOnGUI: AddOnGUI
        DockerImage: DockerImage
        id: id
        AddOnID: AddOnID
        sIcon: sIcon
        InternalIP: InternalIP
    AppStore_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif.
        StatusText:
          type: string
          description: get.
        UserID:
          type: string
          description: admin.
        MachineID:
          type: string
          description: 0800-2745-80BF.
        Location:
          type: string
          description: "Noida, India."
        PublicIP:
          type: string
          description: 113.193.186.241.
        LicenceID:
          type: string
          description: E845FF30-5AC9-467C-80AF-1B61731B6615.
        SoftwareVersion:
          type: string
          description: 4.2.1 (Build 1700) 7g0859.
        AppStoreUrl:
          type: string
          description: https://appstore.jetnexuscloud.com.
      example:
        MachineID: MachineID
        SoftwareVersion: SoftwareVersion
        StatusText: StatusText
        PublicIP: PublicIP
        success: success
        UserID: UserID
        LicenceID: LicenceID
        StatusImage: StatusImage
        AppStoreUrl: AppStoreUrl
        Location: Location
    Apps_DownResponse:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: Download Complete
        TotalSize:
          type: string
          description: ""
        DownloadedSize:
          type: string
          description: ""
      example:
        StatusText: StatusText
        DownloadedSize: DownloadedSize
        success: success
        StatusImage: StatusImage
        TotalSize: TotalSize
    Apps_Response:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: Your changes have been applied
    Apps_Available:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        SmartFiles:
          $ref: '#/components/schemas/Apps_Available_SmartFiles'
      example:
        StatusText: StatusText
        success: success
        SmartFiles:
          Files:
          - Order_Id: Order_Id
            DockerImageName: DockerImageName
            Description: Description
            File_Name: File_Name
            Product_Id: Product_Id
            Certified: Certified
            Message_Digest: Message_Digest
            Vendor: Vendor
            ReleaseDate: ReleaseDate
            Name: Name
            Type: Type
            Version: Version
            Machine_Id: Machine_Id
            Icon: Icon
          - Order_Id: Order_Id
            DockerImageName: DockerImageName
            Description: Description
            File_Name: File_Name
            Product_Id: Product_Id
            Certified: Certified
            Message_Digest: Message_Digest
            Vendor: Vendor
            ReleaseDate: ReleaseDate
            Name: Name
            Type: Type
            Version: Version
            Machine_Id: Machine_Id
            Icon: Icon
        StatusImage: StatusImage
    AppsSmartFiles_opt:
      type: object
      properties:
        File_Name:
          type: string
          description: MyCSMTest.monitor.alb
        Version:
          type: string
          description: v2.1
        Message_Digest:
          type: string
          description: ""
        Machine_Id:
          type: string
          description: ""
        Product_Id:
          type: string
          description: PRODUCT1
        Order_Id:
          type: string
          description: order1
        Icon:
          type: string
          description: iVBORw0KGgo
        Description:
          type: string
          description: Desc1
        Name:
          type: string
          description: MyCSMTest
        Type:
          type: string
          description: monitor.alb
        Certified:
          type: string
          description: iso13001
        Vendor:
          type: string
          description: jetnexus
        ReleaseDate:
          type: string
          description: 21 oct
        DockerImageName:
          type: string
          description: ""
      example:
        Order_Id: Order_Id
        DockerImageName: DockerImageName
        Description: Description
        File_Name: File_Name
        Product_Id: Product_Id
        Certified: Certified
        Message_Digest: Message_Digest
        Vendor: Vendor
        ReleaseDate: ReleaseDate
        Name: Name
        Type: Type
        Version: Version
        Machine_Id: Machine_Id
        Icon: Icon
    Apps_Deploy:
      type: object
      properties:
        Name:
          type: string
          description: filename
      example:
        Name: Name
    Apps_Download:
      type: object
      properties:
        Name:
          type: string
          description: filename
        URL:
          type: string
          description: ""
      example:
        URL: URL
        Name: Name
    Apps_DownloadOne:
      type: object
      properties:
        Name:
          type: string
          description: filename
        URL:
          type: string
          description: ""
        TotalSize:
          type: string
          description: ""
      example:
        TotalSize: TotalSize
        URL: URL
        Name: Name
    Apps_Remove:
      type: object
      properties:
        FileName:
          type: string
          description: filename
        DockerImageName:
          type: string
          description: imagename
      example:
        DockerImageName: DockerImageName
        FileName: FileName
    App_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif.
        StatusText:
          type: string
          description: get.
        UserID:
          type: string
          description: admin.
        MachineID:
          type: string
          description: 0800-2745-80BF.
        Location:
          type: string
          description: "Noida, India."
        PublicIP:
          type: string
          description: 113.193.186.241.
        LicenceID:
          type: string
          description: E845FF30-5AC9-467C-80AF-1B61731B6615.
        SoftwareVersion:
          type: string
          description: 4.2.1 (Build 1700) 7g0859.
        AppStoreUrl:
          type: string
          description: https://appstore.jetnexuscloud.com.
      example:
        MachineID: MachineID
        SoftwareVersion: SoftwareVersion
        StatusText: StatusText
        PublicIP: PublicIP
        success: success
        UserID: UserID
        LicenceID: LicenceID
        StatusImage: StatusImage
        AppStoreUrl: AppStoreUrl
        Location: Location
    App_Data_69_Get:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif.
        StatusText:
          type: string
          description: get.
        CsmKey:
          type: string
          description: admin.
        TimeofDay:
          type: string
          description: 0800-2745-80BF.
      example:
        CsmKey: CsmKey
        TimeofDay: TimeofDay
    Authentication_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        AuthServersCombo:
          $ref: '#/components/schemas/Authentication_Data_AuthServersCombo'
        AuthMethodCombo:
          $ref: '#/components/schemas/Authentication_Data_AuthMethodCombo'
        ClientAuthMethodsCombo:
          $ref: '#/components/schemas/Authentication_Data_ClientAuthMethodsCombo'
        ServerAuthMethodsCombo:
          $ref: '#/components/schemas/Authentication_Data_ServerAuthMethodsCombo'
        AuthFormsCombo:
          $ref: '#/components/schemas/Authentication_Data_AuthFormsCombo'
        LoginFormatListString:
          $ref: '#/components/schemas/Authentication_Data_LoginFormatListString'
        PreAuthServerGrid:
          $ref: '#/components/schemas/Authentication_Data_PreAuthServerGrid'
        PreAuthRuleGrid:
          $ref: '#/components/schemas/Authentication_Data_PreAuthRuleGrid'
      example:
        LoginFormatListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        AuthServersCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        ServerAuthMethodsCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        ClientAuthMethodsCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        AuthMethodCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        PreAuthRuleGrid:
          dataset:
            row:
            - ClientAuthMethod: ClientAuthMethod
              Description: Description
              Message: Message
              RootDomain: RootDomain
              ServerAuthMethod: ServerAuthMethod
              Timeout: Timeout
              AuthServer: AuthServer
              id: id
              AuthForm: AuthForm
              Name: Name
            - ClientAuthMethod: ClientAuthMethod
              Description: Description
              Message: Message
              RootDomain: RootDomain
              ServerAuthMethod: ServerAuthMethod
              Timeout: Timeout
              AuthServer: AuthServer
              id: id
              AuthForm: AuthForm
              Name: Name
        AuthFormsCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        PreAuthServerGrid:
          dataset:
            row:
            - Description: Description
              LoginFormat: LoginFormat
              Address: Address
              DeadTime: DeadTime
              Searchcondition: Searchcondition
              Port: Port
              Passphrase: Passphrase
              SearchBase: SearchBase
              id: id
              Domain: Domain
              AuthMethod: AuthMethod
              Name: Name
            - Description: Description
              LoginFormat: LoginFormat
              Address: Address
              DeadTime: DeadTime
              Searchcondition: Searchcondition
              Port: Port
              Passphrase: Passphrase
              SearchBase: SearchBase
              id: id
              Domain: Domain
              AuthMethod: AuthMethod
              Name: Name
    AuthServers_opt:
      type: object
      properties:
        id:
          type: string
          description: "1"
        value:
          type: string
          description: new1
      example:
        id: id
        value: value
    AuthMethod_opt:
      type: object
      properties:
        id:
          type: string
          description: ldap
        value:
          type: string
          description: LDAP
      example:
        id: id
        value: value
    ClientAuth_opt:
      type: object
      properties:
        id:
          type: string
          description: basic
        value:
          type: string
          description: Basic(401)
      example:
        id: id
        value: value
    ServerAuth_opt:
      type: object
      properties:
        id:
          type: string
          description: basic
        value:
          type: string
          description: Basic
      example:
        id: id
        value: value
    AuthForms_opt:
      type: object
      properties:
        id:
          type: string
          description: ""
        value:
          type: string
          description: ""
      example:
        id: id
        value: value
    LoginFormat_opt:
      type: object
      properties:
        id:
          type: string
          description: usernameonly
        value:
          type: string
          description: Username Only
      example:
        id: id
        value: value
    PreAuthServer_row:
      type: object
      properties:
        id:
          type: string
          description: "1"
        Name:
          type: string
          description: new1
        Description:
          type: string
          description: test1
        AuthMethod:
          type: string
          description: LDAP
        Domain:
          type: string
          description: local@test.com
        Address:
          type: string
          description: 1.2.3.4
        Port:
          type: string
          description: "34"
        SearchBase:
          type: string
          description: test
        LoginFormat:
          type: string
          description: Username and Domain
        Passphrase:
          type: string
          description: test
        DeadTime:
          type: string
          description: "45"
        Searchcondition:
          type: string
          description: ""
      example:
        Description: Description
        LoginFormat: LoginFormat
        Address: Address
        DeadTime: DeadTime
        Searchcondition: Searchcondition
        Port: Port
        Passphrase: Passphrase
        SearchBase: SearchBase
        id: id
        Domain: Domain
        AuthMethod: AuthMethod
        Name: Name
    PreAuthRule_row:
      type: object
      properties:
        id:
          type: string
          description: "1"
        Name:
          type: string
          description: test1
        Description:
          type: string
          description: t
        RootDomain:
          type: string
          description: ""
        AuthServer:
          type: string
          description: new1
        ClientAuthMethod:
          type: string
          description: Basic(401)
        ServerAuthMethod:
          type: string
          description: BASIC
        AuthForm:
          type: string
          description: default
        Message:
          type: string
          description: tr
        Timeout:
          type: string
          description: "45"
      example:
        ClientAuthMethod: ClientAuthMethod
        Description: Description
        Message: Message
        RootDomain: RootDomain
        ServerAuthMethod: ServerAuthMethod
        Timeout: Timeout
        AuthServer: AuthServer
        id: id
        AuthForm: AuthForm
        Name: Name
    RemoveAuthenticationForm:
      type: object
      properties:
        id:
          type: string
          description: "1"
      example:
        id: id
    AddAuthentication:
      type: object
      properties:
        Address:
          type: string
          description: 6.6.6.8
        AuthMethod:
          type: string
          description: ldap
        DeadTime:
          type: string
          description: "64"
        Description:
          type: string
          description: test2
        Domain:
          type: string
          description: l@c.com
        LoginFormat:
          type: string
          description: Username Only
        Name:
          type: string
          description: new2
        Passphrase:
          type: string
          description: ette
        Port:
          type: string
          description: "88"
        SearchBase:
          type: string
          description: test
        Searchcondition:
          type: string
          description: ""
      example:
        Description: Description
        LoginFormat: LoginFormat
        Address: Address
        DeadTime: DeadTime
        Searchcondition: Searchcondition
        Port: Port
        Passphrase: Passphrase
        SearchBase: SearchBase
        Domain: Domain
        AuthMethod: AuthMethod
        Name: Name
    UpdateAuthentication:
      type: object
      properties:
        Address:
          type: string
          description: 6.6.6.8
        AuthMethod:
          type: string
          description: ldap
        DeadTime:
          type: string
          description: "64"
        Description:
          type: string
          description: test2
        Domain:
          type: string
          description: l@c.com
        LoginFormat:
          type: string
          description: Username Only
        Name:
          type: string
          description: new2
        Passphrase:
          type: string
          description: ette
        Port:
          type: string
          description: "88"
        SearchBase:
          type: string
          description: test
        id:
          type: string
          description: "3"
        Searchcondition:
          type: string
          description: ""
      example:
        Description: Description
        LoginFormat: LoginFormat
        Address: Address
        DeadTime: DeadTime
        Searchcondition: Searchcondition
        Port: Port
        Passphrase: Passphrase
        SearchBase: SearchBase
        id: id
        Domain: Domain
        AuthMethod: AuthMethod
        Name: Name
    RemoveAuthentication:
      type: object
      properties:
        id:
          type: string
          description: "1"
      example:
        id: id
    RuleAuthentication:
      type: object
      properties:
        AuthForm:
          type: string
          description: "4"
        AuthServer:
          type: string
          description: "3"
        ClientAuthMethod:
          type: string
          description: forms
        Description:
          type: string
          description: test
        Message:
          type: string
          description: test
        Name:
          type: string
          description: testRule1
        RootDomain:
          type: string
          description: ""
        ServerAuthMethod:
          type: string
          description: ntlm
        Timeout:
          type: string
          description: "56"
      example:
        ClientAuthMethod: ClientAuthMethod
        Description: Description
        Message: Message
        RootDomain: RootDomain
        ServerAuthMethod: ServerAuthMethod
        Timeout: Timeout
        AuthServer: AuthServer
        AuthForm: AuthForm
        Name: Name
    RuleUpdateAuthentication:
      type: object
      properties:
        AuthForm:
          type: string
          description: "4"
        AuthServer:
          type: string
          description: "3"
        ClientAuthMethod:
          type: string
          description: forms
        Description:
          type: string
          description: test
        Message:
          type: string
          description: test
        Name:
          type: string
          description: testRule1
        ServerAuthMethod:
          type: string
          description: ntlm
        Timeout:
          type: string
          description: "56"
        id:
          type: string
          description: "1"
        RootDomain:
          type: string
          description: ""
      example:
        ClientAuthMethod: ClientAuthMethod
        Description: Description
        Message: Message
        ServerAuthMethod: ServerAuthMethod
        Timeout: Timeout
        RootDomain: RootDomain
        AuthServer: AuthServer
        id: id
        AuthForm: AuthForm
        Name: Name
    RuleDeleteAuthentication:
      type: object
      properties:
        id:
          type: string
          description: "1"
      example:
        id: id
    UploadAuthentication:
      type: object
      properties:
        name:
          type: string
          description: UploadFormName
        value:
          type: string
          description: ABC
    Config_CacheOtherDomainCombo:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        CacheOtherDomainCombo:
          $ref: '#/components/schemas/Config_Cache_CacheOtherDomainCombo'
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        CacheOtherDomainCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
    Config_Cache:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        CacheIncExcCombo:
          $ref: '#/components/schemas/Config_Cache_CacheIncExcCombo'
        CacheRuleHelpTypeCombo:
          $ref: '#/components/schemas/Config_Cache_CacheRuleHelpTypeCombo'
        CCHMaxCache:
          type: string
          description: "50"
        CCHMinCache:
          type: string
          description: "30"
        CCHHeuristicExpiry:
          type: string
          description: 11/00:00
        CCHCachableResponses:
          type: string
          description: 200 203 301 304 410
        CCHTrimCache:
          type: string
          description: 6/01:00
        CCHCache304Stream:
          type: string
          description: "25"
        CacheOtherDomainCombo:
          $ref: '#/components/schemas/Config_Cache_CacheOtherDomainCombo'
        CacheDomainGrid:
          $ref: '#/components/schemas/Config_Cache_CacheDomainGrid'
        CacheRulesGrid:
          $ref: '#/components/schemas/Config_Cache_CacheRulesGrid'
        CacheDomainCombo:
          $ref: '#/components/schemas/Config_Cache_CacheDomainCombo'
      example:
        CacheDomainGrid:
          dataset:
            row:
            - name: name
              rule: rule
              id: id
            - name: name
              rule: rule
              id: id
        StatusText: StatusText
        CCHHeuristicExpiry: CCHHeuristicExpiry
        CacheIncExcCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        CacheRuleHelpTypeCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        CCHMaxCache: CCHMaxCache
        CCHCache304Stream: CCHCache304Stream
        CCHCachableResponses: CCHCachableResponses
        CacheOtherDomainCombo:
          options:
            option:
            - option
            - option
        CacheDomainCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        success: success
        CCHMinCache: CCHMinCache
        CacheRulesGrid:
          dataset:
            row:
            - add: add
              cacheRuleText: cacheRuleText
              name: name
              description: description
              id: id
            - add: add
              cacheRuleText: cacheRuleText
              name: name
              description: description
              id: id
        StatusImage: StatusImage
        CCHTrimCache: CCHTrimCache
    CacheInc_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: include
      example:
        id: id
        value: value
    CacheRuleHelp_opt:
      type: object
      properties:
        id:
          type: string
          description: "[url]"
        value:
          type: string
          description: directory
      example:
        id: id
        value: value
    CacheDomain_opt:
      type: object
      properties:
        id:
          type: string
          description: --Not Cached
        value:
          type: string
          description: --Not Cached
      example:
        id: id
        value: value
    CacheDomain_row:
      type: object
      properties:
        id:
          type: string
          description: "0"
        name:
          type: string
          description: Change
        rule:
          type: string
          description: New Rule
      example:
        name: name
        rule: rule
        id: id
    CacheRules_row:
      type: object
      properties:
        id:
          type: string
          description: "0"
        name:
          type: string
          description: New Rule
        description:
          type: string
          description: New Rule Description
        add:
          type: string
          description: "+"
        cacheRuleText:
          type: string
          description: ""
      example:
        add: add
        cacheRuleText: cacheRuleText
        name: name
        description: description
        id: id
    UpdateCache:
      type: array
      items:
        $ref: '#/components/schemas/UpdateCache_prop'
    Cache_AddDomain:
      type: object
      properties:
        name:
          type: string
          description: abc
      example:
        name: name
    UpdateCache_prop:
      type: object
      properties:
        CCHCachableResponses:
          type: string
          description: 200 203 301 304 410
        CCHCache304Stream:
          type: string
          description: "25"
        CCHHeuristicExpiry:
          type: string
          description: 11/00|00
        CCHMaxCache:
          type: string
          description: "50"
        CCHMinCache:
          type: string
          description: "30"
        CCHTrimCache:
          type: string
          description: 6/01|00
        vButtonFlag:
          type: string
          description: "3"
    RemoveCache:
      type: object
      properties:
        id:
          type: string
          description: "1"
      example:
        id: id
    UpdateApplyCache:
      type: array
      items:
        $ref: '#/components/schemas/UpdateApplyCache_prop'
    UpdateApplyCache_prop:
      type: object
      properties:
        id:
          type: string
          description: "0"
        name:
          type: string
          description: Change1
        rule:
          type: string
          description: --Not Cached
    RemoveCacheRule:
      type: object
      properties:
        id:
          type: string
          description: "1"
      example:
        id: id
    UpdateCacheRule:
      type: array
      items:
        $ref: '#/components/schemas/UpdateRuleCache_prop'
    UpdateRuleCache_prop:
      type: object
      properties:
        id:
          type: string
          description: "0"
        name:
          type: string
          description: New Rule
        rule:
          type: string
          description: New Rule Description
        add:
          type: string
          description: "+"
        cacheRuleText:
          type: string
          description: ' include /M*'
    Cache_AddNew:
      type: array
      items:
        $ref: '#/components/schemas/CacheAdd_row'
    CacheAdd_row:
      type: object
      properties:
        vButtonFlag:
          type: string
          description: "1"
    Setup_Cluster:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        clusterState:
          type: string
          description: "1"
        Failover:
          type: string
          description: "10000"
        Members:
          $ref: '#/components/schemas/Setup_Cluster_Members'
        UnPartenered:
          $ref: '#/components/schemas/Setup_Cluster_UnPartenered'
      example:
        Failover: Failover
        UnPartenered:
          dataset: dataset
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        clusterState: clusterState
        Members:
          dataset:
          - clustermember: clustermember
            channelStatusReason: channelStatusReason
            id: id
            status: status
          - clustermember: clustermember
            channelStatusReason: channelStatusReason
            id: id
            status: status
    ClusMembers_row:
      type: object
      properties:
        id:
          type: string
          description: "1"
        status:
          type: string
          description: images/jnpsStateOnlineIP.gif
        channelStatusReason:
          type: string
          description: Online
        clustermember:
          type: string
          description: 192.168.1.188 ALB-X
      example:
        clustermember: clustermember
        channelStatusReason: channelStatusReason
        id: id
        status: status
    UpdateCluster:
      type: object
      properties:
        ClusterState:
          type: string
          description: "2"
      example:
        ClusterState: ClusterState
    FailoverCluster:
      type: object
      properties:
        FailOvertimer:
          type: string
          description: "10000"
      example:
        FailOvertimer: FailOvertimer
    MoveupCluster:
      type: object
      properties:
        ipAddr:
          type: string
          description: 192.168.1.152
      example:
        ipAddr: ipAddr
    Configuration_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: "true"
        StatusText:
          type: string
          description: Error text.
    Configuration_Response:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: Configuration uploaded successfully.
        SmartFiles:
          $ref: '#/components/schemas/Configuration_Response_SmartFiles'
      example:
        StatusText: StatusText
        success: success
        SmartFiles:
          Files:
          - Order_Id: Order_Id
            DockerImageName: DockerImageName
            Description: Description
            File_Name: File_Name
            Product_Id: Product_Id
            Certified: Certified
            Message_Digest: Message_Digest
            Vendor: Vendor
            ReleaseDate: ReleaseDate
            Name: Name
            Type: Type
            Version: Version
            Machine_Id: Machine_Id
            Icon: Icon
          - Order_Id: Order_Id
            DockerImageName: DockerImageName
            Description: Description
            File_Name: File_Name
            Product_Id: Product_Id
            Certified: Certified
            Message_Digest: Message_Digest
            Vendor: Vendor
            ReleaseDate: ReleaseDate
            Name: Name
            Type: Type
            Version: Version
            Machine_Id: Machine_Id
            Icon: Icon
        StatusImage: StatusImage
    Configuration_Response_opt:
      type: object
      properties:
        File_Name:
          type: string
          description: ""
        Version:
          type: string
          description: ""
        Message_Digest:
          type: string
          description: ""
        Machine_Id:
          type: string
          description: ""
        Product_Id:
          type: string
          description: ""
        Order_Id:
          type: string
          description: ""
        Icon:
          type: string
          description: ""
        Description:
          type: string
          description: ""
        Name:
          type: string
          description: ""
        Type:
          type: string
          description: ""
        Certified:
          type: string
          description: ""
        Vendor:
          type: string
          description: ""
        ReleaseDate:
          type: string
          description: ""
        DockerImageName:
          type: string
          description: ""
      example:
        Order_Id: Order_Id
        DockerImageName: DockerImageName
        Description: Description
        File_Name: File_Name
        Product_Id: Product_Id
        Certified: Certified
        Message_Digest: Message_Digest
        Vendor: Vendor
        ReleaseDate: ReleaseDate
        Name: Name
        Type: Type
        Version: Version
        Machine_Id: Machine_Id
        Icon: Icon
    GetDashboard:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        ConfiguredWidgetsComboStore:
          $ref: '#/components/schemas/GetDashboard_ConfiguredWidgetsComboStore'
        isEdited:
          type: string
          description: no_data
        data:
          type: array
          items:
            $ref: '#/components/schemas/Dashdata_opt'
      example:
        data:
        - Widget_Name: Widget_Name
          SectionName: SectionName
          PartID: PartID
        - Widget_Name: Widget_Name
          SectionName: SectionName
          PartID: PartID
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        ConfiguredWidgetsComboStore:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        isEdited: isEdited
    ConfWid_opt:
      type: object
      properties:
        id:
          type: string
          description: Event-1
        value:
          type: string
          description: event
      example:
        id: id
        value: value
    Dashdata_opt:
      type: object
      properties:
        PartID:
          type: string
          description: Event4
        SectionName:
          type: string
          description: Event
        Widget_Name:
          type: string
          description: event
      example:
        Widget_Name: Widget_Name
        SectionName: SectionName
        PartID: PartID
    DashSystemWidget:
      type: object
      properties:
        Section_Name:
          type: string
          description: System-sys
      example:
        Section_Name: Section_Name
    DashSystemWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: System4
        System_Type:
          type: string
          description: "true,false,true"
      example:
        System_Type: System_Type
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        PartID: PartID
    DashEventWidget:
      type: object
      properties:
        Section_Name:
          type: string
          description: Event-event
      example:
        Section_Name: Section_Name
    DashEventWidget2:
      type: object
      properties:
        Section_Name:
          type: string
          description: Event-event
        CPU:
          type: string
          description: Cpu
        Disk:
          type: string
          description: Event-Disk
        GraphMemory:
          type: string
          description: GraphMemory
        PageTitle:
          type: string
          description: PageTitle
        Headlines:
          $ref: '#/components/schemas/DashEventWidget2_Headlines'
      example:
        success: "true"
        StatusImage: "true"
        CPU: 17.0%
        Disk: 25%
        GraphMemory: 4.6%
        PageTitle: ALB-Auto-Test
        Headlines:
          dataset:
            row:
            - id: "0"
              nature: OK
              colour: \#007000
              date: 11:26 25 Feb 2022
              message: 192.168.3.245:104 Real server www.dicomserver.co.uk:104 contacted
                - DICOM=OK
    DashEventWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: System4
        DashboardEvent_Filter:
          type: string
          description: ok
      example:
        DashboardEvent_Filter: DashboardEvent_Filter
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        PartID: PartID
    DashIPStatusWidget:
      type: object
      properties:
        Section_Name:
          type: string
          description: IPStatus-ipstatus
      example:
        Section_Name: Section_Name
    DashIPStatusWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: IPStatus4
        IPStatus_Layout:
          type: string
          description: "33,30,107,140,45,67,63,30,140,80,51,100,57,100,46,100,49"
        IPStatus_IP:
          type: string
          description: ""
      example:
        StatusText: StatusText
        success: success
        IPStatus_Layout: IPStatus_Layout
        StatusImage: StatusImage
        IPStatus_IP: IPStatus_IP
        PartID: PartID
    DashIPServiceWidget:
      type: object
      properties:
        Section_Name:
          type: string
          description: IPService-ip4
      example:
        Section_Name: Section_Name
    DashIPServiceWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: IPService4
        IPService_Type:
          type: string
          description: VS
        IPService_VSRS:
          type: string
          description: 192.168.1.200:80
        IPService_Period:
          type: string
          description: day
        IPService_Columns:
          type: string
          description: "Average Bytes in,Average Bytes out,Average Bytes cached"
      example:
        IPService_Columns: IPService_Columns
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        IPService_Type: IPService_Type
        IPService_VSRS: IPService_VSRS
        IPService_Period: IPService_Period
        PartID: PartID
    DashInterfaceWidget:
      type: object
      properties:
        Section_Name:
          type: string
          description: Interface-inter
      example:
        Section_Name: Section_Name
    DashInterfaceWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: Interface4
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        PartID: PartID
    DashRemoveWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    DefaultWidget:
      type: object
      properties:
        Test:
          type: string
          description: ""
      example:
        Test: Test
    DefaultWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: Your changes have been applied
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    DefaultSystemWidget:
      type: object
      properties:
        Section_Name:
          type: string
          description: System-System Utilisation %
      example:
        Section_Name: Section_Name
    DefaultSystemWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: System4
        System_Type:
          type: string
          description: "true,false,true"
      example:
        System_Type: System_Type
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        PartID: PartID
    DefaultEventWidget:
      type: object
      properties:
        Section_Name:
          type: string
          description: Event-All Events
      example:
        Section_Name: Section_Name
    DefaultEventWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: Event4
        DashboardEvent_Filter:
          type: string
          description: ""
      example:
        DashboardEvent_Filter: DashboardEvent_Filter
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        PartID: PartID
    DefaultIPStatusWidget:
      type: object
      properties:
        Section_Name:
          type: string
          description: IPStatus-Services Status
      example:
        Section_Name: Section_Name
    DefaultIPStatusWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: IPStatus4
        IPStatus_Layout:
          type: string
          description: "33,30,107,140,45,67,63,30,140,80,51,100,57,100,46,100,49"
        IPStatus_IP:
          type: string
          description: ""
      example:
        StatusText: StatusText
        success: success
        IPStatus_Layout: IPStatus_Layout
        StatusImage: StatusImage
        IPStatus_IP: IPStatus_IP
        PartID: PartID
    DefaultIPServiceWidget:
      type: object
      properties:
        Section_Name:
          type: string
          description: IPService-Bytes IN per min
      example:
        Section_Name: Section_Name
    DefaultIPServiceWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: IPService4
        IPService_Type:
          type: string
          description: System
        IPService_VSRS:
          type: string
          description: ""
        IPService_Period:
          type: string
          description: minute
        IPService_Columns:
          type: string
          description: Average Bytes in
      example:
        IPService_Columns: IPService_Columns
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        IPService_Type: IPService_Type
        IPService_VSRS: IPService_VSRS
        IPService_Period: IPService_Period
        PartID: PartID
    Setup_SetTime:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        NTPTimeZoneCombo:
          $ref: '#/components/schemas/Setup_SetTime_NTPTimeZoneCombo'
        NTPTypeCombo:
          $ref: '#/components/schemas/Setup_SetTime_NTPTypeCombo'
        Enabled:
          type: string
          description: "1"
        NtpTimeZone:
          type: string
          description: Asia/Calcutta
        NTPType:
          type: string
          description: "0"
        DateTime:
          type: string
          description: 08/11/2014 07:53:11
        NtpTimeServer:
          type: string
          description: www.server.com
        NtpTimeUpdate:
          type: string
          description: 05:56
        NtpPeriodUpdate:
          type: string
          description: "24"
      example:
        NTPTypeCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        NtpTimeZone: NtpTimeZone
        NtpPeriodUpdate: NtpPeriodUpdate
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        NTPType: NTPType
        Enabled: Enabled
        NtpTimeServer: NtpTimeServer
        NTPTimeZoneCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        DateTime: DateTime
        NtpTimeUpdate: NtpTimeUpdate
    NTPType_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: Public SNTP v4
      example:
        id: id
        value: value
    NTPTimeZone_opt:
      type: object
      properties:
        id:
          type: string
          description: Africa/Abidjan
        value:
          type: string
          description: Africa/Abidjan
      example:
        id: id
        value: value
    Setup_UpdateTime:
      type: object
      properties:
        TimeOfDay:
          type: string
          description: 08/11/2014 01|30|00
        NtpTimeZone:
          type: string
          description: Asia/Calcutta
      example:
        TimeOfDay: TimeOfDay
        NtpTimeZone: NtpTimeZone
    Setup_UpdateServer:
      type: object
      properties:
        Timeserver:
          type: string
          description: www.server.com
        Updated:
          type: string
          description: 05|56
        Updateperiod:
          type: string
          description: "24"
        NTPType:
          type: string
          description: Public SNTP v4
        Enabled:
          type: string
          description: "0"
      example:
        Timeserver: Timeserver
        Updateperiod: Updateperiod
        Updated: Updated
        NTPType: NTPType
        Enabled: Enabled
    Emailevents_All:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        SecurityCombo:
          $ref: '#/components/schemas/Emailevents_All_SecurityCombo'
        CEERemoteEmailAddress:
          type: string
          description: a.x@a.com
        CEELocalEmailAddress:
          type: string
          description: a.b@x.com
        CEEMailServer:
          type: string
          description: mail.x.com
        CEEPort:
          type: string
          description: "25"
        CEETimeout:
          type: string
          description: "1"
        CEEAuthorisationRequired:
          type: string
          description: "1"
        CEESecurity:
          type: string
          description: "0"
        CEEMailServerLogon:
          type: string
          description: a.x@x.co
        CEEEvIpServiceNoticeEnabled:
          type: string
          description: "1"
        CEEEvIpServiceNoticeText:
          type: string
          description: "1"
        CEEEvIpServiceAlertTextEnabled:
          type: string
          description: "1"
        CEEEvIpServiceAlertText:
          type: string
          description: "10"
        CEEEvChannelNoticeEnabled:
          type: string
          description: "0"
        CEEEvChannelNoticeText:
          type: string
          description: "2"
        CEEEvChannelAlertEnabled:
          type: string
          description: "1"
        CEEEvChannelAlertText:
          type: string
          description: "11"
        CEEEvContentServerNoticeEnabled:
          type: string
          description: "1"
        CEEEvContentServerNoticeText:
          type: string
          description: "3"
        CEEEvContentServer AlertEnabled:
          type: string
          description: "1"
        CEEEvContentServerAlertText:
          type: string
          description: "12"
        CEEEvFlightPathEnabled:
          type: string
          description: "0"
        CEEEvFlightPathText:
          type: string
          description: "4"
        CEEGroupEnabled:
          type: string
          description: "1"
        CEEGroupText:
          type: string
          description: "5"
        CEEGroupTime:
          type: string
          description: "6"
        CEEEvDiskSpaceEnabled:
          type: string
          description: "1"
        CEEEvDiskSpaceText:
          type: string
          description: "8"
        CEEEvLicenceRenevalText:
          type: string
          description: "7"
        CEEEvLicenceRenevalEnabled:
          type: string
          description: "1"
        CEEEvDiskSpacePercent:
          type: string
          description: "9"
        CEEEvTestTempFile:
          type: string
          description: ""
        CEEEvTestProcessID:
          type: string
          description: ""
        CEEEvTestEndTime:
          type: string
          description: ""
        CEEEvTestStatus:
          type: string
          description: ""
      example:
        CEEEvTestEndTime: CEEEvTestEndTime
        StatusText: StatusText
        CEEEvContentServer AlertEnabled: CEEEvContentServer AlertEnabled
        CEELocalEmailAddress: CEELocalEmailAddress
        CEESecurity: CEESecurity
        CEEEvChannelNoticeText: CEEEvChannelNoticeText
        CEEEvLicenceRenevalEnabled: CEEEvLicenceRenevalEnabled
        CEEEvDiskSpaceEnabled: CEEEvDiskSpaceEnabled
        CEEAuthorisationRequired: CEEAuthorisationRequired
        CEEEvIpServiceNoticeText: CEEEvIpServiceNoticeText
        CEEGroupEnabled: CEEGroupEnabled
        CEEEvChannelAlertText: CEEEvChannelAlertText
        CEEGroupText: CEEGroupText
        SecurityCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        CEERemoteEmailAddress: CEERemoteEmailAddress
        CEEEvContentServerAlertText: CEEEvContentServerAlertText
        CEEMailServerLogon: CEEMailServerLogon
        CEEEvLicenceRenevalText: CEEEvLicenceRenevalText
        CEEMailServer: CEEMailServer
        CEEEvChannelAlertEnabled: CEEEvChannelAlertEnabled
        CEEEvContentServerNoticeEnabled: CEEEvContentServerNoticeEnabled
        CEEEvTestTempFile: CEEEvTestTempFile
        CEEEvIpServiceAlertText: CEEEvIpServiceAlertText
        CEEEvTestProcessID: CEEEvTestProcessID
        CEEEvContentServerNoticeText: CEEEvContentServerNoticeText
        CEEEvDiskSpacePercent: CEEEvDiskSpacePercent
        CEEEvFlightPathText: CEEEvFlightPathText
        CEEEvTestStatus: CEEEvTestStatus
        CEEGroupTime: CEEGroupTime
        CEEEvChannelNoticeEnabled: CEEEvChannelNoticeEnabled
        CEEEvDiskSpaceText: CEEEvDiskSpaceText
        success: success
        CEEPort: CEEPort
        CEEEvIpServiceAlertTextEnabled: CEEEvIpServiceAlertTextEnabled
        StatusImage: StatusImage
        CEEEvFlightPathEnabled: CEEEvFlightPathEnabled
        CEETimeout: CEETimeout
        CEEEvIpServiceNoticeEnabled: CEEEvIpServiceNoticeEnabled
    Update_emailEvent:
      type: object
      properties:
        CEEAuthorisationRequired:
          type: string
          description: ""
        CEEEMailServerPassword:
          type: string
          description: ""
        CEELocalEmailAddress:
          type: string
          description: ""
        CEEMailServer:
          type: string
          description: ""
        CEEMailServerLogon:
          type: string
          description: ""
        CEEPort:
          type: string
          description: ""
        CEERemoteEmailAddress:
          type: string
          description: ""
        CEESecurity:
          type: string
          description: ""
        CEETimeout:
          type: string
          description: ""
        Test:
          type: string
          description: ""
      example:
        CEEMailServerLogon: CEEMailServerLogon
        CEEMailServer: CEEMailServer
        Test: Test
        CEELocalEmailAddress: CEELocalEmailAddress
        CEEPort: CEEPort
        CEESecurity: CEESecurity
        CEEEMailServerPassword: CEEEMailServerPassword
        CEERemoteEmailAddress: CEERemoteEmailAddress
        CEEAuthorisationRequired: CEEAuthorisationRequired
        CEETimeout: CEETimeout
    Notification_emailEvent:
      type: object
      properties:
        CEEEvChannelAlertEnabled:
          type: string
          description: ""
        CEEEvChannelAlertText:
          type: string
          description: ""
        CEEEvChannelNoticeEnabled:
          type: string
          description: ""
        CEEEvChannelNoticeText:
          type: string
          description: ""
        CEEEvContentServerNoticeEnabled:
          type: string
          description: ""
        CEEEvContentServerNoticeText:
          type: string
          description: ""
        CEEEvContentServerAlertEnabled:
          type: string
          description: ""
        CEEEvContentServerAlertText:
          type: string
          description: ""
        CEEEvFlightPathEnabled:
          type: string
          description: ""
        CEEEvFlightPathText:
          type: string
          description: ""
        CEEEvIpServiceAlertTextEnabled:
          type: string
          description: ""
        CEEEvIpServiceAlertText:
          type: string
          description: ""
        CEEEvIpServiceNoticeEnabled:
          type: string
          description: ""
        CEEEvIpServiceNoticeText:
          type: string
          description: ""
        CEEGroupEnabled:
          type: string
          description: ""
        CEEGroupText:
          type: string
          description: ""
        CEEGroupTime:
          type: string
          description: ""
      example:
        CEEEvContentServerAlertText: CEEEvContentServerAlertText
        CEEEvChannelNoticeText: CEEEvChannelNoticeText
        CEEEvChannelAlertEnabled: CEEEvChannelAlertEnabled
        CEEEvContentServerNoticeEnabled: CEEEvContentServerNoticeEnabled
        CEEEvIpServiceAlertText: CEEEvIpServiceAlertText
        CEEEvContentServerNoticeText: CEEEvContentServerNoticeText
        CEEEvIpServiceNoticeText: CEEEvIpServiceNoticeText
        CEEEvContentServerAlertEnabled: CEEEvContentServerAlertEnabled
        CEEEvFlightPathText: CEEEvFlightPathText
        CEEGroupEnabled: CEEGroupEnabled
        CEEEvChannelAlertText: CEEEvChannelAlertText
        CEEGroupText: CEEGroupText
        CEEGroupTime: CEEGroupTime
        CEEEvChannelNoticeEnabled: CEEEvChannelNoticeEnabled
        CEEEvIpServiceAlertTextEnabled: CEEEvIpServiceAlertTextEnabled
        CEEEvFlightPathEnabled: CEEEvFlightPathEnabled
        CEEEvIpServiceNoticeEnabled: CEEEvIpServiceNoticeEnabled
    Warnings_emailEvent:
      type: object
      properties:
        CEEEvDiskSpaceEnabled:
          type: string
          description: ""
        CEEEvDiskSpaceText:
          type: string
          description: ""
        CEEEvLicenceRenevalEnabled:
          type: string
          description: ""
        CEEEvLicenceRenevalText:
          type: string
          description: ""
        CEEEvDiskSpacePercent:
          type: string
          description: ""
      example:
        CEEEvLicenceRenevalText: CEEEvLicenceRenevalText
        CEEEvDiskSpaceText: CEEEvDiskSpaceText
        CEEEvLicenceRenevalEnabled: CEEEvLicenceRenevalEnabled
        CEEEvDiskSpaceEnabled: CEEEvDiskSpaceEnabled
        CEEEvDiskSpacePercent: CEEEvDiskSpacePercent
    SecurityCombo_row:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: none
      example:
        id: id
        value: value
    flightPath_RespData:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        dataset:
          $ref: '#/components/schemas/flightPath_RespData_dataset'
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        dataset:
          row:
          - fId: fId
            flightPathInUse: flightPathInUse
            flightPathDesc: flightPathDesc
            DiagnosticTracing: DiagnosticTracing
            values:
              valuesId:
              - vId: vId
                variable: variable
                source: source
                detail: detail
                valValue: valValue
              - vId: vId
                variable: variable
                source: source
                detail: detail
                valValue: valValue
            flightPathName: flightPathName
            conditions:
              conditionId:
              - condition: condition
                match: match
                sense: sense
                condValue: condValue
                check: check
                cId: cId
              - condition: condition
                match: match
                sense: sense
                condValue: condValue
                check: check
                cId: cId
            actions:
              actionId:
              - data: data
                action: action
                aId: aId
                target: target
              - data: data
                action: action
                aId: aId
                target: target
          - fId: fId
            flightPathInUse: flightPathInUse
            flightPathDesc: flightPathDesc
            DiagnosticTracing: DiagnosticTracing
            values:
              valuesId:
              - vId: vId
                variable: variable
                source: source
                detail: detail
                valValue: valValue
              - vId: vId
                variable: variable
                source: source
                detail: detail
                valValue: valValue
            flightPathName: flightPathName
            conditions:
              conditionId:
              - condition: condition
                match: match
                sense: sense
                condValue: condValue
                check: check
                cId: cId
              - condition: condition
                match: match
                sense: sense
                condValue: condValue
                check: check
                cId: cId
            actions:
              actionId:
              - data: data
                action: action
                aId: aId
                target: target
              - data: data
                action: action
                aId: aId
                target: target
    flightPath_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        FilterKeyword:
          type: string
          description: ""
        dataset:
          $ref: '#/components/schemas/flightPath_RespData_dataset'
      example:
        StatusText: StatusText
        success: success
        FilterKeyword: FilterKeyword
        StatusImage: StatusImage
        dataset:
          row:
          - fId: fId
            flightPathInUse: flightPathInUse
            flightPathDesc: flightPathDesc
            DiagnosticTracing: DiagnosticTracing
            values:
              valuesId:
              - vId: vId
                variable: variable
                source: source
                detail: detail
                valValue: valValue
              - vId: vId
                variable: variable
                source: source
                detail: detail
                valValue: valValue
            flightPathName: flightPathName
            conditions:
              conditionId:
              - condition: condition
                match: match
                sense: sense
                condValue: condValue
                check: check
                cId: cId
              - condition: condition
                match: match
                sense: sense
                condValue: condValue
                check: check
                cId: cId
            actions:
              actionId:
              - data: data
                action: action
                aId: aId
                target: target
              - data: data
                action: action
                aId: aId
                target: target
          - fId: fId
            flightPathInUse: flightPathInUse
            flightPathDesc: flightPathDesc
            DiagnosticTracing: DiagnosticTracing
            values:
              valuesId:
              - vId: vId
                variable: variable
                source: source
                detail: detail
                valValue: valValue
              - vId: vId
                variable: variable
                source: source
                detail: detail
                valValue: valValue
            flightPathName: flightPathName
            conditions:
              conditionId:
              - condition: condition
                match: match
                sense: sense
                condValue: condValue
                check: check
                cId: cId
              - condition: condition
                match: match
                sense: sense
                condValue: condValue
                check: check
                cId: cId
            actions:
              actionId:
              - data: data
                action: action
                aId: aId
                target: target
              - data: data
                action: action
                aId: aId
                target: target
    flightdataset_row:
      type: object
      properties:
        fId:
          type: string
          description: "1"
        DiagnosticTracing:
          type: string
          description: "false"
        flightPathName:
          type: string
          description: HTML Extension
        flightPathDesc:
          type: string
          description: Fixes all .htm requests to .html
        flightPathInUse:
          type: string
          description: "192.168.1.34,192.168.1.250,192.168.1.250"
        conditions:
          $ref: '#/components/schemas/flightdataset_row_conditions'
        values:
          $ref: '#/components/schemas/flightdataset_row_values'
        actions:
          $ref: '#/components/schemas/flightdataset_row_actions'
      example:
        fId: fId
        flightPathInUse: flightPathInUse
        flightPathDesc: flightPathDesc
        DiagnosticTracing: DiagnosticTracing
        values:
          valuesId:
          - vId: vId
            variable: variable
            source: source
            detail: detail
            valValue: valValue
          - vId: vId
            variable: variable
            source: source
            detail: detail
            valValue: valValue
        flightPathName: flightPathName
        conditions:
          conditionId:
          - condition: condition
            match: match
            sense: sense
            condValue: condValue
            check: check
            cId: cId
          - condition: condition
            match: match
            sense: sense
            condValue: condValue
            check: check
            cId: cId
        actions:
          actionId:
          - data: data
            action: action
            aId: aId
            target: target
          - data: data
            action: action
            aId: aId
            target: target
    conditions_row:
      type: object
      properties:
        cId:
          type: string
          description: "0"
        condition:
          type: string
          description: Path
        sense:
          type: string
          description: Does
        check:
          type: string
          description: Match RegEx
        match:
          type: string
          description: ""
        condValue:
          type: string
          description: \\.htm$
      example:
        condition: condition
        match: match
        sense: sense
        condValue: condValue
        check: check
        cId: cId
    values_row:
      type: object
      properties:
        vId:
          type: string
          description: "0"
        variable:
          type: string
          description: $variable1$
        source:
          type: string
          description: Query Item
        detail:
          type: string
          description: Charge-To
        valValue:
          type: string
          description: ""
      example:
        vId: vId
        variable: variable
        source: source
        detail: detail
        valValue: valValue
    actions_row:
      type: object
      properties:
        aId:
          type: string
          description: "0"
        data:
          type: string
          description: ""
        action:
          type: string
          description: Rewrite Path
        target:
          type: string
          description: $path$l
      example:
        data: data
        action: action
        aId: aId
        target: target
    flightPath_Combo:
      type: object
      properties:
        CountryCombo:
          $ref: '#/components/schemas/flightPath_Combo_CountryCombo'
        SenseCombo:
          $ref: '#/components/schemas/flightPath_Combo_SenseCombo'
        CheckCombo:
          $ref: '#/components/schemas/flightPath_Combo_CheckCombo'
        SourceCombo:
          $ref: '#/components/schemas/flightPath_Combo_SourceCombo'
        ActionCombo:
          $ref: '#/components/schemas/flightPath_Combo_ActionCombo'
        ConValueCombo:
          $ref: '#/components/schemas/flightPath_Combo_ConValueCombo'
        MatchCombo:
          $ref: '#/components/schemas/flightPath_Combo_MatchCombo'
        conditionCombo:
          $ref: '#/components/schemas/flightPath_Combo_conditionCombo'
        languageCombo:
          $ref: '#/components/schemas/flightPath_Combo_languageCombo'
        AuthRuleCombo:
          $ref: '#/components/schemas/flightPath_Combo_AuthRuleCombo'
      example:
        SourceCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        CountryCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        AuthRuleCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        CheckCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        languageCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        ConValueCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        ActionCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        conditionCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        SenseCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        MatchCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
    AuthRuleCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: "1"
        value:
          type: string
          description: Pre-Auth-LDAPS
      example:
        id: id
        value: value
    languageCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: af
        value:
          type: string
          description: Afrikaans
      example:
        id: id
        value: value
    conditionCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: form
        value:
          type: string
          description: < form >
      example:
        id: id
        value: value
    MatchCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: OPTIONS
        value:
          type: string
          description: OPTIONS
      example:
        id: id
        value: value
    ConValueCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: Accept
        value:
          type: string
          description: Accept
      example:
        id: id
        value: value
    ActionCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: add_request_cookie
        value:
          type: string
          description: Add Request Cookie
      example:
        id: id
        value: value
    SourceCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: host
        value:
          type: string
          description: Host
      example:
        id: id
        value: value
    CheckCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: contain
        value:
          type: string
          description: Contain
      example:
        id: id
        value: value
    SenseCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: does
        value:
          type: string
          description: Does
      example:
        id: id
        value: value
    CountryCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: GB
        value:
          type: string
          description: GB Great Britain
      example:
        id: id
        value: value
    flightPath_Update:
      type: object
      properties:
        fId:
          type: string
          description: "1"
        flightPathName:
          type: string
          description: new
        flightPathDesc:
          type: string
          description: desc
    flightPath_Remove:
      type: object
      properties:
        fId:
          type: string
          description: "1"
    flightPath_AddCon:
      type: object
      properties:
        fId:
          type: string
          description: "1"
    flightPath_UpdateCon:
      type: object
      properties:
        fId:
          type: string
          description: "1"
        cId:
          type: string
          description: "1"
        condition:
          type: string
          description: Host
        match:
          type: string
          description: ""
        sense:
          type: string
          description: Does
        check:
          type: string
          description: Exist
        condValue:
          type: string
          description: ""
    flightPath_RemoveCon:
      type: object
      properties:
        fId:
          type: string
          description: "1"
        cId:
          type: string
          description: "1"
    flightPath_AddEva:
      type: object
      properties:
        fId:
          type: string
          description: "1"
    flightPath_UpdateEva:
      type: object
      properties:
        fId:
          type: string
          description: "1"
        vId:
          type: string
          description: "0"
        variable:
          type: string
          description: $variable1$
        source:
          type: string
          description: Response Header
        detail:
          type: string
          description: ""
        valValue:
          type: string
          description: ""
    flightPath_RemoveEva:
      type: object
      properties:
        fId:
          type: string
          description: "1"
        cId:
          type: string
          description: "1"
    flightPath_AddAct:
      type: object
      properties:
        fId:
          type: string
          description: "1"
    flightPath_UpdateAct:
      type: object
      properties:
        fId:
          type: string
          description: "1"
        aId:
          type: string
          description: "0"
        action:
          type: string
          description: rewrite_path
        target:
          type: string
          description: Pragma
        data:
          type: string
          description: ""
    flightPath_RemoveAct:
      type: object
      properties:
        fId:
          type: string
          description: "1"
        aId:
          type: string
          description: "1"
    GlobSetting_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        CryptoLib:
          type: string
          description: openssl
        HostCacheTimer:
          type: string
          description: "1"
        GlobalSettingListString:
          $ref: '#/components/schemas/GlobSetting_Data_GlobalSettingListString'
        LdapTimeout:
          type: string
          description: "10"
        DrainClearPersistence:
          type: string
          description: "0"
      example:
        CryptoLib: CryptoLib
        StatusText: StatusText
        success: success
        HostCacheTimer: HostCacheTimer
        StatusImage: StatusImage
        GlobalSettingListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        LdapTimeout: LdapTimeout
        DrainClearPersistence: DrainClearPersistence
    GlobalSetting_opt:
      type: object
      properties:
        id:
          type: string
          description: openssl
        value:
          type: string
          description: Open SSL
      example:
        id: id
        value: value
    Glob_UpdateCrypto:
      type: object
      properties:
        CryptoLib:
          type: string
          description: yassl
      example:
        CryptoLib: CryptoLib
    Glob_UpdateHChacheTimer:
      type: object
      properties:
        HostCacheTimer:
          type: string
          description: "1"
      example:
        HostCacheTimer: HostCacheTimer
    Glob_UpdateDrain:
      type: object
      properties:
        DrainClearPersistence:
          type: string
          description: "1"
      example:
        DrainClearPersistence: DrainClearPersistence
    Glob_UpdateAuthenticationSetting:
      type: object
      properties:
        LdapTimeout:
          type: string
          description: "10"
      example:
        LdapTimeout: "10"
    History_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        dataset:
          $ref: '#/components/schemas/History_Data_dataset'
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        dataset:
          CRRD_LastRed: CRRD_LastRed
          CRRD_LastMsg: CRRD_LastMsg
          CRRD_RestoreName:
            options:
              option:
              - id: id
                value: value
              - id: id
                value: value
          CRRD_HasCurrent: CRRD_HasCurrent
          CRRD_Last: CRRD_Last
          CRRD_Interval: CRRD_Interval
          CRRD_Enabled: CRRD_Enabled
          CRRD_BackupName: CRRD_BackupName
          CRRD_DeleteName:
            options:
              option:
              - id: id
                value: value
              - id: id
                value: value
    RRDUpdate:
      type: object
      properties:
        CRRD_Enabled:
          type: string
          description: "ON"
        CRRD_Interval:
          type: string
          description: "1"
      example:
        CRRD_Interval: CRRD_Interval
        CRRD_Enabled: CRRD_Enabled
    RRDSave:
      type: object
      properties:
        CRRD_BackupName:
          type: string
          description: test
      example:
        CRRD_BackupName: CRRD_BackupName
    RRDDelete:
      type: object
      properties:
        CRRD_DeleteName:
          type: string
          description: test
      example:
        CRRD_DeleteName: CRRD_DeleteName
    RRDRestore:
      type: object
      properties:
        CRRD_RestoreName:
          type: string
          description: test
      example:
        CRRD_RestoreName: CRRD_RestoreName
    CRRD_DeleteName_opt:
      type: object
      properties:
        id:
          type: string
          description: Current
        value:
          type: string
          description: Current
      example:
        id: id
        value: value
    CRRD_RestoreName_opt:
      type: object
      properties:
        id:
          type: string
          description: ""
        value:
          type: string
          description: ""
      example:
        id: id
        value: value
    RemoveIP:
      type: object
      properties:
        editedInterface:
          type: string
          description: "2"
        editedChannel:
          type: string
          description: "0"
      example:
        editedInterface: editedInterface
        editedChannel: editedChannel
    CopyIPAddress:
      type: object
      properties:
        editedInterface:
          type: string
          description: "0"
        editedChannel:
          type: string
          description: "0"
        CopyVIP:
          type: string
          description: "0"
      example:
        editedInterface: editedInterface
        editedChannel: editedChannel
        CopyVIP: CopyVIP
    CopyIP:
      type: object
      properties:
        editedInterface:
          type: string
          description: "0"
        editedChannel:
          type: string
          description: "0"
        CopyVIP:
          type: string
          description: "1"
        interfaceImagePath:
          type: string
          description: ""
        ipAddr:
          type: string
          description: ""
        localPortEnabledChecked:
          type: string
          description: ""
        port:
          type: string
          description: ""
        primaryChecked:
          type: string
          description: ""
        serviceName:
          type: string
          description: ""
        serviceType:
          type: string
          description: ""
        subnetMask:
          type: string
          description: ""
      example:
        interfaceImagePath: interfaceImagePath
        serviceType: serviceType
        CopyVIP: CopyVIP
        localPortEnabledChecked: localPortEnabledChecked
        serviceName: serviceName
        subnetMask: subnetMask
        ipAddr: ipAddr
        editedInterface: editedInterface
        port: port
        primaryChecked: primaryChecked
        editedChannel: editedChannel
    AddServer:
      type: object
      properties:
        editedInterface:
          type: string
          description: "0"
        editedChannel:
          type: string
          description: "1"
      example:
        editedInterface: editedInterface
        editedChannel: editedChannel
    UpdateServer:
      type: object
      properties:
        editedInterface:
          type: string
          description: "0"
        editedChannel:
          type: string
          description: "1"
        cId:
          type: string
          description: "0"
        CSActivity:
          type: string
          description: "1"
        CSIPAddr:
          type: string
          description: 1.2.6.5
        CSPort:
          type: string
          description: "7989"
        WeightFactor:
          type: string
          description: "100"
        imagePath:
          type: string
          description: images/jnpsStateGrey.gif
        statusReason:
          type: string
          description: Finding status
        CSNotes:
          type: string
          description: ""
        contentServerGroupName:
          type: string
          description: Server Group
        ServerId:
          type: string
          description: Server Group
      example:
        WeightFactor: WeightFactor
        CSActivity: CSActivity
        editedInterface: editedInterface
        CSNotes: CSNotes
        statusReason: statusReason
        CSIPAddr: CSIPAddr
        imagePath: imagePath
        contentServerGroupName: contentServerGroupName
        CSPort: CSPort
        editedChannel: editedChannel
        cId: cId
        ServerId: ServerId
    RemoveServer:
      type: object
      properties:
        editedInterface:
          type: string
          description: "0"
        editedChannel:
          type: string
          description: "1"
        cId:
          type: string
          description: "0"
      example:
        editedInterface: editedInterface
        editedChannel: editedChannel
        cId: cId
    UpdateBasicTab:
      type: object
      properties:
        editedInterface:
          type: string
          description: "1"
        editedChannel:
          type: string
          description: "0"
        serverMonitoring:
          type: string
          description: Connect
        acceleration:
          type: string
          description: Compress
        loadBalancingPolicy:
          type: string
          description: LeastConnections
        sslCertificate:
          type: string
          description: No SSL
        sslClientCertificate:
          type: string
          description: No SSL
        cachingRule:
          type: string
          description: "0"
      example:
        acceleration: acceleration
        editedInterface: editedInterface
        sslCertificate: sslCertificate
        cachingRule: cachingRule
        loadBalancingPolicy: loadBalancingPolicy
        sslClientCertificate: sslClientCertificate
        editedChannel: editedChannel
        serverMonitoring: serverMonitoring
    UpdateAdvanceTab:
      type: object
      properties:
        editedInterface:
          type: string
          description: "1"
        editedChannel:
          type: string
          description: "0"
        connectivity:
          type: string
          description: managed
        ConnectionTimeout:
          type: string
          description: "600"
        monitoringInterval:
          type: string
          description: "1"
        monitoringTimeout:
          type: string
          description: "1"
        maxConn:
          type: string
          description: "20"
        InCount:
          type: string
          description: "2"
        OutCount:
          type: string
          description: "3"
        CipherName:
          type: string
          description: Defaults
        securityLog:
          type: string
          description: "on"
        sslRenegotiation:
          type: string
          description: "on"
        SNIDefaultCertificateName:
          type: string
          description: ""
        sslResumption:
          type: string
          description: ""
        offlinonfailure:
          type: string
          description: "1"
      example:
        securityLog: securityLog
        ConnectionTimeout: ConnectionTimeout
        InCount: InCount
        CipherName: CipherName
        OutCount: OutCount
        monitoringTimeout: monitoringTimeout
        sslRenegotiation: sslRenegotiation
        editedInterface: editedInterface
        SNIDefaultCertificateName: SNIDefaultCertificateName
        sslResumption: sslResumption
        connectivity: connectivity
        monitoringInterval: monitoringInterval
        maxConn: maxConn
        editedChannel: editedChannel
        offlinonfailure: offlinonfailure
    moveFlightToSelected:
      type: object
      properties:
        editedInterface:
          type: string
          description: "1"
        editedChannel:
          type: string
          description: "0"
        flightPathName:
          type: string
          description: Close Folders
        flightPathDropId:
          type: string
          description: "4"
        flightPathDropName:
          type: string
          description: HTML Extension
        position:
          type: string
          description: before
    moveFlightToAvailable:
      type: object
      properties:
        editedInterface:
          type: string
          description: "1"
        editedChannel:
          type: string
          description: "0"
        flightPathName:
          type: string
          description: Close Folders
    moveFlightDown:
      type: object
      properties:
        editedInterface:
          type: string
          description: "1"
        editedChannel:
          type: string
          description: "0"
        flightPathName:
          type: string
          description: Swap HTTP to HTTPS
    moveFlightUp:
      type: object
      properties:
        editedInterface:
          type: string
          description: "1"
        editedChannel:
          type: string
          description: "0"
        flightPathName:
          type: string
          description: Swap HTTP to HTTPS
    dragDropFlight:
      type: object
      properties:
        editedInterface:
          type: string
          description: "1"
        editedChannel:
          type: string
          description: "0"
        flightPathDragId:
          type: string
          description: "2"
        flightPathDragName:
          type: string
          description: Close Folders
        flightPathDropId:
          type: string
          description: "4"
        flightPathDropName:
          type: string
          description: HTML Extension
    IPServices:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        Name:
          type: string
          description: ALB-X Navin87
        FilterKeyword:
          type: string
          description: ""
        validateWarning:
          type: string
          description: ""
        data:
          $ref: '#/components/schemas/IPServices_data'
      example:
        data:
          dataset:
            ipService:
            - - serviceType: serviceType
                ConnectionTimeout: ConnectionTimeout
                ChannelKey: ChannelKey
                connectionPoolSize: connectionPoolSize
                InCount: InCount
                offlinonfailure: offlinonfailure
                SecurityLog: SecurityLog
                InterfaceID: InterfaceID
                CipherName: CipherName
                OutCount: OutCount
                ipAddr: ipAddr
                enableConnectionPool: enableConnectionPool
                serverMonitoring: serverMonitoring
                sslRenegotiation: sslRenegotiation
                acceleration: acceleration
                sslCertificate: sslCertificate
                SNIDefaultCertificateName: SNIDefaultCertificateName
                sslResumption: sslResumption
                connectivity: connectivity
                primaryChecked: primaryChecked
                MaskState: MaskState
                channelImagePath: channelImagePath
                interfaceStatusReason: interfaceStatusReason
                InterfaceKey: InterfaceKey
                interfaceImagePath: interfaceImagePath
                contentServer:
                  CServerId:
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                localPortEnabledChecked: localPortEnabledChecked
                channelStatusReason: channelStatusReason
                contentServerGroupName: contentServerGroupName
                flightPath:
                  flightPathId:
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                ChannelID: ChannelID
                subnetMask: subnetMask
                serviceName: serviceName
                monitoringTimeout: monitoringTimeout
                sId: sId
                port: port
                cachingRule: cachingRule
                monitoringInterval: monitoringInterval
                maxConn: maxConn
                loadBalancingPolicy: loadBalancingPolicy
                sslClientCertificate: sslClientCertificate
              - serviceType: serviceType
                ConnectionTimeout: ConnectionTimeout
                ChannelKey: ChannelKey
                connectionPoolSize: connectionPoolSize
                InCount: InCount
                SecurityLog: SecurityLog
                InterfaceID: InterfaceID
                CipherName: CipherName
                OutCount: OutCount
                ipAddr: ipAddr
                enableConnectionPool: enableConnectionPool
                serverMonitoring: serverMonitoring
                sslRenegotiation: sslRenegotiation
                acceleration: acceleration
                sslCertificate: sslCertificate
                SNIDefaultCertificateName: SNIDefaultCertificateName
                sslResumption: sslResumption
                connectivity: connectivity
                primaryChecked: primaryChecked
                MaskState: MaskState
                channelImagePath: channelImagePath
                interfaceStatusReason: interfaceStatusReason
                InterfaceKey: InterfaceKey
                interfaceImagePath: interfaceImagePath
                contentServer:
                  CServerId:
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                localPortEnabledChecked: localPortEnabledChecked
                channelStatusReason: channelStatusReason
                contentServerGroupName: contentServerGroupName
                flightPath:
                  flightPathId:
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                ChannelID: ChannelID
                subnetMask: subnetMask
                serviceName: serviceName
                monitoringTimeout: monitoringTimeout
                sId: sId
                port: port
                cachingRule: cachingRule
                monitoringInterval: monitoringInterval
                maxConn: maxConn
                loadBalancingPolicy: loadBalancingPolicy
                sslClientCertificate: sslClientCertificate
            - - serviceType: serviceType
                ConnectionTimeout: ConnectionTimeout
                ChannelKey: ChannelKey
                connectionPoolSize: connectionPoolSize
                InCount: InCount
                SecurityLog: SecurityLog
                InterfaceID: InterfaceID
                CipherName: CipherName
                OutCount: OutCount
                ipAddr: ipAddr
                enableConnectionPool: enableConnectionPool
                serverMonitoring: serverMonitoring
                sslRenegotiation: sslRenegotiation
                acceleration: acceleration
                sslCertificate: sslCertificate
                SNIDefaultCertificateName: SNIDefaultCertificateName
                sslResumption: sslResumption
                connectivity: connectivity
                primaryChecked: primaryChecked
                MaskState: MaskState
                channelImagePath: channelImagePath
                interfaceStatusReason: interfaceStatusReason
                InterfaceKey: InterfaceKey
                interfaceImagePath: interfaceImagePath
                contentServer:
                  CServerId:
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                localPortEnabledChecked: localPortEnabledChecked
                channelStatusReason: channelStatusReason
                contentServerGroupName: contentServerGroupName
                flightPath:
                  flightPathId:
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                ChannelID: ChannelID
                subnetMask: subnetMask
                serviceName: serviceName
                monitoringTimeout: monitoringTimeout
                sId: sId
                port: port
                cachingRule: cachingRule
                monitoringInterval: monitoringInterval
                maxConn: maxConn
                loadBalancingPolicy: loadBalancingPolicy
                sslClientCertificate: sslClientCertificate
              - serviceType: serviceType
                ConnectionTimeout: ConnectionTimeout
                ChannelKey: ChannelKey
                connectionPoolSize: connectionPoolSize
                InCount: InCount
                SecurityLog: SecurityLog
                InterfaceID: InterfaceID
                CipherName: CipherName
                OutCount: OutCount
                ipAddr: ipAddr
                enableConnectionPool: enableConnectionPool
                serverMonitoring: serverMonitoring
                sslRenegotiation: sslRenegotiation
                acceleration: acceleration
                sslCertificate: sslCertificate
                SNIDefaultCertificateName: SNIDefaultCertificateName
                sslResumption: sslResumption
                connectivity: connectivity
                primaryChecked: primaryChecked
                MaskState: MaskState
                channelImagePath: channelImagePath
                interfaceStatusReason: interfaceStatusReason
                InterfaceKey: InterfaceKey
                interfaceImagePath: interfaceImagePath
                contentServer:
                  CServerId:
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                localPortEnabledChecked: localPortEnabledChecked
                channelStatusReason: channelStatusReason
                contentServerGroupName: contentServerGroupName
                flightPath:
                  flightPathId:
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                ChannelID: ChannelID
                subnetMask: subnetMask
                serviceName: serviceName
                monitoringTimeout: monitoringTimeout
                sId: sId
                port: port
                cachingRule: cachingRule
                monitoringInterval: monitoringInterval
                maxConn: maxConn
                loadBalancingPolicy: loadBalancingPolicy
                sslClientCertificate: sslClientCertificate
        StatusText: StatusText
        success: success
        validateWarning: validateWarning
        FilterKeyword: FilterKeyword
        StatusImage: StatusImage
        Name: Name
    IPServicesPost:
      type: object
      properties:
        validateWarning:
          type: string
          description: ""
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        data:
          $ref: '#/components/schemas/IPServices_data'
      example:
        data:
          dataset:
            ipService:
            - - serviceType: serviceType
                ConnectionTimeout: ConnectionTimeout
                ChannelKey: ChannelKey
                connectionPoolSize: connectionPoolSize
                InCount: InCount
                SecurityLog: SecurityLog
                InterfaceID: InterfaceID
                CipherName: CipherName
                OutCount: OutCount
                offlinonfailure: offlinonfailure
                ipAddr: ipAddr
                enableConnectionPool: enableConnectionPool
                serverMonitoring: serverMonitoring
                sslRenegotiation: sslRenegotiation
                acceleration: acceleration
                sslCertificate: sslCertificate
                SNIDefaultCertificateName: SNIDefaultCertificateName
                sslResumption: sslResumption
                connectivity: connectivity
                primaryChecked: primaryChecked
                MaskState: MaskState
                channelImagePath: channelImagePath
                interfaceStatusReason: interfaceStatusReason
                InterfaceKey: InterfaceKey
                interfaceImagePath: interfaceImagePath
                contentServer:
                  CServerId:
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                localPortEnabledChecked: localPortEnabledChecked
                channelStatusReason: channelStatusReason
                contentServerGroupName: contentServerGroupName
                flightPath:
                  flightPathId:
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                ChannelID: ChannelID
                subnetMask: subnetMask
                serviceName: serviceName
                monitoringTimeout: monitoringTimeout
                sId: sId
                port: port
                cachingRule: cachingRule
                monitoringInterval: monitoringInterval
                maxConn: maxConn
                loadBalancingPolicy: loadBalancingPolicy
                sslClientCertificate: sslClientCertificate
              - serviceType: serviceType
                ConnectionTimeout: ConnectionTimeout
                ChannelKey: ChannelKey
                connectionPoolSize: connectionPoolSize
                InCount: InCount
                SecurityLog: SecurityLog
                InterfaceID: InterfaceID
                CipherName: CipherName
                OutCount: OutCount
                ipAddr: ipAddr
                enableConnectionPool: enableConnectionPool
                serverMonitoring: serverMonitoring
                sslRenegotiation: sslRenegotiation
                acceleration: acceleration
                sslCertificate: sslCertificate
                SNIDefaultCertificateName: SNIDefaultCertificateName
                sslResumption: sslResumption
                connectivity: connectivity
                primaryChecked: primaryChecked
                MaskState: MaskState
                channelImagePath: channelImagePath
                interfaceStatusReason: interfaceStatusReason
                InterfaceKey: InterfaceKey
                interfaceImagePath: interfaceImagePath
                contentServer:
                  CServerId:
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                localPortEnabledChecked: localPortEnabledChecked
                channelStatusReason: channelStatusReason
                contentServerGroupName: contentServerGroupName
                flightPath:
                  flightPathId:
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                ChannelID: ChannelID
                subnetMask: subnetMask
                serviceName: serviceName
                monitoringTimeout: monitoringTimeout
                sId: sId
                port: port
                cachingRule: cachingRule
                monitoringInterval: monitoringInterval
                maxConn: maxConn
                loadBalancingPolicy: loadBalancingPolicy
                sslClientCertificate: sslClientCertificate
            - - serviceType: serviceType
                ConnectionTimeout: ConnectionTimeout
                ChannelKey: ChannelKey
                connectionPoolSize: connectionPoolSize
                InCount: InCount
                SecurityLog: SecurityLog
                InterfaceID: InterfaceID
                CipherName: CipherName
                OutCount: OutCount
                ipAddr: ipAddr
                enableConnectionPool: enableConnectionPool
                serverMonitoring: serverMonitoring
                sslRenegotiation: sslRenegotiation
                acceleration: acceleration
                sslCertificate: sslCertificate
                SNIDefaultCertificateName: SNIDefaultCertificateName
                sslResumption: sslResumption
                connectivity: connectivity
                primaryChecked: primaryChecked
                MaskState: MaskState
                channelImagePath: channelImagePath
                interfaceStatusReason: interfaceStatusReason
                InterfaceKey: InterfaceKey
                interfaceImagePath: interfaceImagePath
                contentServer:
                  CServerId:
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                localPortEnabledChecked: localPortEnabledChecked
                channelStatusReason: channelStatusReason
                contentServerGroupName: contentServerGroupName
                flightPath:
                  flightPathId:
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                ChannelID: ChannelID
                subnetMask: subnetMask
                serviceName: serviceName
                monitoringTimeout: monitoringTimeout
                sId: sId
                port: port
                cachingRule: cachingRule
                monitoringInterval: monitoringInterval
                maxConn: maxConn
                loadBalancingPolicy: loadBalancingPolicy
                sslClientCertificate: sslClientCertificate
              - serviceType: serviceType
                ConnectionTimeout: ConnectionTimeout
                ChannelKey: ChannelKey
                connectionPoolSize: connectionPoolSize
                InCount: InCount
                SecurityLog: SecurityLog
                InterfaceID: InterfaceID
                CipherName: CipherName
                OutCount: OutCount
                ipAddr: ipAddr
                enableConnectionPool: enableConnectionPool
                serverMonitoring: serverMonitoring
                sslRenegotiation: sslRenegotiation
                acceleration: acceleration
                sslCertificate: sslCertificate
                SNIDefaultCertificateName: SNIDefaultCertificateName
                sslResumption: sslResumption
                connectivity: connectivity
                primaryChecked: primaryChecked
                MaskState: MaskState
                channelImagePath: channelImagePath
                interfaceStatusReason: interfaceStatusReason
                InterfaceKey: InterfaceKey
                interfaceImagePath: interfaceImagePath
                contentServer:
                  CServerId:
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                  - WeightFactor: WeightFactor
                    CSActivity: CSActivity
                    CSNotes: CSNotes
                    statusReason: statusReason
                    CSIPAddr: CSIPAddr
                    imagePath: imagePath
                    WeightFactorCalculated: WeightFactorCalculated
                    serverKey: serverKey
                    CSPort: CSPort
                    cId: cId
                localPortEnabledChecked: localPortEnabledChecked
                channelStatusReason: channelStatusReason
                contentServerGroupName: contentServerGroupName
                flightPath:
                  flightPathId:
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                  - fId: "0"
                    flightPathSelected: "On"
                    Name: HTML Extension
                ChannelID: ChannelID
                subnetMask: subnetMask
                serviceName: serviceName
                monitoringTimeout: monitoringTimeout
                sId: sId
                port: port
                cachingRule: cachingRule
                monitoringInterval: monitoringInterval
                maxConn: maxConn
                loadBalancingPolicy: loadBalancingPolicy
                sslClientCertificate: sslClientCertificate
        StatusText: StatusText
        validateWarning: validateWarning
        success: success
        StatusImage: StatusImage
    CServerId:
      type: object
      properties:
        serverKey:
          type: string
          description: 1.1.2
        cId:
          type: string
          description: "0"
        imagePath:
          type: string
          description: images/jnpsStateLicense.gif
        statusReason:
          type: string
          description: Licenced real servers exceeded
        CSActivity:
          type: string
          description: "1"
        CSIPAddr:
          type: string
          description: 192.168.1.21
        CSPort:
          type: string
          description: "80"
        CSNotes:
          type: string
          description: ""
        WeightFactor:
          type: string
          description: "100"
        WeightFactorCalculated:
          type: string
          description: "100"
      example:
        WeightFactor: WeightFactor
        CSActivity: CSActivity
        CSNotes: CSNotes
        statusReason: statusReason
        CSIPAddr: CSIPAddr
        imagePath: imagePath
        WeightFactorCalculated: WeightFactorCalculated
        serverKey: serverKey
        CSPort: CSPort
        cId: cId
    ipService:
      type: object
      properties:
        sId:
          type: string
          description: "1"
        InterfaceID:
          type: string
          description: "0"
        ChannelID:
          type: string
          description: "0"
        InterfaceKey:
          type: string
          description: "1"
        ChannelKey:
          type: string
          description: "1.1"
        ipAddr:
          type: string
          description: 192.168.1.251
        MaskState:
          type: string
          description: "0"
        subnetMask:
          type: string
          description: 255.255.255.0
        serviceName:
          type: string
          description: ""
        localPortEnabledChecked:
          type: string
          description: "true"
        interfaceImagePath:
          type: string
          description: images/jnpsStateLicense.gif
        interfaceStatusReason:
          type: string
          description: Licenced IP addresses exceeded
        channelImagePath:
          type: string
          description: images/jnpsStateLicense.gif
        channelStatusReason:
          type: string
          description: jetNEXUS ALB not licensed
        primaryChecked:
          type: string
          description: "false"
        serviceType:
          type: string
          description: HTTP
        maxConn:
          type: string
          description: ""
        port:
          type: string
          description: "443"
        offlinonfailure:
          type: string
          description: "1"
        contentServerGroupName:
          type: string
          description: Server Group
        enableConnectionPool:
          type: string
          description: "false"
        connectionPoolSize:
          type: string
          description: "2000"
        serverMonitoring:
          type: string
          description: "Connect,2,4"
        loadBalancingPolicy:
          type: string
          description: LeastConnections
        connectivity:
          type: string
          description: managed
        acceleration:
          type: string
          description: Compress
        sslCertificate:
          type: string
          description: No SSL
        sslClientCertificate:
          type: string
          description: No SSL
        cachingRule:
          type: string
          description: "0"
        monitoringInterval:
          type: string
          description: "1"
        monitoringTimeout:
          type: string
          description: "1"
        ConnectionTimeout:
          type: string
          description: "600"
        InCount:
          type: string
          description: "2"
        OutCount:
          type: string
          description: "3"
        CipherName:
          type: string
          description: Defaults
        SNIDefaultCertificateName:
          type: string
          description: None
        sslRenegotiation:
          type: string
          description: "on"
        sslResumption:
          type: string
          description: "on"
        SecurityLog:
          type: string
          description: "On"
        flightPath:
          $ref: '#/components/schemas/ipService_flightPath'
        contentServer:
          $ref: '#/components/schemas/ipService_contentServer'
      example:
        serviceType: serviceType
        ConnectionTimeout: ConnectionTimeout
        ChannelKey: ChannelKey
        connectionPoolSize: connectionPoolSize
        InCount: InCount
        SecurityLog: SecurityLog
        InterfaceID: InterfaceID
        CipherName: CipherName
        OutCount: OutCount
        offlinonfailure: offlinonfailure
        ipAddr: ipAddr
        enableConnectionPool: enableConnectionPool
        serverMonitoring: serverMonitoring
        sslRenegotiation: sslRenegotiation
        acceleration: acceleration
        sslCertificate: sslCertificate
        SNIDefaultCertificateName: SNIDefaultCertificateName
        sslResumption: sslResumption
        connectivity: connectivity
        primaryChecked: primaryChecked
        MaskState: MaskState
        channelImagePath: channelImagePath
        interfaceStatusReason: interfaceStatusReason
        InterfaceKey: InterfaceKey
        interfaceImagePath: interfaceImagePath
        contentServer:
          CServerId:
          - WeightFactor: WeightFactor
            CSActivity: CSActivity
            CSNotes: CSNotes
            statusReason: statusReason
            CSIPAddr: CSIPAddr
            imagePath: imagePath
            WeightFactorCalculated: WeightFactorCalculated
            serverKey: serverKey
            CSPort: CSPort
            cId: cId
          - WeightFactor: WeightFactor
            CSActivity: CSActivity
            CSNotes: CSNotes
            statusReason: statusReason
            CSIPAddr: CSIPAddr
            imagePath: imagePath
            WeightFactorCalculated: WeightFactorCalculated
            serverKey: serverKey
            CSPort: CSPort
            cId: cId
        localPortEnabledChecked: localPortEnabledChecked
        channelStatusReason: channelStatusReason
        contentServerGroupName: contentServerGroupName
        flightPath:
          flightPathId:
          - fId: "0"
            flightPathSelected: "On"
            Name: HTML Extension
          - fId: "0"
            flightPathSelected: "On"
            Name: HTML Extension
        ChannelID: ChannelID
        subnetMask: subnetMask
        serviceName: serviceName
        monitoringTimeout: monitoringTimeout
        sId: sId
        port: port
        cachingRule: cachingRule
        monitoringInterval: monitoringInterval
        maxConn: maxConn
        loadBalancingPolicy: loadBalancingPolicy
        sslClientCertificate: sslClientCertificate
    flightPathId:
      type: object
      properties:
        fId:
          type: string
          enum:
          - "0"
          - "1"
        flightPathSelected:
          type: string
          enum:
          - "On"
          - "Off"
        Name:
          type: string
          description: ""
          enum:
          - HTML Extension
          - index.html
      example:
        fId: "0"
        flightPathSelected: "On"
        Name: HTML Extension
    IPServicescombo:
      type: object
      properties:
        isNoVIP:
          type: string
          description: "no"
        ServiceTypeCombo:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        SSLCertCombo:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        CacheRuleCombo:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        MonitorPolicyCombo:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        SSLClientCertCombo:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        LBPolicyCombo:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        LBPolicyFTPCombo:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        ConnectivityCombo:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        CSActivityCombo:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        AccelerateCombo:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        FlightPathSelectionList:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        SSLCipherListString:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo'
        SNICertificateListString:
          $ref: '#/components/schemas/IPServicescombo_SNICertificateListString'
        SSLRenegotiationString:
          $ref: '#/components/schemas/IPServicescombo_SSLRenegotiationString'
        SecurityLogString:
          $ref: '#/components/schemas/IPServicescombo_SecurityLogString'
      example:
        SSLCipherListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        LBPolicyCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        FlightPathSelectionList:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        SNICertificateListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        SecurityLogString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        CacheRuleCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        CSActivityCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        SSLRenegotiationString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        MonitorPolicyCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        ConnectivityCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        SSLClientCertCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        SSLCertCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        LBPolicyFTPCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        isNoVIP: isNoVIP
        ServiceTypeCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        AccelerateCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
    TypeComboOne:
      type: object
      properties:
        id:
          type: string
          description: Layer 4
        value:
          type: string
          description: Layer 4 TCP
      example:
        id: id
        value: value
    SNICertCombo:
      type: object
      properties:
        id:
          type: string
          description: None
        value:
          type: string
          description: None
      example:
        id: id
        value: value
    SSLRenegCombo:
      type: object
      properties:
        id:
          type: string
          description: "on"
        value:
          type: string
          description: "On"
      example:
        id: id
        value: value
    SecurityCombo:
      type: object
      properties:
        id:
          type: string
          description: "On"
        value:
          type: string
          description: "On"
      example:
        id: id
        value: value
    Licence_FooterData:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusText:
          type: string
          description: Copyright &copy; 2005-2017 edgeNEXUS Ltd. All Rights Reserved.
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        PageTitle:
          type: string
          description: ALB-X
      example:
        data:
          success: "true"
          StatusText: StatusText
          StatusImage: StatusImage
          PageTitle: PageTitle
    Licence_Data:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Licence_Data_data'
      example:
        data:
          Throughput1: Throughput1
          FlightPath1: FlightPath1
          ALB1: ALB1
          Throughput: Throughput
          B2BLicense: B2BLicense
          ContactPerson: ContactPerson
          FirewallLicense: FirewallLicense
          Interfaces1: Interfaces1
          Layer4BaseLicense: Layer4BaseLicense
          Cache1: Cache1
          RealServers: RealServers
          AuthLicense1: AuthLicense1
          IssuedTo: IssuedTo
          UUID: UUID
          ServerRef: ServerRef
          RealServers1: RealServers1
          AuthLicense: AuthLicense
          JetSTREAM: JetSTREAM
          MachineID: MachineID
          GLBLicense: GLBLicense
          SSL1: SSL1
          FlightPath: FlightPath
          MachineID1: MachineID1
          SSL: SSL
          B2BLicense1: B2BLicense1
          Interfaces: Interfaces
          DateIssued: DateIssued
          success: success
          ALB: ALB
          GLBLicense1: GLBLicense1
          FirewallLicense1: FirewallLicense1
          Layer4BaseLicense1: Layer4BaseLicense1
          HttpBaseLicense1: HttpBaseLicense1
          JetSTREAM1: JetSTREAM1
          HttpBaseLicense: HttpBaseLicense
          Cache: Cache
    Upload_licence:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: "true"
        StatusText:
          type: string
          description: License uploaded Successfully/or Error text
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    Past_Licence:
      type: object
      properties:
        sLicenceText:
          type: string
          description: dhfdhdhfhfh
      example:
        sLicenceText: sLicenceText
    Logging_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        W3CCombo:
          $ref: '#/components/schemas/Logging_Data_W3CCombo'
        W3CFCombo:
          $ref: '#/components/schemas/Logging_Data_W3CFCombo'
        SecurityLogCombo:
          $ref: '#/components/schemas/Logging_Data_SecurityLogCombo'
        SecurityLog:
          type: string
          description: "On"
        RemoteLogStorage:
          type: string
          description: "0"
        RemoteLogIP:
          type: string
          description: ""
        RemoteLogShare:
          type: string
          description: w3c
        RemoteLogDir:
          type: string
          description: ""
        AdvancedW3C:
          type: string
          description: "0"
        LogMessageLevel:
          type: string
          description: "0"
        RemoteLogUser:
          type: string
          description: ""
        W3cLoggingModeList:
          type: string
          description: full
        XffLoggingList:
          type: string
          description: ""
        RsysLog1IP:
          type: string
          description: ""
        RsysLog2IP:
          type: string
          description: ""
        RsysLog1PROTOCOL:
          type: string
          description: ""
        RsysLog2PROTOCOL:
          type: string
          description: ""
        RsysServerPort1:
          type: string
          description: "0"
        RsysServerPort2:
          type: string
          description: "0"
        RsysServer1enabled:
          type: string
          description: "0"
        RsysServer2enabled:
          type: string
          description: "0"
        RsysProtocolCombo:
          $ref: '#/components/schemas/Logging_Data_RsysProtocolCombo'
        LogClearListString:
          $ref: '#/components/schemas/Logging_Data_LogClearListString'
        LogMessageLevelCombo:
          $ref: '#/components/schemas/Logging_Data_LogMessageLevelCombo'
      example:
        RemoteLogStorage: RemoteLogStorage
        RemoteLogShare: RemoteLogShare
        RemoteLogDir: RemoteLogDir
        W3cLoggingModeList: W3cLoggingModeList
        RsysServer2enabled: RsysServer2enabled
        AdvancedW3C: "0"
        LogMessageLevel: "0"
        StatusText: StatusText
        LogClearListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        RsysServer1enabled: RsysServer1enabled
        SecurityLog: SecurityLog
        RemoteLogIP: RemoteLogIP
        RsysLog2IP: RsysLog2IP
        XffLoggingList: XffLoggingList
        RsysServerPort1: RsysServerPort1
        RsysServerPort2: RsysServerPort2
        RsysProtocolCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        RsysLog1IP: RsysLog1IP
        SecurityLogCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        success: success
        RsysLog1PROTOCOL: RsysLog1PROTOCOL
        StatusImage: StatusImage
        W3CFCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        W3CCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        RsysLog2PROTOCOL: RsysLog2PROTOCOL
        RemoteLogUser: RemoteLogUser
        LogMessageLevelCombo:
          options:
            option:
            - id: "3"
              value: Error
            - id: "4"
              value: Warning
            - id: "5"
              value: Notice
            - id: "6"
              value: Info
    SecurityLogCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: "On"
        value:
          type: string
          description: "On"
      example:
        id: id
        value: value
    LogClearListString_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: System Logs (3 files)
      example:
        id: id
        value: value
    LogMessageLevelCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: Warning
      example:
        id: id
        value: value
    RsysProtocolCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: TCP
        value:
          type: string
          description: TCP
      example:
        id: id
        value: value
    W3CHeaderCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: "1"
        value:
          type: string
          description: "On"
    W3CFCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: Client's Network Address and Port
      example:
        id: id
        value: value
    W3CCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: none
        value:
          type: string
          description: None
      example:
        id: id
        value: value
    Update_logging:
      type: object
      properties:
        W3cLoggingModeList:
          type: string
          description: default
        XffLoggingList:
          type: string
          description: Client's Network Address
        securityLog:
          type: string
          description: "On"
        AdvanceW3C:
          type: string
          description: "0"
      example:
        securityLog: securityLog
        W3cLoggingModeList: W3cLoggingModeList
        XffLoggingList: XffLoggingList
        AdvanceW3C: AdvanceW3C
    Update_remotelog:
      type: object
      properties:
        RemoteLogStorage:
          type: string
          description: "true"
        RemoteLogIP:
          type: string
          description: 192.168.1.23
        RemoteLogShare:
          type: string
          description: w3c
        RemoteLogDir:
          type: string
          description: test
        RemoteLogUser:
          type: string
          description: test sd
        RemoteLogPassword:
          type: string
          description: ""
      example:
        RemoteLogStorage: RemoteLogStorage
        RemoteLogPassword: RemoteLogPassword
        RemoteLogShare: RemoteLogShare
        RemoteLogDir: RemoteLogDir
        RemoteLogIP: RemoteLogIP
        RemoteLogUser: RemoteLogUser
    Update_remotesyslog:
      type: object
      properties:
        RsysLog1IP:
          type: string
          description: 192.168.43.45
        RsysLog1PROTOCOL:
          type: string
          description: TCP
        RsysLog2IP:
          type: string
          description: 192.168.43.48
        RsysLog2PROTOCOL:
          type: string
          description: UDP
        RsysServer1enabled:
          type: string
          description: "1"
        RsysServer2enabled:
          type: string
          description: "1"
        RsysServerPort1:
          type: string
          description: "518"
        RsysServerPort2:
          type: string
          description: "421"
      example:
        RsysServerPort1: RsysServerPort1
        RsysServerPort2: RsysServerPort2
        RsysLog1IP: RsysLog1IP
        RsysServer2enabled: RsysServer2enabled
        RsysLog1PROTOCOL: RsysLog1PROTOCOL
        RsysServer1enabled: RsysServer1enabled
        RsysLog2PROTOCOL: RsysLog2PROTOCOL
        RsysLog2IP: RsysLog2IP
    Clear_log:
      type: object
      properties:
        LogClear:
          type: string
          description: "0"
      example:
        LogClear: LogClear
    jet_Login:
      type: object
      properties:
        admin:
          type: string
          description: jetnexus
    jet_LoginResp:
      type: object
      properties:
        LoginStatus:
          type: string
          description: OK
        UserName:
          type: string
          description: admin
        GUID:
          type: string
          description: "20150505224608"
      example:
        UserName: UserName
        GUID: GUID
        LoginStatus: LoginStatus
    jet_LogoutResp:
      type: object
      properties:
        LoginStatus:
          type: string
          description: OK
      example:
        UserName: UserName
    Monitor_Logging:
      type: object
      properties:
        success:
          type: string
          description: "true"
        w3CLoggingList:
          $ref: '#/components/schemas/Monitor_Logging_w3CLoggingList'
        sysLoggingList:
          $ref: '#/components/schemas/Monitor_Logging_sysLoggingList'
      example:
        w3CLoggingList:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        sysLoggingList:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
    Monitor_Logging_Download:
      type: object
      properties:
        success:
          type: string
          description: "true"
        DownloadStatus:
          type: string
          description: success
      example:
        success: success
        DownloadStatus: DownloadStatus
    w3CLoggingList_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: w3c20140508-16.log
      example:
        id: id
        value: value
    sysLoggingList_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: sys20140508.log
      example:
        id: id
        value: value
    Monitor_History:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        responseError:
          type: string
          description: ""
        responseWarning:
          type: string
          description: ""
        type:
          type: string
          description: System
        periodEndNow:
          type: string
          description: "1"
        periodEnd:
          type: string
          description: ""
        period:
          type: string
          description: day
        columns:
          type: string
          description: "Average CPU %,Average Memory %,Average Disk Free %"
        axesCount:
          type: string
          description: "3"
        timesUtc:
          type: string
          description: "1423735200, 1423738800,1423742400,1423746000,1423749600,1423753200,1423756800,1423760400,1423764000,1423767600,1423771200,1423774800,1423778400,1423782000,1423785600,1423789200,1423792800,1423796400,1423800000,1423803600,1423807200,1423810800,1423814400,1423818000,1423821600"
        timesServer:
          type: string
          description: "1423735200,1423738800, 1423742400,1423746000,1423749600,1423753200,1423756800,1423760400,1423764000,1423767600,1423771200,1423774800,1423778400,1423782000,1423785600,1423789200,1423792800,1423796400,1423800000,1423803600,\
            \ 1423807200,1423810800,1423814400,1423818000,1423821600"
        systemData:
          type: array
          items:
            $ref: '#/components/schemas/systemData_opt'
        dataset:
          $ref: '#/components/schemas/Monitor_History_dataset'
        MaxValue:
          type: string
          description: "0"
      example:
        period: period
        StatusText: StatusText
        responseError: responseError
        timesUtc: timesUtc
        columns: columns
        timesServer: timesServer
        MaxValue: MaxValue
        type: type
        responseWarning: responseWarning
        systemData:
        - data: data
          name: name
        - data: data
          name: name
        success: success
        StatusImage: StatusImage
        axesCount: axesCount
        periodEndNow: periodEndNow
        dataset:
          VSRS:
          - RS:
            - ipPort: ipPort
            - ipPort: ipPort
            ipPort: ipPort
          - RS:
            - ipPort: ipPort
            - ipPort: ipPort
            ipPort: ipPort
        periodEnd: periodEnd
    systemData_opt:
      type: object
      properties:
        name:
          type: string
          description: Average CPU %
        data:
          type: string
          description: ",14.7379,14.8028,13.5218,14.9271,15.0595,15.3032,15.2218,13.2871,13.5596,13.5732,14.0179,14.0496,14.1335,14.3255,14.467,14.5494,14.5119,15.2051,15.8951,16.7066,16.811,16.8361,16.7805,"
      example:
        data: data
        name: name
    Hisdataset_opt:
      type: object
      properties:
        ipPort:
          type: string
          description: 192.168.1.34:67
        RS:
          type: array
          items:
            $ref: '#/components/schemas/HisRS_opt'
      example:
        RS:
        - ipPort: ipPort
        - ipPort: ipPort
        ipPort: ipPort
    HisRS_opt:
      type: object
      properties:
        ipPort:
          type: string
          description: 4.3.4.23:67
      example:
        ipPort: ipPort
    UpdateMonitor_History:
      type: object
      properties:
        RequestColumn:
          type: string
          description: " Bytes in, Bytes cached, Compression %, Connections, TPS"
        RequestVsrs:
          type: string
          description: 192.168.1.34:6756; 192.168.1.250:80; 192.168.1.250:801
        period:
          type: string
          description: minute
        periodEndNow:
          type: string
          description: "1"
        type:
          type: string
          description: VS
      example:
        period: period
        periodEndNow: periodEndNow
        RequestColumn: RequestColumn
        RequestVsrs: RequestVsrs
        type: type
    Network_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: Your changes have been applied
        SNATGrid:
          $ref: '#/components/schemas/Network_Data_SNATGrid'
        data:
          $ref: '#/components/schemas/Network_Data_data'
      example:
        SNATGrid:
          dataset:
            row:
            - id: "1"
              interface: "0"
              sourceip: ""
              destinationip: ""
              protocol: all
              sourceport: ""
              destinationport: ""
              snattoip: ""
              snattoport: ""
              notes: ""
              error: "iptables v1.4.7: option `--to' requires an argument"
        ProtocolCombo:
          options:
            option:
            - id: all
              value: All
            - id: tcp
              value: TCP
            - id: udp
              value: UDP
            - id: icmp
              value: ICMP
        data:
          DefaultGatewayIPv6: DefaultGatewayIPv6
          ServerNagle: ServerNagle
          NetworkStaticRoutesGrid:
            dataset:
              row: row
          CurrentTable: CurrentTable
          DefaultStatusImage: DefaultStatusImage
          DNSServerField2: DNSServerField2
          ClientNagle: ClientNagle
          DNSServerField: DNSServerField
          DefaultGateway: DefaultGateway
          ServerRefField: ServerRefField
          AdapterOptionsListString:
            options:
              option:
              - id: id
                value: value
              - id: id
                value: value
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    NetworkDataSNAT_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: ""
      example:
        id: id
        value: value
    NetworkData_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: eth0
      example:
        id: id
        value: value
    Update_static:
      type: object
      properties:
        destination:
          type: string
          description: 192.168.4.132
        gateway:
          type: string
          description: 192.168.1.1
        mask:
          type: string
          description: 255.255.255.6
        adapter:
          type: string
          description: eth0
        id:
          type: string
          description: "1"
        isValidationRequired:
          type: string
          description: "true"
        active:
          type: string
          description: images/jnpsActiveNo.gif
      example:
        adapter: adapter
        isValidationRequired: isValidationRequired
        destination: destination
        active: active
        id: id
        gateway: gateway
        mask: mask
    Delete_static:
      type: object
      properties:
        id:
          type: string
          description: "1"
      example:
        id: id
    Update_default:
      type: object
      properties:
        DNSServerField:
          type: string
          description: 113.193.1.14
        DNSServerField2:
          type: string
          description: ""
        DefaultGateway:
          type: string
          description: 192.168.1.1
        ServerRefField:
          type: string
          description: Jetnexus ALB production Server
        DefaultGatewayIPv6:
          type: string
          description: ""
        isValidationRequired:
          type: string
          description: ""
      example:
        DefaultGatewayIPv6: DefaultGatewayIPv6
        isValidationRequired: isValidationRequired
        DNSServerField2: DNSServerField2
        DNSServerField: DNSServerField
        DefaultGateway: DefaultGateway
        ServerRefField: ServerRefField
    Network_Combo:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        HideVlan:
          type: string
          description: "true"
        EthDuplexListString:
          $ref: '#/components/schemas/Network_Combo_EthDuplexListString'
        EthSpeedListString:
          $ref: '#/components/schemas/Network_Combo_EthSpeedListString'
        BondModeListString:
          $ref: '#/components/schemas/Network_Combo_BondModeListString'
        NoBonding:
          type: string
          description: "false"
        EthBondListString:
          $ref: '#/components/schemas/Network_Combo_EthBondListString'
      example:
        NoBonding: NoBonding
        EthDuplexListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        EthSpeedListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        HideVlan: HideVlan
        BondModeListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        EthBondListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
    EthDuplexList_opt:
      type: object
      properties:
        id:
          type: string
          description: Full Duplex
        value:
          type: string
          description: Full Duplex
      example:
        id: id
        value: value
    EthSpeedList_opt:
      type: object
      properties:
        id:
          type: string
          description: "10"
        value:
          type: string
          description: "10"
      example:
        id: id
        value: value
    BondModeList_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: balance-rr
      example:
        id: id
        value: value
    EthBondList_opt:
      type: object
      properties:
        id:
          type: string
          description: "n"
        value:
          type: string
          description: none
      example:
        id: id
        value: value
    Hardware_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        HardwareGrid:
          $ref: '#/components/schemas/Hardware_Data_HardwareGrid'
        BondGrid:
          $ref: '#/components/schemas/Hardware_Data_BondGrid'
        AdapterListString:
          $ref: '#/components/schemas/Hardware_Data_AdapterListString'
      example:
        BondGrid:
          dataset:
            row:
            - bondMode: bondMode
              id: id
              bondName: bondName
            - bondMode: bondMode
              id: id
              bondName: bondName
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        AdapterListString:
          dataset:
            row:
            - id: id
              value: value
            - id: id
              value: value
        HardwareGrid:
          dataset:
            row:
            - ethName: ethName
              duplex: duplex
              ethStatus: ethStatus
              id: id
              ethBond: ethBond
              speed: speed
            - ethName: ethName
              duplex: duplex
              ethStatus: ethStatus
              id: id
              ethBond: ethBond
              speed: speed
    Headline_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        nature:
          type: string
          description: nature
        colour:
          type: string
          description: colour
        data:
          type: string
          description: none
        message:
          type: string
          description: ""
      example:
        colour: colour
        nature: nature
        id: id
        data: data
        message: message
    HardwareGrid_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        duplex:
          type: string
          description: auto
        speed:
          type: string
          description: Auto
        ethName:
          type: string
          description: eth0
        ethBond:
          type: string
          description: none
        ethStatus:
          type: string
          description: ""
      example:
        ethName: ethName
        duplex: duplex
        ethStatus: ethStatus
        id: id
        ethBond: ethBond
        speed: speed
    BondGrid_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        bondName:
          type: string
          description: bond0
        bondMode:
          type: string
          description: active-backup
      example:
        bondMode: bondMode
        id: id
        bondName: bondName
    AdapterList_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: eth0
      example:
        id: id
        value: value
    Update_interface:
      type: object
      properties:
        id:
          type: string
          description: "0"
        duplex:
          type: string
          description: Half Duplex
        speed:
          type: string
          description: "100"
        ethName:
          type: string
          description: eth0
        ethBond:
          type: string
          description: none
      example:
        ethName: ethName
        duplex: duplex
        id: id
        ethBond: ethBond
        speed: speed
    Update_bonding:
      type: object
      properties:
        bondMode:
          type: string
          description: 802.3ad
        id:
          type: string
          description: "2"
      example:
        bondMode: bondMode
        id: id
    Remove_bonding:
      type: object
      properties:
        id:
          type: string
          description: "1"
      example:
        id: id
    Appliance_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        AdapterListString:
          $ref: '#/components/schemas/Appliance_Data_AdapterListString'
        FailoverEnabled:
          type: string
          description: "OFF"
        FailoverTimer:
          type: string
          description: "10000"
        ApplianceGrid:
          $ref: '#/components/schemas/Appliance_Data_ApplianceGrid'
      example:
        FailoverTimer: FailoverTimer
        StatusText: StatusText
        success: success
        FailoverEnabled: FailoverEnabled
        StatusImage: StatusImage
        AdapterListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        ApplianceGrid:
          dataset:
            row:
            - address: address
              ethtype: ethtype
              RestEnabled: RestEnabled
              ethVlan: ethVlan
              webconsoleChecked: webconsoleChecked
              id: id
              gateway: gateway
              mask: mask
              desc: desc
              RpFilter: RpFilter
            - address: address
              ethtype: ethtype
              RestEnabled: RestEnabled
              ethVlan: ethVlan
              webconsoleChecked: webconsoleChecked
              id: id
              gateway: gateway
              mask: mask
              desc: desc
              RpFilter: RpFilter
    ApplianceGrid_opt:
      type: object
      properties:
        id:
          type: string
          description: "1"
        ethtype:
          type: string
          description: eth0
        address:
          type: string
          description: 192.168.1.175
        mask:
          type: string
          description: 255.255.255.0
        gateway:
          type: string
          description: ""
        desc:
          type: string
          description: Green Side
        RestEnabled:
          type: string
          description: "0"
        webconsoleChecked:
          type: string
          description: "1"
        RpFilter:
          type: string
          description: "true"
        ethVlan:
          type: string
          description: ""
      example:
        address: address
        ethtype: ethtype
        RestEnabled: RestEnabled
        ethVlan: ethVlan
        webconsoleChecked: webconsoleChecked
        id: id
        gateway: gateway
        mask: mask
        desc: desc
        RpFilter: RpFilter
    Add_adapter:
      type: array
      items:
        $ref: '#/components/schemas/Add_adapter_opt'
    Add_adapter_opt:
      type: object
      properties:
        RestEnabled:
          type: string
          description: "false"
        address:
          type: string
          description: 192.168.2.175
        gateway:
          type: string
          description: 192.168.2.1
        desc:
          type: string
          description: test Side
        ethVlan:
          type: string
          description: ""
        id:
          type: string
          description: "2"
        ethtype:
          type: string
          description: "1"
        mask:
          type: string
          description: 255.255.255.1
        webconsoleChecked:
          type: string
          description: "false"
        RpFilter:
          type: string
          description: "false"
    specific_adapterUpdate:
      type: object
      properties:
        address:
          type: string
          description: address
        ethName:
          type: string
          description: name
      example:
        ethName: ethName
        address: address
    Remove_adapter:
      type: object
      properties:
        id:
          type: string
          description: "1"
      example:
        id: id
    Advance_Network:
      type: object
      properties:
        ClientNagle:
          type: string
          description: "true"
        ServerNagle:
          type: string
          description: "false"
      example:
        ServerNagle: ServerNagle
        ClientNagle: ClientNagle
    Power_Version:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        loadevent:
          type: string
          description: ' '
        DevVer:
          type: string
          description: ""
      example:
        DevVer: DevVer
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        loadevent: loadevent
    Add_snat:
      type: object
      properties:
        destinationip:
          type: string
          description: 192.168.4.132
        sourceip:
          type: string
          description: 192.168.1.1
        snattoip:
          type: string
          description: 192.168.1.1
        interface:
          type: string
          description: "0"
        sourceport:
          type: string
          description: "80"
        destinationport:
          type: string
          description: "81"
        snattoport:
          type: string
          description: "80"
        notes:
          type: string
          description: notes
        protocol:
          type: string
          description: all
      example:
        interface: "0"
        sourceip: sourceip
        destinationip: destinationip
        protocol: all
        sourceport: sourceport
        destinationport: destinationport
        snattoip: snattoip
        snattoport: snattoport
        notes: notes
    Update_snat:
      type: object
      properties:
        destinationip:
          type: string
          description: 192.168.4.132
        sourceip:
          type: string
          description: 192.168.1.1
        snattoip:
          type: string
          description: 192.168.1.1
        interface:
          type: string
          description: "0"
        sourceport:
          type: string
          description: "80"
        destinationport:
          type: string
          description: "81"
        snattoport:
          type: string
          description: "80"
        notes:
          type: string
          description: notes
        protocol:
          type: string
          description: all
        id:
          type: string
          description: "1"
      example:
        id: "1"
        interface: "0"
        sourceip: sourceip
        destinationip: destinationip
        protocol: all
        sourceport: sourceport
        destinationport: destinationport
        snattoip: snattoip
        snattoport: snattoport
        notes: notes
    Delete_snat:
      type: object
      properties:
        id:
          type: string
          description: "1"
      example:
        id: id
    Power_CheckStatus:
      type: object
      properties:
        EnableJavaScriptLogging:
          type: string
          description: "true"
        PollTaskInterval:
          type: string
          description: images/2light-hd.gif
      example:
        EnableJavaScriptLogging: EnableJavaScriptLogging
        PollTaskInterval: PollTaskInterval
    Power_Restart:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: "true"
        StatusText:
          type: string
          description: Going to Restart jetNEXUS daemon or error message.
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    Power_Reboot:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: "true"
        StatusText:
          type: string
          description: Going to Reboot or error message.
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    Power_PowerOff:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: "true"
        StatusText:
          type: string
          description: Going to Power off jetNEXUS daemon or error message.
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    Protocol_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        XFFCombo:
          $ref: '#/components/schemas/Protocol_Data_XFFCombo'
        CompressAsYouGoCombo:
          $ref: '#/components/schemas/Protocol_Data_CompressAsYouGoCombo'
        SendServerTooBusyPage:
          type: string
          description: "0"
        XffOutputList:
          type: string
          description: "2"
        XffHeader:
          type: string
          description: X-Forwarded-For t
        CPF_INITIAL_ PAGE_BUFFER_SIZE_K:
          type: string
          description: "139"
        CPF_MAX_CONTENT_LENGTH_K:
          type: string
          description: "99990"
        CPF_INCREMENT_PAGE_BUFFER_SIZE_K:
          type: string
          description: "8"
        CPF_ MinimumCompressionSize:
          type: string
          description: "207"
        CPF_DO_NOT_COMPRESS_CSS:
          type: string
          description: "0"
        CPF_CompressionDisabled:
          type: string
          description: "1"
        CPF_CompressAsYouGo:
          type: string
          description: "1"
        CurrentExclusions:
          type: string
          description: test exclusion for test t
        SameSite:
          type: string
          description: Lax
        Secure:
          type: string
          description: "1"
        HttpOnly:
          type: string
          description: "0"
        SameSiteListString:
          $ref: '#/components/schemas/Protocol_Data_SameSiteListString'
      example:
        CPF_INITIAL_ PAGE_BUFFER_SIZE_K: CPF_INITIAL_ PAGE_BUFFER_SIZE_K
        StatusText: StatusText
        XFFCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        XffOutputList: XffOutputList
        CPF_ MinimumCompressionSize: CPF_ MinimumCompressionSize
        CPF_CompressionDisabled: CPF_CompressionDisabled
        CompressAsYouGoCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        SendServerTooBusyPage: SendServerTooBusyPage
        CPF_CompressAsYouGo: CPF_CompressAsYouGo
        CPF_INCREMENT_PAGE_BUFFER_SIZE_K: CPF_INCREMENT_PAGE_BUFFER_SIZE_K
        success: success
        XffHeader: XffHeader
        CPF_MAX_CONTENT_LENGTH_K: CPF_MAX_CONTENT_LENGTH_K
        StatusImage: StatusImage
        CurrentExclusions: CurrentExclusions
        CPF_DO_NOT_COMPRESS_CSS: CPF_DO_NOT_COMPRESS_CSS
        SameSite: None
        Secure: "1"
        HttpOnly: "1"
        SameSiteListString:
          options:
            option:
            - id: "Off"
              value: "Off"
            - id: None
              value: SameSite=None
            - id: Lax
              value: SameSite=Lax
            - id: Strict
              value: SameSite=Strict
    XFFCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: "Off"
      example:
        id: id
        value: value
    CompressAsYouGoCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: By Page Request
      example:
        id: id
        value: value
    SameSiteListString_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: By Page Request
      example:
        id: id
        value: value
    Protocol_Server:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        File:
          type: string
          description: ""
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        File: File
    Protocol_Update:
      type: object
      properties:
        ForwardedForOutput:
          type: string
          description: "2"
        ForwardedForHeader:
          type: string
          description: X-Forwarded-For t
      example:
        ForwardedForOutput: ForwardedForOutput
        ForwardedForHeader: ForwardedForHeader
    Protocol_UpdateEneble:
      type: object
      properties:
        HiddenSendServerTooBusyPage:
          type: string
          description: ""
      example:
        HiddenSendServerTooBusyPage: HiddenSendServerTooBusyPage
    Protocol_UpdateHTTP:
      type: object
      properties:
        InitialThreadMemory:
          type: string
          description: "139"
        MaximumThreadMemory:
          type: string
          description: "99990"
        IncrementMemory:
          type: string
          description: "8"
        MinimumCompressionSize:
          type: string
          description: "207"
        SafeMode:
          type: string
          description: "false"
        DisableCompression:
          type: string
          description: "true"
        CompressAsYouGo:
          type: string
          description: "1"
      example:
        IncrementMemory: IncrementMemory
        SafeMode: SafeMode
        DisableCompression: DisableCompression
        MinimumCompressionSize: MinimumCompressionSize
        MaximumThreadMemory: MaximumThreadMemory
        InitialThreadMemory: InitialThreadMemory
        CompressAsYouGo: CompressAsYouGo
    Protocol_UpdateConclusion:
      type: object
      properties:
        CurrentExclusions:
          type: string
          description: '*.CSS *.JPG'
      example:
        CurrentExclusions: CurrentExclusions
    Protocol_Persistence_Cookies:
      type: object
      properties:
        HttpOnly:
          type: string
          description: "0"
        SameSite:
          type: string
          description: Lax
        Secure:
          type: string
          description: "0"
      example:
        SameSite: Lax
        Secure: "0"
        HttpOnly: "1"
    Config_Monitoring:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        MethodCombo:
          $ref: '#/components/schemas/Config_Monitoring_MethodCombo'
        ConfigMonitoringGrid:
          $ref: '#/components/schemas/Config_Monitoring_ConfigMonitoringGrid'
      example:
        MethodCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        StatusText: StatusText
        success: success
        ConfigMonitoringGrid:
          dataset:
            row:
            - AppliedtoVS: AppliedtoVS
              Username: Username
              name: name
              description: description
              id: id
              type: type
              url: url
              content: content
              Password: Password
              Threshold: Threshold
            - AppliedtoVS: AppliedtoVS
              Username: Username
              name: name
              description: description
              id: id
              type: type
              url: url
              content: content
              Password: Password
              Threshold: Threshold
        StatusImage: StatusImage
    RealMethodCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: Check200
        value:
          type: string
          description: HTTP 200 OK
      example:
        id: id
        value: value
    RealConfigMonitoring_opt:
      type: object
      properties:
        id:
          type: string
          description: "1"
        name:
          type: string
          description: 200OK
        description:
          type: string
          description: Check home page for 200 OK
        type:
          type: string
          description: Check200
        url:
          type: string
          description: /
        content:
          type: string
          description: ""
        Username:
          type: string
          description: ""
        Password:
          type: string
          description: ""
        Threshold:
          type: string
          description: ""
        AppliedtoVS:
          type: string
          description: ""
      example:
        AppliedtoVS: AppliedtoVS
        Username: Username
        name: name
        description: description
        id: id
        type: type
        url: url
        content: content
        Password: Password
        Threshold: Threshold
    DeleteCustomMonitor:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        delCSMCombo:
          $ref: '#/components/schemas/DeleteCustomMonitor_delCSMCombo'
      example:
        StatusText: StatusText
        success: success
        delCSMCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        StatusImage: StatusImage
    UpdateRealRequest:
      type: array
      items:
        $ref: '#/components/schemas/UpdateRealRequest_inner'
    RemoveRealRequest:
      type: object
      properties:
        id:
          type: string
          description: "1"
      example:
        id: id
    UploadCustomMonitor:
      type: object
      properties:
        name:
          type: string
          description: UploadMointorName
        File:
          type: string
          description: ABC
    RemoveCustomMonitor:
      type: object
      properties:
        CustomMonitor:
          type: string
          description: "1"
      example:
        CustomMonitor: CustomMonitor
    Security_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        EnableSSH:
          type: string
          description: "1"
        SCP_CertificateGUI3:
          type: string
          description: default
        SCP_PortGUI3:
          type: string
          description: "80"
        SCP_SecurePortGUI3:
          type: string
          description: "443"
        SCP_CertificateRest:
          type: string
          description: default
        SCP_PortRest:
          type: string
          description: ""
        SCP_IPRest:
          type: string
          description: ""
        SCP_EnabledRest:
          type: string
          description: "0"
        RestIPList:
          type: string
          description: ""
        SCP_CertificateListStringGUI3:
          $ref: '#/components/schemas/Security_Data_SCP_CertificateListStringGUI3'
      example:
        SCP_CertificateListStringGUI3:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        RestIPList: RestIPList
        StatusText: StatusText
        SCP_SecurePortGUI3: SCP_SecurePortGUI3
        SCP_CertificateGUI3: SCP_CertificateGUI3
        EnableSSH: EnableSSH
        SCP_CertificateRest: SCP_CertificateRest
        SCP_PortGUI3: SCP_PortGUI3
        SCP_EnabledRest: SCP_EnabledRest
        success: success
        StatusImage: StatusImage
        SCP_PortRest: SCP_PortRest
        SCP_IPRest: SCP_IPRest
    SCP_Certificate_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: No SSL
      example:
        id: id
        value: value
    Security_UpdateGUI:
      type: object
      properties:
        SCP_CertificateGUI3:
          type: string
          description: default
        SCP_ChangeAccepted:
          type: string
          description: "1"
        SCP_PortGUI3:
          type: string
          description: "80"
        SCP_SecurePortGUI3:
          type: string
          description: "443"
      example:
        SCP_PortGUI3: SCP_PortGUI3
        SCP_ChangeAccepted: SCP_ChangeAccepted
        SCP_SecurePortGUI3: SCP_SecurePortGUI3
        SCP_CertificateGUI3: SCP_CertificateGUI3
    Security_Response:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: "true"
        StatusText:
          type: string
          description: Your changes have been applied or Error text.
    Security_EnableRest:
      type: object
      properties:
        SCP_RESTCertificate:
          type: string
          description: No SSL
        SCP_RESTEnabled:
          type: string
          description: "yes"
        SCP_RESTIP:
          type: string
          description: 192.168.1.184
        SCP_RESTPort:
          type: string
          description: "8087"
      example:
        SCP_RESTCertificate: SCP_RESTCertificate
        SCP_RESTPort: SCP_RESTPort
        SCP_RESTEnabled: SCP_RESTEnabled
        SCP_RESTIP: SCP_RESTIP
    Security_enableSSH:
      type: object
      properties:
        SSH:
          type: string
          description: "true"
      example:
        SSH: SSH
    SNMP_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        SNMPV1V2Checked:
          type: string
          description: "1"
        SNMPCommunityString:
          type: string
          description: jetnexus
        SNMPV3Checked:
          type: string
          description: "1"
      example:
        SNMPCommunityString: SNMPCommunityString
        StatusText: StatusText
        SNMPV3Checked: SNMPV3Checked
        success: success
        SNMPV1V2Checked: SNMPV1V2Checked
        StatusImage: StatusImage
    SNMP_Update:
      type: object
      properties:
        SNMPV1V2Checked:
          type: string
          description: "true"
        SNMPCommunityString:
          type: string
          description: jetnexus
        SNMPV3Checked:
          type: string
          description: "true"
        oldPassPhrase:
          type: string
          description: "12"
        newPassPhrase:
          type: string
          description: "23455667"
        confirmNewPassPhrase:
          type: string
          description: "12233413"
      example:
        SNMPCommunityString: SNMPCommunityString
        newPassPhrase: newPassPhrase
        SNMPV3Checked: SNMPV3Checked
        SNMPV1V2Checked: SNMPV1V2Checked
        oldPassPhrase: oldPassPhrase
        confirmNewPassPhrase: confirmNewPassPhrase
    Software_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        SmartFiles:
          $ref: '#/components/schemas/Software_Data_SmartFiles'
      example:
        StatusText: StatusText
        success: success
        SmartFiles:
          Files:
          - Order_Id: Order_Id
            DockerImageName: DockerImageName
            Description: Description
            File_Name: File_Name
            Product_Id: Product_Id
            Certified: Certified
            Message_Digest: Message_Digest
            Vendor: Vendor
            ReleaseDate: ReleaseDate
            Name: Name
            Type: Type
            Version: Version
            Machine_Id: Machine_Id
            Icon: Icon
          - Order_Id: Order_Id
            DockerImageName: DockerImageName
            Description: Description
            File_Name: File_Name
            Product_Id: Product_Id
            Certified: Certified
            Message_Digest: Message_Digest
            Vendor: Vendor
            ReleaseDate: ReleaseDate
            Name: Name
            Type: Type
            Version: Version
            Machine_Id: Machine_Id
            Icon: Icon
        StatusImage: StatusImage
    SmartFiles_opt:
      type: object
      properties:
        File_Name:
          type: string
          description: MyCSMTest.monitor.alb
        Version:
          type: string
          description: v2.1
        Message_Digest:
          type: string
          description: ""
        Machine_Id:
          type: string
          description: ""
        Product_Id:
          type: string
          description: PRODUCT1
        Order_Id:
          type: string
          description: order1
        Icon:
          type: string
          description: iVBORw0KGgo
        Description:
          type: string
          description: Desc1
        Name:
          type: string
          description: MyCSMTest
        Type:
          type: string
          description: monitor.alb
        Certified:
          type: string
          description: iso13001
        Vendor:
          type: string
          description: jetnexus
        ReleaseDate:
          type: string
          description: 21 oct
        DockerImageName:
          type: string
          description: ""
      example:
        Order_Id: Order_Id
        DockerImageName: DockerImageName
        Description: Description
        File_Name: File_Name
        Product_Id: Product_Id
        Certified: Certified
        Message_Digest: Message_Digest
        Vendor: Vendor
        ReleaseDate: ReleaseDate
        Name: Name
        Type: Type
        Version: Version
        Machine_Id: Machine_Id
        Icon: Icon
    Software_Version:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        loadevent:
          type: string
          description: ""
        DevVer:
          type: string
          description: ""
      example:
        DevVer: DevVer
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        loadevent: loadevent
    Software_Location:
      type: object
      properties:
        as:
          type: string
          description: AS45528 Tikona Digital Networks Pvt Ltd.
        city:
          type: string
          description: Noida
        country:
          type: string
          description: India
        countryCode:
          type: string
          description: IN
        isp:
          type: string
          description: Tikona Digital Networks Pvt. LTD
        lat:
          type: string
          description: "28.57"
        lon:
          type: string
          description: "77.32"
        org:
          type: string
          description: Tikona Digital Networks Pvt
        query:
          type: string
          description: 113.193.186.241
        region:
          type: string
          description: UP
        regionName:
          type: string
          description: Uttar Pradesh
        status:
          type: string
          description: success
        timezone:
          type: string
          description: Asia/Kolkata
        zip:
          type: string
          description: "201301"
      example:
        zip: zip
        country: country
        city: city
        org: org
        timezone: timezone
        isp: isp
        query: query
        regionName: regionName
        lon: lon
        as: as
        countryCode: countryCode
        region: region
        lat: lat
        status: status
    Software_LicenceCHECKservice:
      type: object
      properties:
        isServicesRunning:
          type: string
          description: "true"
      example:
        CheckService:
          isServicesRunning: "false"
    Software_LicenceCHECKvalid:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        isAllowed:
          type: string
          description: "true"
      example:
        StatusText: StatusText
        success: success
        isAllowed: isAllowed
        StatusImage: StatusImage
    Software_Licence:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        UserID:
          type: string
          description: admin
        MachineID:
          type: string
          description: 0800-2745-80BF
        Location:
          type: string
          description: "Noida, India"
        PublicIP:
          type: string
          description: 113.193.186.241
        LicenceID:
          type: string
          description: E845FF30-5AC9-467C-80AF-1B61731B6615
        SoftwareVersion:
          type: string
          description: 4.2.1 (Build 1700) 7g0859
        AppStoreUrl:
          type: string
          description: https://appstore.jetnexuscloud.com
      example:
        MachineID: MachineID
        SoftwareVersion: SoftwareVersion
        StatusText: StatusText
        PublicIP: PublicIP
        success: success
        UserID: UserID
        LicenceID: LicenceID
        StatusImage: StatusImage
        AppStoreUrl: AppStoreUrl
        Location: Location
    Software_DownloadStatus:
      type: object
      properties:
        URL:
          type: string
          description: ""
        Name:
          type: string
          description: ""
        TotalSize:
          type: string
          description: ""
      example:
        URL: URL
        Name: Name
        TotalSize: TotalSize
    Software_DownloadStatusResponse:
      type: object
      properties:
        success:
          type: string
          description: ""
        StatusImage:
          type: string
          description: ""
        StatusText:
          type: string
          description: ""
        TotalSize:
          type: string
          description: ""
        DownloadedSize:
          type: string
          description: ""
      example:
        success: success
        StatusImage: StatusImage
        StatusText: StatusText
        TotalSize: TotalSize
        DownloadedSize: DownloadedSize
    Software_CloudDownload:
      type: object
      properties:
        URL:
          type: string
          description: ""
      example:
        URL: URL
    Software_DownResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: Software download successfully  / OR error message
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    Software_SaveLoc:
      type: object
      properties:
        Location:
          type: string
          description: ""
        PublicIP:
          type: string
          description: ""
      example:
        PublicIP: PublicIP
        Location: Location
    Software_UploadResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: Software uploaaded successfully  / OR error message
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    Software_SaveLocationResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: Software uploaaded successfully  / OR error message
        Details:
          $ref: '#/components/schemas/Software_SaveLocationResp_Details'
      example:
        Details:
          LOCATION: LOCATION
          PUBLIC_IP_ADDRESS: PUBLIC_IP_ADDRESS
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    Software_Upload:
      type: object
      properties:
        File_Name:
          type: string
          description: ""
      example:
        File_Name: File_Name
    Software_response:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: Your changes have been applied  / OR error message
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    GetCertificate:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: "true"
        StatusText:
          type: string
          description: get
        CerKeyLenghtCombo:
          $ref: '#/components/schemas/GetCertificate_CerKeyLenghtCombo'
        CountryCombo:
          $ref: '#/components/schemas/GetCertificate_CountryCombo'
        CertificateManageCombo:
          $ref: '#/components/schemas/GetCertificate_CertificateManageCombo'
        ACE_CertificateListString:
          $ref: '#/components/schemas/GetCertificate_ACE_CertificateListString'
      example:
        CertificateManageCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        StatusText: StatusText
        CountryCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        success: success
        CerKeyLenghtCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        StatusImage: StatusImage
        ACE_CertificateListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
    CerKeyLenght_opt:
      type: object
      properties:
        id:
          type: string
          description: "0"
        value:
          type: string
          description: "512"
      example:
        id: id
        value: value
    CountryComboCer_opt:
      type: object
      properties:
        id:
          type: string
          description: AD
        value:
          type: string
          description: "AD Andorra, Principality of"
      example:
        id: id
        value: value
    CertificateManage_opt:
      type: object
      properties:
        id:
          type: string
          description: ABC
        value:
          type: string
          description: ABC(SelfSigned)
      example:
        id: id
        value: value
    ACE_Certificate_opt:
      type: object
      properties:
        id:
          type: string
          description: ABC
        value:
          type: string
          description: ABC
      example:
        id: id
        value: value
    ManageCertificate:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: "true"
        StatusText:
          type: string
          description: get
        CertificateManageCombo:
          $ref: '#/components/schemas/GetCertificate_CertificateManageCombo'
        ACE_CertificateListString:
          $ref: '#/components/schemas/GetCertificate_ACE_CertificateListString'
      example:
        CertificateManageCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        ACE_CertificateListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
    UpdateReorderSSL:
      type: object
      properties:
        CetificateName:
          type: string
          description: "10"
        PasteSignature:
          type: string
          description: testcert
      example:
        CetificateName: CetificateName
        PasteSignature: PasteSignature
    CreateSSL:
      type: object
      properties:
        SSLPeriod:
          type: string
          description: "10"
        SslCertificateNameText:
          type: string
          description: testcert
        SslCityText:
          type: string
          description: new delhi
        SslCountryText:
          type: string
          description: delhi
        SslDomainText:
          type: string
          description: www.abc.com
        SslKeyLengthText:
          type: string
          description: "1024"
        SslOrganisationText:
          type: string
          description: myone
        SslOrganisationUnitNameText:
          type: string
          description: support
        SslCountyText:
          type: string
          description: ""
        ButtonFlag:
          type: string
          description: ""
      example:
        SslCountyText: SslCountyText
        SslCertificateNameText: SslCertificateNameText
        SslKeyLengthText: SslKeyLengthText
        ButtonFlag: ButtonFlag
        SslCityText: SslCityText
        SslCountryText: SslCountryText
        SslDomainText: SslDomainText
        SslOrganisationText: SslOrganisationText
        SslOrganisationUnitNameText: SslOrganisationUnitNameText
        SSLPeriod: SSLPeriod
    CreateSSLCert:
      type: object
      properties:
        SSLPeriod:
          type: string
          description: "10"
        SslCertificateNameText:
          type: string
          description: testcert
        SslCityText:
          type: string
          description: new delhi
        SslCountryText:
          type: string
          description: delhi
        SslDomainText:
          type: string
          description: www.abc.com
        SslKeyLengthText:
          type: string
          description: "1024"
        SslOrganisationText:
          type: string
          description: myone
        SslOrganisationUnitNameText:
          type: string
          description: support
        SslCountyText:
          type: string
          description: ""
        ButtonFlag:
          type: string
          description: ""
      example:
        SslCountyText: SslCountyText
        SslCertificateNameText: SslCertificateNameText
        SslKeyLengthText: SslKeyLengthText
        ButtonFlag: ButtonFlag
        SslCityText: SslCityText
        SslCountryText: SslCountryText
        SslDomainText: SslDomainText
        SslOrganisationText: SslOrganisationText
        SslOrganisationUnitNameText: SslOrganisationUnitNameText
        SSLPeriod: SSLPeriod
    DetailsSSLReq:
      type: object
      properties:
        CetificateName:
          type: string
          description: NewCertSign
        ButtonFlag:
          type: string
          description: ButtonFlag
        PasteSignature:
          type: string
          description: PasteSignature
      example:
        CetificateName: CetificateNames
        ButtonFlag: "2"
        PasteSignature: ""
    DetailsSSL:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: "true"
        StatusText:
          type: string
          description: Your changes have been applied/or Error text
        CertificateName:
          type: string
          description: NewCertSign
        Organization:
          type: string
          description: mit
        OrganizationalUnit:
          type: string
          description: "23"
        CityLocality:
          type: string
          description: test
        StateProvince:
          type: string
          description: test
        Country:
          type: string
          description: com
        DomainName:
          type: string
          description: test
        KeyLength:
          type: string
          description: "512"
        Periods:
          type: string
          description: ""
        Expires:
          type: string
          description: ""
      example:
        Organization: Organization
        OrganizationalUnit: OrganizationalUnit
        StatusText: StatusText
        DomainName: DomainName
        StateProvince: StateProvince
        KeyLength: KeyLength
        Periods: Periods
        success: success
        StatusImage: StatusImage
        Country: Country
        Expires: Expires
        CertificateName: CertificateName
        CityLocality: CityLocality
    InstallSSL:
      type: object
      properties:
        CetificateName:
          type: string
          description: NewCertSign
        ButtonFlag:
          type: string
          description: "2"
        PasteSignature:
          type: string
          description: ""
      example:
        CetificateName: CetificateName
        ButtonFlag: ButtonFlag
        PasteSignature: PasteSignature
    IntermediateInstallSSL:
      type: object
      properties:
        CetificateName:
          type: string
          description: NewCertSign
        ButtonFlag:
          type: string
          description: "2"
        PasteSignature:
          type: string
          description: ""
      example:
        CetificateName: CetificateName
        ButtonFlag: ButtonFlag
        PasteSignature: PasteSignature
    RemoveSSL:
      type: object
      properties:
        CetificateName:
          type: string
          description: NewCertSign
        ButtonFlag:
          type: string
          description: "2"
        PasteSignature:
          type: string
          description: ""
      example:
        CetificateName: CetificateName
        ButtonFlag: ButtonFlag
        PasteSignature: PasteSignature
    RenewSSL:
      type: object
      properties:
        CetificateName:
          type: string
          description: NewCertSign
        ButtonFlag:
          type: string
          description: "2"
        PasteSignature:
          type: string
          description: ""
      example:
        CetificateName: CetificateName
        ButtonFlag: ButtonFlag
        PasteSignature: PasteSignature
    ReorderSSL:
      type: object
      properties:
        CetificateName:
          type: string
          description: ""
      example:
        CetificateName: CetificateName
    RenewSSL_Response:
      type: object
      properties:
        success:
          type: string
          description: "true"
        CertificateName:
          type: string
          description: name
        Key:
          type: string
          description: key
      example:
        success: success
        CertificateName: CertificateName
        Key: Key
    ReorderSSL_Response:
      type: object
      properties:
        success:
          type: string
          description: "true"
        CertReorderText:
          type: string
          description: ""
      example:
        success: success
        CertReorderText: CertReorderText
    Monitor_Statistics2:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        GUISTATUS:
          type: string
          description: images/jnpsStatusBg.gif
        CPU:
          type: string
          description: 13.0%
        Disk:
          type: string
          description: 46%
        Memory:
          type: string
          description: 86.8%( 1271.4MB of 1464.9MB)
        GraphMemory:
          type: string
          description: 86.8%
        FromCacheHits1:
          type: string
          description: "0"
        FromCacheHits2:
          type: string
          description: "-"
        FromCacheBytes1:
          type: string
          description: "0"
        FromCacheBytes2:
          type: string
          description: "-"
        FromServerHits1:
          type: string
          description: "0"
        FromServerHits2:
          type: string
          description: "-"
        FromServerBytes1:
          type: string
          description: "0"
        FromServerBytes2:
          type: string
          description: "-"
        CacheContentsHits:
          type: string
          description: 0 entries
        CacheContentsBytes1:
          type: string
          description: "0"
        CacheContentsBytes2:
          type: string
          description: 0.0%
        RawInputBytes:
          type: string
          description: 11.2 MB
        RawOutputBytes:
          type: string
          description: 16.6 MB
        RawInputBytesSec:
          type: string
          description: 6.75 kbps
        RawOutputBytesSec:
          type: string
          description: 4.86 kbps
        ContentCompression:
          type: string
          description: 0%
        UploadContentCompression:
          type: string
          description: 0%
        UploadContentUncompressed:
          type: string
          description: "0"
        UploadContentCompressed:
          type: string
          description: "0"
        ContentUncompressed:
          type: string
          description: "0"
        ContentCompressed:
          type: string
          description: "0"
        OverallCompression:
          type: string
          description: 0%
        UploadOverallCompression:
          type: string
          description: 0%
        InstantaneousPercent:
          type: string
          description: 1%
        OverallUncompressed:
          type: string
          description: "0"
        UploadOverallUncompressed:
          type: string
          description: "0"
        InstantaneousMbpsIn:
          type: string
          description: 0.00 Mbps (data)
        OverallCompressed:
          type: string
          description: "0"
        OverallCompressedCache:
          type: string
          description: "0"
        InstantaneousMbpsOut:
          type: string
          description: 0.00 Mbps (data)
        InstantaneousMbpsCache:
          type: string
          description: 0.00 Mbps (data)
        InstantaneousMbpsTotal:
          type: string
          description: 0.00 Mbps (data)
        HitCount:
          type: string
          description: "0"
        InstantaneousHits:
          type: string
          description: "0"
        OverallConnections:
          type: string
          description: "0"
        InstantaneousConnections:
          type: string
          description: "0"
        InstantaneousServerConnections:
          type: string
          description: "0"
        MaxConnections:
          type: string
          description: "0"
        CurrentConnections:
          type: string
          description: "0"
        TotalEntries:
          type: string
          description: "0"
        AllowedEntries:
          type: string
          description: "0"
        NewEntries:
          type: string
          description: "0"
        RevalidatedEntries:
          type: string
          description: "0"
        ExpiredEntries:
          type: string
          description: "0"
        DeletedEntries:
          type: string
          description: "0"
        PageTitle:
          type: string
          description: ALB-X
        LowConnectionsUsed:
          type: string
          description: "0"
        LowConnectionsFree:
          type: string
          description: "0"
        MedConnectionsUsed:
          type: string
          description: "0"
        MedConnectionsFree:
          type: string
          description: "0"
        HighConnectionsUsed:
          type: string
          description: "0"
        HighConnectionsFree:
          type: string
          description: "0"
        LowMemoryUsed:
          type: string
          description: "0"
        LowMemoryFree:
          type: string
          description: ALB-X
        MedMemoryUsed:
          type: string
          description: "0"
        MedMemoryFree:
          type: string
          description: "0"
        HighMemoryUsed:
          type: string
          description: "0"
        HighMemoryFree:
          type: string
          description: "0"
        LowAverageBufFillSize:
          type: string
          description: "0"
        MedAverageBufFillSize:
          type: string
          description: "0"
        HighAverageBufFillSize:
          type: string
          description: "0"
        PercentLowConnections:
          type: string
          description: "0"
        PercentMedConnections:
          type: string
          description: "0"
        PercentHighConnections:
          type: string
          description: "0"
        PercentLowMemory:
          type: string
          description: "0"
        PercentMedMemory:
          type: string
          description: "0"
        PercentHighMemory:
          type: string
          description: "0"
      example:
        CurrentConnections: CurrentConnections
        StatusText: StatusText
        HitCount: HitCount
        Memory: Memory
        FromServerBytes1: FromServerBytes1
        CPU: CPU
        InstantaneousPercent: InstantaneousPercent
        GUISTATUS: GUISTATUS
        GraphMemory: GraphMemory
        FromServerBytes2: FromServerBytes2
        InstantaneousConnections: InstantaneousConnections
        FromCacheHits1: FromCacheHits1
        RawInputBytes: RawInputBytes
        FromCacheHits2: FromCacheHits2
        ContentCompressed: ContentCompressed
        OverallCompressed: OverallCompressed
        RawOutputBytesSec: RawOutputBytesSec
        FromServerHits2: FromServerHits2
        FromServerHits1: FromServerHits1
        InstantaneousHits: InstantaneousHits
        Disk: Disk
        InstantaneousMbpsCache: InstantaneousMbpsCache
        UploadContentCompressed: UploadContentCompressed
        UploadContentUncompressed: UploadContentUncompressed
        OverallCompression: OverallCompression
        OverallConnections: OverallConnections
        MaxConnections: MaxConnections
        OverallUncompressed: OverallUncompressed
        PageTitle: PageTitle
        UploadOverallUncompressed: UploadOverallUncompressed
        InstantaneousMbpsTotal: InstantaneousMbpsTotal
        CacheContentsBytes2: CacheContentsBytes2
        CacheContentsBytes1: CacheContentsBytes1
        RawOutputBytes: RawOutputBytes
        ContentCompression: ContentCompression
        FromCacheBytes1: FromCacheBytes1
        OverallCompressedCache: OverallCompressedCache
        FromCacheBytes2: FromCacheBytes2
        ContentUncompressed: ContentUncompressed
        success: success
        RawInputBytesSec: RawInputBytesSec
        UploadOverallCompression: UploadOverallCompression
        StatusImage: StatusImage
        CacheContentsHits: CacheContentsHits
        InstantaneousMbpsIn: InstantaneousMbpsIn
        UploadContentCompression: UploadContentCompression
        InstantaneousServerConnections: InstantaneousServerConnections
        InstantaneousMbpsOut: InstantaneousMbpsOut
        TotalEntries: TotalEntries
        AllowedEntries: AllowedEntries
        NewEntries: NewEntries
        RevalidatedEntries: RevalidatedEntries
        ExpiredEntries: ExpiredEntries
        DeletedEntries: DeletedEntries
        LowConnectionsUsed: "0"
        LowConnectionsFree: 5k
        MedConnectionsUsed: "0"
        MedConnectionsFree: 10k
        HighConnectionsUsed: "0"
        HighConnectionsFree: 10k
        LowMemoryUsed: "0"
        LowMemoryFree: 250MB
        MedMemoryUsed: "0"
        MedMemoryFree: 125MB
        HighMemoryUsed: "0"
        HighMemoryFree: 25MB
        LowAverageBufFillSize: "0"
        MedAverageBufFillSize: "0"
        HighAverageBufFillSize: "0"
        PercentLowConnections: "0"
        PercentMedConnections: "0"
        PercentHighConnections: "0"
        PercentLowMemory: "0"
        PercentMedMemory: "0"
        PercentHighMemory: "0"
    Setup_IPServices:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        FilterKeyword:
          type: string
          description: ""
        dataset:
          $ref: '#/components/schemas/Setup_IPServices_dataset'
      example:
        StatusText: StatusText
        success: success
        FilterKeyword: FilterKeyword
        StatusImage: StatusImage
        dataset:
          ipService:
            sId:
            - interfaceImagePath: interfaceImagePath
              conn: conn
              data: data
              cacheperc: cacheperc
              compress: compress
              rsStatusReason: rsStatusReason
              channelStatusReason: channelStatusReason
              pool: pool
              RowType: RowType
              VIPPort: VIPPort
              serviceName: serviceName
              realServerNotes: realServerNotes
              realServer: realServer
              rsImagePath: rsImagePath
              hitsecnew: hitsecnew
              channelImagePath: channelImagePath
              interfaceStatusReason: interfaceStatusReason
              reqsec: reqsec
            - interfaceImagePath: interfaceImagePath
              conn: conn
              data: data
              cacheperc: cacheperc
              compress: compress
              rsStatusReason: rsStatusReason
              channelStatusReason: channelStatusReason
              pool: pool
              RowType: RowType
              VIPPort: VIPPort
              serviceName: serviceName
              realServerNotes: realServerNotes
              realServer: realServer
              rsImagePath: rsImagePath
              hitsecnew: hitsecnew
              channelImagePath: channelImagePath
              interfaceStatusReason: interfaceStatusReason
              reqsec: reqsec
    StatusData_row:
      type: object
      properties:
        RowType:
          type: string
          description: SubTotal
        interfaceImagePath:
          type: string
          description: images/jnpsStateErrorIP.gif
        interfaceStatusReason:
          type: string
          description: Real Servers unreachable
        channelImagePath:
          type: string
          description: images/jnpsStateErrorIP.gif
        channelStatusReason:
          type: string
          description: Real Servers unreachable
        serviceName:
          type: string
          description: ""
        VIPPort:
          type: string
          description: 34.5.4.3:342
        hitsecnew:
          type: string
          description: "0"
        cacheperc:
          type: string
          description: "0"
        compress:
          type: string
          description: "0"
        rsImagePath:
          type: string
          description: images/jnpsStateErrorIP.gif
        rsStatusReason:
          type: string
          description: Real Server unreachable
        realServer:
          type: string
          description: 23.4.3.23:342
        realServerNotes:
          type: string
          description: ""
        conn:
          type: string
          description: "0"
        data:
          type: string
          description: "0"
        reqsec:
          type: string
          description: "0"
        SeriesDataConn:
          type: string
          description: "0"
        SeriesDataDat:
          type: string
          description: "0"
        SeriesDataReq:
          type: string
          description: "0"
        pool:
          type: string
          description: "0"
      example:
        interfaceImagePath: interfaceImagePath
        conn: conn
        data: data
        cacheperc: cacheperc
        compress: compress
        rsStatusReason: rsStatusReason
        channelStatusReason: channelStatusReason
        pool: pool
        RowType: RowType
        VIPPort: VIPPort
        serviceName: serviceName
        realServerNotes: realServerNotes
        realServer: realServer
        rsImagePath: rsImagePath
        hitsecnew: hitsecnew
        channelImagePath: channelImagePath
        interfaceStatusReason: interfaceStatusReason
        reqsec: reqsec
        SeriesDataConn: SeriesDataConn
        SeriesDataDat: SeriesDataDat
        SeriesDataReq: SeriesDataReq
    Setup_IPServicesLayout:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        layoutCheck:
          type: string
          description: "1"
        dataset:
          $ref: '#/components/schemas/Setup_IPServicesLayout_dataset'
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        layoutCheck: layoutCheck
        dataset:
          columns:
          - width: width
            id: id
          - width: width
            id: id
    Statuscolumns_row:
      type: object
      properties:
        id:
          type: string
          description: "1"
        width:
          type: string
          description: "33"
      example:
        width: width
        id: id
    statistics_reset:
      type: object
      properties:
        reset:
          type: string
          description: "ON"
      example:
        reset: reset
    Setup_IPServicesSave:
      type: array
      items:
        $ref: '#/components/schemas/StatusSave_row'
    StatusSave_row:
      type: object
      properties:
        id:
          type: string
          description: "1"
        layoutCheck:
          type: string
          description: "1"
        width:
          type: string
          description: "33"
    Troubleshooting_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        CaptureAdapterCombo:
          $ref: '#/components/schemas/Troubleshooting_Data_CaptureAdapterCombo'
        CaptureAdapter:
          type: string
          description: eth0
        CapturePackets:
          type: string
          description: "99978"
        CaptureTime:
          type: string
          description: "5"
        CaptureAddress:
          type: string
          description: 192.168.6.23
        CaptureLeft:
          type: string
          description: "-1"
        SupportFileCombo:
          $ref: '#/components/schemas/Troubleshooting_Data_SupportFileCombo'
      example:
        SupportFileCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        CaptureAdapterCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        CaptureLeft: CaptureLeft
        CaptureTime: CaptureTime
        StatusText: StatusText
        CaptureAddress: CaptureAddress
        success: success
        StatusImage: StatusImage
        CaptureAdapter: CaptureAdapter
        CapturePackets: CapturePackets
    CaptureAdapterCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: any
        value:
          type: string
          description: any
      example:
        id: id
        value: value
    SupportFileCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: "1"
        value:
          type: string
          description: 1 days
      example:
        id: id
        value: value
    Trouble_TraceDetail:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        AutoStopTime:
          type: string
          description: 01:45:20
        Nodes:
          type: string
          description: GUI
        AutoStopRecords:
          type: string
          description: "75"
        TracePath:
          type: string
          description: "1"
        TraceConnections:
          type: string
          description: "1"
        TraceCache:
          type: string
          description: "1"
        TraceData:
          type: string
          description: "1"
        ServerMonitor:
          type: string
          description: "0"
        MonitoringFault:
          type: string
          description: "1"
        Purpose:
          type: string
          description: string
        TraceStatus:
          type: string
          description: Start
        flightpathCombo:
          $ref: '#/components/schemas/Trouble_TraceDetail_flightpathCombo'
        List:
          type: array
          items:
            type: string
            description: full results can be obtained using download
      example:
        TraceConnections: TraceConnections
        MonitoringFault: MonitoringFault
        AutoStopRecords: AutoStopRecords
        StatusText: StatusText
        ServerMonitor: ServerMonitor
        Nodes: Nodes
        flightpathCombo:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        TracePath: TracePath
        success: success
        StatusImage: StatusImage
        TraceCache: TraceCache
        TraceData: TraceData
        AutoStopTime: AutoStopTime
        List:
        - List
        - List
        TraceStatus: TraceStatus
        Purpose: Purpose
    flightpathCombo_opt:
      type: object
      properties:
        id:
          type: string
          description: ""
        value:
          type: string
          description: ""
      example:
        id: id
        value: value
    Trouble_TraceClear:
      type: object
      properties:
        Purpose:
          type: string
          description: ""
      example:
        Purpose: Purpose
    Trouble_DownCapture:
      type: object
      properties:
        CaptureHidden:
          type: string
          description: ""
        Adapter:
          type: string
          description: eth0
        Packets:
          type: string
          description: "10"
        Duration:
          type: string
          description: "4"
        CaptureAddress:
          type: string
          description: CaptureAddress
      example:
        CaptureHidden: CaptureHidden
        Packets: Packets
        Adapter: Adapter
        Duration: Duration
        CaptureAddress: CaptureAddress
    Trouble_Ping:
      type: object
      properties:
        ipAddress:
          type: string
          description: 192.168.1.7
      example:
        ipAddress: ipAddress
    Trouble_PingResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: "true"
        StatusText:
          type: string
          description: Pinging...
        PingResult:
          type: string
          description: ""
        PingTempfile:
          type: string
          description: /tmp/pingresultsNKlIuy
      example:
        StatusText: StatusText
        PingResult: PingResult
        success: success
        StatusImage: StatusImage
        PingTempfile: PingTempfile
    Trouble_DownSupport:
      type: object
      properties:
        Days:
          type: string
          description: "7"
      example:
        Days: Days
    Trouble_SupportResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: success
        Process_ID:
          type: string
          description: "20438"
      example:
        Process_ID: Process_ID
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
    Trouble_Trace:
      type: object
      properties:
        AutoStopRecords:
          type: string
          description: "5000"
        AutoStopTime:
          type: string
          description: 00|15|00
        MonitoringFault:
          type: string
          description: "1"
        Nodes:
          type: string
          description: All IPs
        ServerMonitor:
          type: string
          description: "1"
        Start:
          type: string
          description: "true"
        TraceCache:
          type: string
          description: "1"
        TraceConnections:
          type: string
          description: "0"
        TraceData:
          type: string
          description: "1"
        TracePath:
          type: string
          description: "1"
      example:
        TracePath: TracePath
        TraceConnections: TraceConnections
        MonitoringFault: MonitoringFault
        AutoStopRecords: AutoStopRecords
        ServerMonitor: ServerMonitor
        Start: Start
        TraceCache: TraceCache
        TraceData: TraceData
        AutoStopTime: AutoStopTime
        Nodes: Nodes
    ping_results:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        PingResult:
          type: string
          description: get
        PingTempfile:
          type: string
          description: get
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        PingTempfile: PingTempfile
        PingResult: PingResult
    resultsAfterSupport_File:
      type: object
      properties:
        success:
          type: string
          description: "true"
        DownloadStatus:
          type: string
          description: Wait for Download
      example:
        success: success
        DownloadStatus: DownloadStatus
    Users_Data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        Members:
          $ref: '#/components/schemas/Users_Data_Members'
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        Members:
          dataset:
          - NewPassword: NewPassword
            UserName: UserName
            isGUIR: isGUIR
            isSSH: isSSH
            isGUIW: isGUIW
            isAddOn: isAddOn
            id: id
            isAdmin: isAdmin
            OldPassword: OldPassword
            isAPI: isAPI
            UserType: UserType
          - NewPassword: NewPassword
            UserName: UserName
            isGUIR: isGUIR
            isSSH: isSSH
            isGUIW: isGUIW
            isAddOn: isAddOn
            id: id
            isAdmin: isAdmin
            OldPassword: OldPassword
            isAPI: isAPI
            UserType: UserType
    UsersMembers_opt:
      type: object
      properties:
        id:
          type: string
          description: "1"
        UserType:
          type: string
          description: clusterlocal
        UserName:
          type: string
          description: admin
        OldPassword:
          type: string
          description: feff
        NewPassword:
          type: string
          description: ssfsa
        isAdmin:
          type: string
          description: "1"
        isGUIW:
          type: string
          description: "0"
        isGUIR:
          type: string
          description: "0"
        isSSH:
          type: string
          description: "0"
        isAPI:
          type: string
          description: "0"
        isAddOn:
          type: string
          description: "0"
      example:
        NewPassword: NewPassword
        UserName: UserName
        isGUIR: isGUIR
        isSSH: isSSH
        isGUIW: isGUIW
        isAddOn: isAddOn
        id: id
        isAdmin: isAdmin
        OldPassword: OldPassword
        isAPI: isAPI
        UserType: UserType
    Users_Logs:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/2light-hd.gif
        StatusText:
          type: string
          description: get
        Logs:
          type: array
          items:
            $ref: '#/components/schemas/UsersLogs_opt'
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        Logs:
        - Row: Row
        - Row: Row
    UsersLogs_opt:
      type: object
      properties:
        Row:
          type: string
          description: ""
      example:
        Row: Row
    Users_Add:
      type: object
      properties:
        NewPassword:
          type: string
          description: test123
        OldPassword:
          type: string
          description: ""
        UserName:
          type: string
          description: test
        isAPI:
          type: string
          description: "0"
        isAddOn:
          type: string
          description: "0"
        isAdmin:
          type: string
          description: "0"
        isGUIR:
          type: string
          description: "1"
        isGUIW:
          type: string
          description: "1"
        isSSH:
          type: string
          description: "0"
      example:
        NewPassword: NewPassword
        UserName: UserName
        isGUIR: isGUIR
        isSSH: isSSH
        isGUIW: isGUIW
        isAddOn: isAddOn
        isAdmin: isAdmin
        OldPassword: OldPassword
        isAPI: isAPI
    Users_Update:
      type: object
      properties:
        NewPassword:
          type: string
          description: test123
        OldPassword:
          type: string
          description: ""
        UserName:
          type: string
          description: test
        isAPI:
          type: string
          description: "0"
        isAddOn:
          type: string
          description: "0"
        isAdmin:
          type: string
          description: "0"
        isGUIR:
          type: string
          description: "1"
        isGUIW:
          type: string
          description: "1"
        isSSH:
          type: string
          description: "0"
      example:
        NewPassword: NewPassword
        UserName: UserName
        isGUIR: isGUIR
        isSSH: isSSH
        isGUIW: isGUIW
        isAddOn: isAddOn
        isAdmin: isAdmin
        OldPassword: OldPassword
        isAPI: isAPI
    Users_Delete:
      type: object
      properties:
        UserName:
          type: string
          description: TestUser
      example:
        UserName: UserName
    Users_Response:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: "true"
        StatusText:
          type: string
          description: Your changes have been applied/or Error text.
    GetWidget:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        ConfiguredWidgetsComboStore:
          $ref: '#/components/schemas/GetWidget_ConfiguredWidgetsComboStore'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Widgetsdata_opt'
      example:
        data:
        - Widget_Name: Widget_Name
          SectionName: SectionName
          PartID: PartID
        - Widget_Name: Widget_Name
          SectionName: SectionName
          PartID: PartID
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        ConfiguredWidgetsComboStore:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
    ConfiguredWidgets_opt:
      type: object
      properties:
        id:
          type: string
          description: Event-0
        value:
          type: string
          description: All Events
      example:
        id: id
        value: value
    Widgetsdata_opt:
      type: object
      properties:
        PartID:
          type: string
          description: System4
        SectionName:
          type: string
          description: System
        Widget_Name:
          type: string
          description: System Utilisation %
      example:
        Widget_Name: Widget_Name
        SectionName: SectionName
        PartID: PartID
    EditSysWidget:
      type: object
      properties:
        Section_Name:
          type: string
          description: System-System Utilisation
      example:
        Section_Name: Section_Name
    UpdateSysWidget:
      type: object
      properties:
        System_Name:
          type: string
          description: ""
        System_Type:
          type: string
          description: ""
        Update_Section_Name:
          type: string
          description: ""
      example:
        System_Type: System_Type
        Update_Section_Name: Update_Section_Name
        System_Name: System_Name
    UpdateEventWidget:
      type: object
      properties:
        DashboardEvent_Filter:
          type: string
          description: ""
        DashboardEvent_Name:
          type: string
          description: ""
        Update_Section_Name:
          type: string
          description: ""
      example:
        DashboardEvent_Filter: DashboardEvent_Filter
        DashboardEvent_Name: DashboardEvent_Name
        Update_Section_Name: Update_Section_Name
    UpdateIPStatusWidget:
      type: object
      properties:
        IPStatus_IP:
          type: string
          description: ""
        IPStatus_Layout:
          type: string
          description: ""
        IPStatus_Name:
          type: string
          description: ""
        Update_Section_Name:
          type: string
          description: ""
      example:
        IPStatus_Layout: IPStatus_Layout
        IPStatus_IP: IPStatus_IP
        Update_Section_Name: Update_Section_Name
        IPStatus_Name: IPStatus_Name
    UpdateIPServiceWidget:
      type: object
      properties:
        IPService_Columns:
          type: string
          description: ""
        IPService_Name:
          type: string
          description: ""
        IPService_Period:
          type: string
          description: ""
        IPService_Type:
          type: string
          description: ""
        IPService_VSRS:
          type: string
          description: ""
        Update_Section_Name:
          type: string
          description: ""
      example:
        IPService_Columns: IPService_Columns
        IPService_Type: IPService_Type
        Update_Section_Name: Update_Section_Name
        IPService_VSRS: IPService_VSRS
        IPService_Name: IPService_Name
        IPService_Period: IPService_Period
    EditWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: System4
        System_Type:
          type: string
          description: "true,true,true"
      example:
        System_Type: System_Type
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        PartID: PartID
    EditEventResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: ""
        DashboardEvent_Filter:
          type: string
          description: ""
      example:
        DashboardEvent_Filter: DashboardEvent_Filter
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        PartID: PartID
    EditIPStatusResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        PartID:
          type: string
          description: ""
        IPStatus_Layout:
          type: string
          description: ""
        IPStatus_IP:
          type: string
          description: ""
      example:
        StatusText: StatusText
        success: success
        IPStatus_Layout: IPStatus_Layout
        StatusImage: StatusImage
        IPStatus_IP: IPStatus_IP
        PartID: PartID
    EditIPServiceResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: get
        widget1:
          $ref: '#/components/schemas/EditIPServiceResp_widget1'
        MaxValue:
          type: string
          description: "0"
      example:
        StatusText: StatusText
        success: success
        StatusImage: StatusImage
        MaxValue: MaxValue
        widget1:
          period: period
          systemData: systemData
          responseError: responseError
          timesUtc: timesUtc
          columns: columns
          timesServer: timesServer
          axesCount: axesCount
          periodEndNow: periodEndNow
          type: type
          dataset:
            VSRS:
            - RS:
              - ipPort: ipPort
              - ipPort: ipPort
              ipPort: ipPort
            - RS:
              - ipPort: ipPort
              - ipPort: ipPort
              ipPort: ipPort
          responseWarning: responseWarning
          periodEnd: periodEnd
    RemoveWidget:
      type: object
      properties:
        Remove_Section_Name:
          type: string
          description: Interface-interface1
      example:
        Remove_Section_Name: Remove_Section_Name
    RemoveWidgetResp:
      type: object
      properties:
        success:
          type: string
          description: "true"
        StatusImage:
          type: string
          description: images/light-hd_red.gif
        StatusText:
          type: string
          description: Your changes have been applied
        DashboardEvent_Name:
          type: string
        DashboardEvent_Filter:
          type: string
        IPService_Name:
          type: string
        IPService_Type:
          type: string
        IPService_VSRS:
          type: string
        IPService_Period:
          type: string
        IPService_Columns:
          type: string
        IPStatus_Layout:
          type: string
        System_Name:
          type: string
        System_Type:
          type: string
      example:
        DashboardEvent_Filter: DashboardEvent_Filter
        DashboardEvent_Name: DashboardEvent_Name
        StatusText: StatusText
        IPService_Type: IPService_Type
        IPService_VSRS: IPService_VSRS
        System_Name: System_Name
        IPService_Columns: IPService_Columns
        System_Type: System_Type
        success: success
        IPStatus_Layout: IPStatus_Layout
        StatusImage: StatusImage
        IPService_Name: IPService_Name
        IPService_Period: IPService_Period
    EventWidget:
      type: object
      properties:
        DashboardEvent_Filter:
          type: string
          description: ok
        DashboardEvent_Name:
          type: string
          description: event
        Section_Name:
          type: string
          description: Event
      example:
        DashboardEvent_Filter: DashboardEvent_Filter
        DashboardEvent_Name: DashboardEvent_Name
        Section_Name: Section_Name
    IPStatusWidget:
      type: object
      properties:
        IPStatus_IP:
          type: string
          description: ""
        IPStatus_Layout:
          type: string
          description: "33,30,107,140,45,67,63,30,140,80,51,100"
        IPStatus_Name:
          type: string
          description: status
        Section_Name:
          type: string
          description: IPStatus
      example:
        Section_Name: Section_Name
        IPStatus_Layout: IPStatus_Layout
        IPStatus_IP: IPStatus_IP
        IPStatus_Name: IPStatus_Name
    SystemWidget:
      type: object
      properties:
        Section_Name:
          type: string
          description: System
        System_Name:
          type: string
          description: sys
        System_Type:
          type: string
          description: "true,true,true"
      example:
        System_Type: System_Type
        Section_Name: Section_Name
        System_Name: System_Name
    IPServiceWidget:
      type: object
      properties:
        IPService_Columns:
          type: string
          description: "Average Bytes in,Average Bytes out,Average Bytes cached"
        IPService_Name:
          type: string
          description: ip4
        IPService_Period:
          type: string
          description: day
        IPService_Type:
          type: string
          description: VS
        IPService_VSRS:
          type: string
          description: 192.168.1.200:80
        Section_Name:
          type: string
          description: IPService
      example:
        IPService_Columns: IPService_Columns
        Section_Name: Section_Name
        IPService_Type: IPService_Type
        IPService_VSRS: IPService_VSRS
        IPService_Name: IPService_Name
        IPService_Period: IPService_Period
    InterfaceWidget:
      type: object
      properties:
        Interface_Name:
          type: string
          description: interface1
        Section_Name:
          type: string
          description: Interface
      example:
        Interface_Name: Interface_Name
        Section_Name: Section_Name
    AddOns_Data_AddOns_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/AddOnsdataset_row'
      example:
        row:
        - ExternalPort: ExternalPort
          isPaused: isPaused
          ParentImage: ParentImage
          ExternalAdapter: ExternalAdapter
          TimeStopped: TimeStopped
          AppName: AppName
          TimeStarted: TimeStarted
          ExternalIP: ExternalIP
          AddonImport: AddonImport
          AddOnGUI: AddOnGUI
          DockerImage: DockerImage
          id: id
          AddOnID: AddOnID
          sIcon: sIcon
          InternalIP: InternalIP
        - ExternalPort: ExternalPort
          isPaused: isPaused
          ParentImage: ParentImage
          ExternalAdapter: ExternalAdapter
          TimeStopped: TimeStopped
          AppName: AppName
          TimeStarted: TimeStarted
          ExternalIP: ExternalIP
          AddonImport: AddonImport
          AddOnGUI: AddOnGUI
          DockerImage: DockerImage
          id: id
          AddOnID: AddOnID
          sIcon: sIcon
          InternalIP: InternalIP
        isRestore: "false"
    AddOns_Data_AddOns:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/AddOns_Data_AddOns_dataset'
      example:
        dataset:
          row:
          - ExternalPort: ExternalPort
            isPaused: isPaused
            ParentImage: ParentImage
            ExternalAdapter: ExternalAdapter
            TimeStopped: TimeStopped
            AppName: AppName
            TimeStarted: TimeStarted
            ExternalIP: ExternalIP
            AddonImport: AddonImport
            AddOnGUI: AddOnGUI
            DockerImage: DockerImage
            id: id
            AddOnID: AddOnID
            sIcon: sIcon
            InternalIP: InternalIP
          - ExternalPort: ExternalPort
            isPaused: isPaused
            ParentImage: ParentImage
            ExternalAdapter: ExternalAdapter
            TimeStopped: TimeStopped
            AppName: AppName
            TimeStarted: TimeStarted
            ExternalIP: ExternalIP
            AddonImport: AddonImport
            AddOnGUI: AddOnGUI
            DockerImage: DockerImage
            id: id
            AddOnID: AddOnID
            sIcon: sIcon
            InternalIP: InternalIP
    Apps_Available_SmartFiles:
      type: object
      properties:
        Files:
          type: array
          items:
            $ref: '#/components/schemas/AppsSmartFiles_opt'
      example:
        Files:
        - Order_Id: Order_Id
          DockerImageName: DockerImageName
          Description: Description
          File_Name: File_Name
          Product_Id: Product_Id
          Certified: Certified
          Message_Digest: Message_Digest
          Vendor: Vendor
          ReleaseDate: ReleaseDate
          Name: Name
          Type: Type
          Version: Version
          Machine_Id: Machine_Id
          Icon: Icon
        - Order_Id: Order_Id
          DockerImageName: DockerImageName
          Description: Description
          File_Name: File_Name
          Product_Id: Product_Id
          Certified: Certified
          Message_Digest: Message_Digest
          Vendor: Vendor
          ReleaseDate: ReleaseDate
          Name: Name
          Type: Type
          Version: Version
          Machine_Id: Machine_Id
          Icon: Icon
    Authentication_Data_AuthServersCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/AuthServers_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Authentication_Data_AuthServersCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Authentication_Data_AuthServersCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Authentication_Data_AuthMethodCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/AuthMethod_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Authentication_Data_AuthMethodCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Authentication_Data_AuthMethodCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Authentication_Data_ClientAuthMethodsCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/ClientAuth_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Authentication_Data_ClientAuthMethodsCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Authentication_Data_ClientAuthMethodsCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Authentication_Data_ServerAuthMethodsCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/ServerAuth_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Authentication_Data_ServerAuthMethodsCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Authentication_Data_ServerAuthMethodsCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Authentication_Data_AuthFormsCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/AuthForms_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Authentication_Data_AuthFormsCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Authentication_Data_AuthFormsCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Authentication_Data_LoginFormatListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/LoginFormat_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Authentication_Data_LoginFormatListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Authentication_Data_LoginFormatListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Authentication_Data_PreAuthServerGrid_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/PreAuthServer_row'
      example:
        row:
        - Description: Description
          LoginFormat: LoginFormat
          Address: Address
          DeadTime: DeadTime
          Searchcondition: Searchcondition
          Port: Port
          Passphrase: Passphrase
          SearchBase: SearchBase
          id: id
          Domain: Domain
          AuthMethod: AuthMethod
          Name: Name
        - Description: Description
          LoginFormat: LoginFormat
          Address: Address
          DeadTime: DeadTime
          Searchcondition: Searchcondition
          Port: Port
          Passphrase: Passphrase
          SearchBase: SearchBase
          id: id
          Domain: Domain
          AuthMethod: AuthMethod
          Name: Name
    Authentication_Data_PreAuthServerGrid:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Authentication_Data_PreAuthServerGrid_dataset'
      example:
        dataset:
          row:
          - Description: Description
            LoginFormat: LoginFormat
            Address: Address
            DeadTime: DeadTime
            Searchcondition: Searchcondition
            Port: Port
            Passphrase: Passphrase
            SearchBase: SearchBase
            id: id
            Domain: Domain
            AuthMethod: AuthMethod
            Name: Name
          - Description: Description
            LoginFormat: LoginFormat
            Address: Address
            DeadTime: DeadTime
            Searchcondition: Searchcondition
            Port: Port
            Passphrase: Passphrase
            SearchBase: SearchBase
            id: id
            Domain: Domain
            AuthMethod: AuthMethod
            Name: Name
    Authentication_Data_PreAuthRuleGrid_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/PreAuthRule_row'
      example:
        row:
        - ClientAuthMethod: ClientAuthMethod
          Description: Description
          Message: Message
          RootDomain: RootDomain
          ServerAuthMethod: ServerAuthMethod
          Timeout: Timeout
          AuthServer: AuthServer
          id: id
          AuthForm: AuthForm
          Name: Name
        - ClientAuthMethod: ClientAuthMethod
          Description: Description
          Message: Message
          RootDomain: RootDomain
          ServerAuthMethod: ServerAuthMethod
          Timeout: Timeout
          AuthServer: AuthServer
          id: id
          AuthForm: AuthForm
          Name: Name
    Authentication_Data_PreAuthRuleGrid:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Authentication_Data_PreAuthRuleGrid_dataset'
      example:
        dataset:
          row:
          - ClientAuthMethod: ClientAuthMethod
            Description: Description
            Message: Message
            RootDomain: RootDomain
            ServerAuthMethod: ServerAuthMethod
            Timeout: Timeout
            AuthServer: AuthServer
            id: id
            AuthForm: AuthForm
            Name: Name
          - ClientAuthMethod: ClientAuthMethod
            Description: Description
            Message: Message
            RootDomain: RootDomain
            ServerAuthMethod: ServerAuthMethod
            Timeout: Timeout
            AuthServer: AuthServer
            id: id
            AuthForm: AuthForm
            Name: Name
    Config_Cache_CacheIncExcCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CacheInc_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Config_Cache_CacheIncExcCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Config_Cache_CacheIncExcCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Config_Cache_CacheRuleHelpTypeCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CacheRuleHelp_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Config_Cache_CacheRuleHelpTypeCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Config_Cache_CacheRuleHelpTypeCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Config_Cache_CacheOtherDomainCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            type: string
      example:
        option:
        - option
        - option
    Config_Cache_CacheOtherDomainCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Config_Cache_CacheOtherDomainCombo_options'
      example:
        options:
          option:
          - option
          - option
    Config_Cache_CacheDomainGrid_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/CacheDomain_row'
      example:
        row:
        - name: name
          rule: rule
          id: id
        - name: name
          rule: rule
          id: id
    Config_Cache_CacheDomainGrid:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Config_Cache_CacheDomainGrid_dataset'
      example:
        dataset:
          row:
          - name: name
            rule: rule
            id: id
          - name: name
            rule: rule
            id: id
    Config_Cache_CacheRulesGrid_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/CacheRules_row'
      example:
        row:
        - add: add
          cacheRuleText: cacheRuleText
          name: name
          description: description
          id: id
        - add: add
          cacheRuleText: cacheRuleText
          name: name
          description: description
          id: id
    Config_Cache_CacheRulesGrid:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Config_Cache_CacheRulesGrid_dataset'
      example:
        dataset:
          row:
          - add: add
            cacheRuleText: cacheRuleText
            name: name
            description: description
            id: id
          - add: add
            cacheRuleText: cacheRuleText
            name: name
            description: description
            id: id
    Config_Cache_CacheDomainCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CacheDomain_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Config_Cache_CacheDomainCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Config_Cache_CacheDomainCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Setup_Cluster_Members:
      type: object
      properties:
        dataset:
          type: array
          items:
            $ref: '#/components/schemas/ClusMembers_row'
      example:
        dataset:
        - clustermember: clustermember
          channelStatusReason: channelStatusReason
          id: id
          status: status
        - clustermember: clustermember
          channelStatusReason: channelStatusReason
          id: id
          status: status
    Setup_Cluster_UnPartenered:
      type: object
      properties:
        dataset:
          type: string
          description: ""
      example:
        dataset: dataset
    Configuration_Response_SmartFiles:
      type: object
      properties:
        Files:
          type: array
          items:
            $ref: '#/components/schemas/Configuration_Response_opt'
      example:
        Files:
        - Order_Id: Order_Id
          DockerImageName: DockerImageName
          Description: Description
          File_Name: File_Name
          Product_Id: Product_Id
          Certified: Certified
          Message_Digest: Message_Digest
          Vendor: Vendor
          ReleaseDate: ReleaseDate
          Name: Name
          Type: Type
          Version: Version
          Machine_Id: Machine_Id
          Icon: Icon
        - Order_Id: Order_Id
          DockerImageName: DockerImageName
          Description: Description
          File_Name: File_Name
          Product_Id: Product_Id
          Certified: Certified
          Message_Digest: Message_Digest
          Vendor: Vendor
          ReleaseDate: ReleaseDate
          Name: Name
          Type: Type
          Version: Version
          Machine_Id: Machine_Id
          Icon: Icon
    GetDashboard_ConfiguredWidgetsComboStore_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/ConfWid_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    GetDashboard_ConfiguredWidgetsComboStore:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/GetDashboard_ConfiguredWidgetsComboStore_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Setup_SetTime_NTPTimeZoneCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/NTPTimeZone_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Setup_SetTime_NTPTimeZoneCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Setup_SetTime_NTPTimeZoneCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Setup_SetTime_NTPTypeCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/NTPType_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Setup_SetTime_NTPTypeCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Setup_SetTime_NTPTypeCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Emailevents_All_SecurityCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/SecurityCombo_row'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Emailevents_All_SecurityCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Emailevents_All_SecurityCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    flightPath_RespData_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/flightdataset_row'
      example:
        row:
        - fId: fId
          flightPathInUse: flightPathInUse
          flightPathDesc: flightPathDesc
          DiagnosticTracing: DiagnosticTracing
          values:
            valuesId:
            - vId: vId
              variable: variable
              source: source
              detail: detail
              valValue: valValue
            - vId: vId
              variable: variable
              source: source
              detail: detail
              valValue: valValue
          flightPathName: flightPathName
          conditions:
            conditionId:
            - condition: condition
              match: match
              sense: sense
              condValue: condValue
              check: check
              cId: cId
            - condition: condition
              match: match
              sense: sense
              condValue: condValue
              check: check
              cId: cId
          actions:
            actionId:
            - data: data
              action: action
              aId: aId
              target: target
            - data: data
              action: action
              aId: aId
              target: target
        - fId: fId
          flightPathInUse: flightPathInUse
          flightPathDesc: flightPathDesc
          DiagnosticTracing: DiagnosticTracing
          values:
            valuesId:
            - vId: vId
              variable: variable
              source: source
              detail: detail
              valValue: valValue
            - vId: vId
              variable: variable
              source: source
              detail: detail
              valValue: valValue
          flightPathName: flightPathName
          conditions:
            conditionId:
            - condition: condition
              match: match
              sense: sense
              condValue: condValue
              check: check
              cId: cId
            - condition: condition
              match: match
              sense: sense
              condValue: condValue
              check: check
              cId: cId
          actions:
            actionId:
            - data: data
              action: action
              aId: aId
              target: target
            - data: data
              action: action
              aId: aId
              target: target
    flightdataset_row_conditions:
      type: object
      properties:
        conditionId:
          type: array
          items:
            $ref: '#/components/schemas/conditions_row'
      example:
        conditionId:
        - condition: condition
          match: match
          sense: sense
          condValue: condValue
          check: check
          cId: cId
        - condition: condition
          match: match
          sense: sense
          condValue: condValue
          check: check
          cId: cId
    flightdataset_row_values:
      type: object
      properties:
        valuesId:
          type: array
          items:
            $ref: '#/components/schemas/values_row'
      example:
        valuesId:
        - vId: vId
          variable: variable
          source: source
          detail: detail
          valValue: valValue
        - vId: vId
          variable: variable
          source: source
          detail: detail
          valValue: valValue
    flightdataset_row_actions:
      type: object
      properties:
        actionId:
          type: array
          items:
            $ref: '#/components/schemas/actions_row'
      example:
        actionId:
        - data: data
          action: action
          aId: aId
          target: target
        - data: data
          action: action
          aId: aId
          target: target
    flightPath_Combo_CountryCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CountryCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    flightPath_Combo_CountryCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/flightPath_Combo_CountryCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    flightPath_Combo_SenseCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/SenseCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    flightPath_Combo_SenseCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/flightPath_Combo_SenseCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    flightPath_Combo_CheckCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CheckCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    flightPath_Combo_CheckCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/flightPath_Combo_CheckCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    flightPath_Combo_SourceCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/SourceCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    flightPath_Combo_SourceCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/flightPath_Combo_SourceCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    flightPath_Combo_ActionCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/ActionCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    flightPath_Combo_ActionCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/flightPath_Combo_ActionCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    flightPath_Combo_ConValueCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/ConValueCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    flightPath_Combo_ConValueCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/flightPath_Combo_ConValueCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    flightPath_Combo_MatchCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/MatchCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    flightPath_Combo_MatchCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/flightPath_Combo_MatchCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    flightPath_Combo_conditionCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/conditionCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    flightPath_Combo_conditionCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/flightPath_Combo_conditionCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    flightPath_Combo_languageCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/languageCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    flightPath_Combo_languageCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/flightPath_Combo_languageCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    flightPath_Combo_AuthRuleCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/AuthRuleCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    flightPath_Combo_AuthRuleCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/flightPath_Combo_AuthRuleCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    GlobSetting_Data_GlobalSettingListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/GlobalSetting_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    GlobSetting_Data_GlobalSettingListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/GlobSetting_Data_GlobalSettingListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    History_Data_dataset_CRRD_DeleteName_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CRRD_DeleteName_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    History_Data_dataset_CRRD_DeleteName:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/History_Data_dataset_CRRD_DeleteName_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    History_Data_dataset_CRRD_RestoreName_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CRRD_RestoreName_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    History_Data_dataset_CRRD_RestoreName:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/History_Data_dataset_CRRD_RestoreName_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    History_Data_dataset:
      type: object
      properties:
        CRRD_Enabled:
          type: string
          description: "1"
        CRRD_Interval:
          type: string
          description: "1"
        CRRD_Last:
          type: string
          description: "Fri, 13 Feb 2015 11:47:25 GMT"
        CRRD_LastRed:
          type: string
          description: ""
        CRRD_LastMsg:
          type: string
          description: ""
        CRRD_BackupName:
          type: string
          description: ""
        CRRD_DeleteName:
          $ref: '#/components/schemas/History_Data_dataset_CRRD_DeleteName'
        CRRD_RestoreName:
          $ref: '#/components/schemas/History_Data_dataset_CRRD_RestoreName'
        CRRD_HasCurrent:
          type: string
          description: "1"
      example:
        CRRD_LastRed: CRRD_LastRed
        CRRD_LastMsg: CRRD_LastMsg
        CRRD_RestoreName:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
        CRRD_HasCurrent: CRRD_HasCurrent
        CRRD_Last: CRRD_Last
        CRRD_Interval: CRRD_Interval
        CRRD_Enabled: CRRD_Enabled
        CRRD_BackupName: CRRD_BackupName
        CRRD_DeleteName:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
    IPServices_data_dataset:
      type: object
      properties:
        ipService:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/ipService'
      example:
        ipService:
        - - serviceType: serviceType
            ConnectionTimeout: ConnectionTimeout
            ChannelKey: ChannelKey
            connectionPoolSize: connectionPoolSize
            InCount: InCount
            SecurityLog: SecurityLog
            InterfaceID: InterfaceID
            CipherName: CipherName
            OutCount: OutCount
            offlinonfailure: offlinonfailure
            ipAddr: ipAddr
            enableConnectionPool: enableConnectionPool
            serverMonitoring: serverMonitoring
            sslRenegotiation: sslRenegotiation
            acceleration: acceleration
            sslCertificate: sslCertificate
            SNIDefaultCertificateName: SNIDefaultCertificateName
            sslResumption: sslResumption
            connectivity: connectivity
            primaryChecked: primaryChecked
            MaskState: MaskState
            channelImagePath: channelImagePath
            interfaceStatusReason: interfaceStatusReason
            InterfaceKey: InterfaceKey
            interfaceImagePath: interfaceImagePath
            contentServer:
              CServerId:
              - WeightFactor: WeightFactor
                CSActivity: CSActivity
                CSNotes: CSNotes
                statusReason: statusReason
                CSIPAddr: CSIPAddr
                imagePath: imagePath
                WeightFactorCalculated: WeightFactorCalculated
                serverKey: serverKey
                CSPort: CSPort
                cId: cId
              - WeightFactor: WeightFactor
                CSActivity: CSActivity
                CSNotes: CSNotes
                statusReason: statusReason
                CSIPAddr: CSIPAddr
                imagePath: imagePath
                WeightFactorCalculated: WeightFactorCalculated
                serverKey: serverKey
                CSPort: CSPort
                cId: cId
            localPortEnabledChecked: localPortEnabledChecked
            channelStatusReason: channelStatusReason
            contentServerGroupName: contentServerGroupName
            flightPath:
              flightPathId:
              - fId: "0"
                flightPathSelected: "On"
                Name: HTML Extension
              - fId: "0"
                flightPathSelected: "On"
                Name: HTML Extension
            ChannelID: ChannelID
            subnetMask: subnetMask
            serviceName: serviceName
            monitoringTimeout: monitoringTimeout
            sId: sId
            port: port
            cachingRule: cachingRule
            monitoringInterval: monitoringInterval
            maxConn: maxConn
            loadBalancingPolicy: loadBalancingPolicy
            sslClientCertificate: sslClientCertificate
          - serviceType: serviceType
            ConnectionTimeout: ConnectionTimeout
            ChannelKey: ChannelKey
            connectionPoolSize: connectionPoolSize
            InCount: InCount
            SecurityLog: SecurityLog
            InterfaceID: InterfaceID
            CipherName: CipherName
            OutCount: OutCount
            ipAddr: ipAddr
            enableConnectionPool: enableConnectionPool
            serverMonitoring: serverMonitoring
            sslRenegotiation: sslRenegotiation
            acceleration: acceleration
            sslCertificate: sslCertificate
            SNIDefaultCertificateName: SNIDefaultCertificateName
            sslResumption: sslResumption
            connectivity: connectivity
            primaryChecked: primaryChecked
            MaskState: MaskState
            channelImagePath: channelImagePath
            interfaceStatusReason: interfaceStatusReason
            InterfaceKey: InterfaceKey
            interfaceImagePath: interfaceImagePath
            contentServer:
              CServerId:
              - WeightFactor: WeightFactor
                CSActivity: CSActivity
                CSNotes: CSNotes
                statusReason: statusReason
                CSIPAddr: CSIPAddr
                imagePath: imagePath
                WeightFactorCalculated: WeightFactorCalculated
                serverKey: serverKey
                CSPort: CSPort
                cId: cId
              - WeightFactor: WeightFactor
                CSActivity: CSActivity
                CSNotes: CSNotes
                statusReason: statusReason
                CSIPAddr: CSIPAddr
                imagePath: imagePath
                WeightFactorCalculated: WeightFactorCalculated
                serverKey: serverKey
                CSPort: CSPort
                cId: cId
            localPortEnabledChecked: localPortEnabledChecked
            channelStatusReason: channelStatusReason
            contentServerGroupName: contentServerGroupName
            flightPath:
              flightPathId:
              - fId: "0"
                flightPathSelected: "On"
                Name: HTML Extension
              - fId: "0"
                flightPathSelected: "On"
                Name: HTML Extension
            ChannelID: ChannelID
            subnetMask: subnetMask
            serviceName: serviceName
            monitoringTimeout: monitoringTimeout
            sId: sId
            port: port
            cachingRule: cachingRule
            monitoringInterval: monitoringInterval
            maxConn: maxConn
            loadBalancingPolicy: loadBalancingPolicy
            sslClientCertificate: sslClientCertificate
        - - serviceType: serviceType
            ConnectionTimeout: ConnectionTimeout
            ChannelKey: ChannelKey
            connectionPoolSize: connectionPoolSize
            InCount: InCount
            SecurityLog: SecurityLog
            InterfaceID: InterfaceID
            CipherName: CipherName
            OutCount: OutCount
            ipAddr: ipAddr
            enableConnectionPool: enableConnectionPool
            serverMonitoring: serverMonitoring
            sslRenegotiation: sslRenegotiation
            acceleration: acceleration
            sslCertificate: sslCertificate
            SNIDefaultCertificateName: SNIDefaultCertificateName
            sslResumption: sslResumption
            connectivity: connectivity
            primaryChecked: primaryChecked
            MaskState: MaskState
            channelImagePath: channelImagePath
            interfaceStatusReason: interfaceStatusReason
            InterfaceKey: InterfaceKey
            interfaceImagePath: interfaceImagePath
            contentServer:
              CServerId:
              - WeightFactor: WeightFactor
                CSActivity: CSActivity
                CSNotes: CSNotes
                statusReason: statusReason
                CSIPAddr: CSIPAddr
                imagePath: imagePath
                WeightFactorCalculated: WeightFactorCalculated
                serverKey: serverKey
                CSPort: CSPort
                cId: cId
              - WeightFactor: WeightFactor
                CSActivity: CSActivity
                CSNotes: CSNotes
                statusReason: statusReason
                CSIPAddr: CSIPAddr
                imagePath: imagePath
                WeightFactorCalculated: WeightFactorCalculated
                serverKey: serverKey
                CSPort: CSPort
                cId: cId
            localPortEnabledChecked: localPortEnabledChecked
            channelStatusReason: channelStatusReason
            contentServerGroupName: contentServerGroupName
            flightPath:
              flightPathId:
              - fId: "0"
                flightPathSelected: "On"
                Name: HTML Extension
              - fId: "0"
                flightPathSelected: "On"
                Name: HTML Extension
            ChannelID: ChannelID
            subnetMask: subnetMask
            serviceName: serviceName
            monitoringTimeout: monitoringTimeout
            sId: sId
            port: port
            cachingRule: cachingRule
            monitoringInterval: monitoringInterval
            maxConn: maxConn
            loadBalancingPolicy: loadBalancingPolicy
            sslClientCertificate: sslClientCertificate
          - serviceType: serviceType
            ConnectionTimeout: ConnectionTimeout
            ChannelKey: ChannelKey
            connectionPoolSize: connectionPoolSize
            InCount: InCount
            SecurityLog: SecurityLog
            InterfaceID: InterfaceID
            CipherName: CipherName
            OutCount: OutCount
            ipAddr: ipAddr
            enableConnectionPool: enableConnectionPool
            serverMonitoring: serverMonitoring
            sslRenegotiation: sslRenegotiation
            acceleration: acceleration
            sslCertificate: sslCertificate
            SNIDefaultCertificateName: SNIDefaultCertificateName
            sslResumption: sslResumption
            connectivity: connectivity
            primaryChecked: primaryChecked
            MaskState: MaskState
            channelImagePath: channelImagePath
            interfaceStatusReason: interfaceStatusReason
            InterfaceKey: InterfaceKey
            interfaceImagePath: interfaceImagePath
            contentServer:
              CServerId:
              - WeightFactor: WeightFactor
                CSActivity: CSActivity
                CSNotes: CSNotes
                statusReason: statusReason
                CSIPAddr: CSIPAddr
                imagePath: imagePath
                WeightFactorCalculated: WeightFactorCalculated
                serverKey: serverKey
                CSPort: CSPort
                cId: cId
              - WeightFactor: WeightFactor
                CSActivity: CSActivity
                CSNotes: CSNotes
                statusReason: statusReason
                CSIPAddr: CSIPAddr
                imagePath: imagePath
                WeightFactorCalculated: WeightFactorCalculated
                serverKey: serverKey
                CSPort: CSPort
                cId: cId
            localPortEnabledChecked: localPortEnabledChecked
            channelStatusReason: channelStatusReason
            contentServerGroupName: contentServerGroupName
            flightPath:
              flightPathId:
              - fId: "0"
                flightPathSelected: "On"
                Name: HTML Extension
              - fId: "0"
                flightPathSelected: "On"
                Name: HTML Extension
            ChannelID: ChannelID
            subnetMask: subnetMask
            serviceName: serviceName
            monitoringTimeout: monitoringTimeout
            sId: sId
            port: port
            cachingRule: cachingRule
            monitoringInterval: monitoringInterval
            maxConn: maxConn
            loadBalancingPolicy: loadBalancingPolicy
            sslClientCertificate: sslClientCertificate
    IPServices_data:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/IPServices_data_dataset'
      example:
        dataset:
          ipService:
          - - serviceType: serviceType
              ConnectionTimeout: ConnectionTimeout
              ChannelKey: ChannelKey
              connectionPoolSize: connectionPoolSize
              InCount: InCount
              SecurityLog: SecurityLog
              InterfaceID: InterfaceID
              CipherName: CipherName
              OutCount: OutCount
              offlinonfailure: offlinonfailure
              ipAddr: ipAddr
              enableConnectionPool: enableConnectionPool
              serverMonitoring: serverMonitoring
              sslRenegotiation: sslRenegotiation
              acceleration: acceleration
              sslCertificate: sslCertificate
              SNIDefaultCertificateName: SNIDefaultCertificateName
              sslResumption: sslResumption
              connectivity: connectivity
              primaryChecked: primaryChecked
              MaskState: MaskState
              channelImagePath: channelImagePath
              interfaceStatusReason: interfaceStatusReason
              InterfaceKey: InterfaceKey
              interfaceImagePath: interfaceImagePath
              contentServer:
                CServerId:
                - WeightFactor: WeightFactor
                  CSActivity: CSActivity
                  CSNotes: CSNotes
                  statusReason: statusReason
                  CSIPAddr: CSIPAddr
                  imagePath: imagePath
                  WeightFactorCalculated: WeightFactorCalculated
                  serverKey: serverKey
                  CSPort: CSPort
                  cId: cId
                - WeightFactor: WeightFactor
                  CSActivity: CSActivity
                  CSNotes: CSNotes
                  statusReason: statusReason
                  CSIPAddr: CSIPAddr
                  imagePath: imagePath
                  WeightFactorCalculated: WeightFactorCalculated
                  serverKey: serverKey
                  CSPort: CSPort
                  cId: cId
              localPortEnabledChecked: localPortEnabledChecked
              channelStatusReason: channelStatusReason
              contentServerGroupName: contentServerGroupName
              flightPath:
                flightPathId:
                - fId: "0"
                  flightPathSelected: "On"
                  Name: HTML Extension
                - fId: "0"
                  flightPathSelected: "On"
                  Name: HTML Extension
              ChannelID: ChannelID
              subnetMask: subnetMask
              serviceName: serviceName
              monitoringTimeout: monitoringTimeout
              sId: sId
              port: port
              cachingRule: cachingRule
              monitoringInterval: monitoringInterval
              maxConn: maxConn
              loadBalancingPolicy: loadBalancingPolicy
              sslClientCertificate: sslClientCertificate
            - serviceType: serviceType
              ConnectionTimeout: ConnectionTimeout
              ChannelKey: ChannelKey
              connectionPoolSize: connectionPoolSize
              InCount: InCount
              SecurityLog: SecurityLog
              InterfaceID: InterfaceID
              CipherName: CipherName
              OutCount: OutCount
              ipAddr: ipAddr
              enableConnectionPool: enableConnectionPool
              serverMonitoring: serverMonitoring
              sslRenegotiation: sslRenegotiation
              acceleration: acceleration
              sslCertificate: sslCertificate
              SNIDefaultCertificateName: SNIDefaultCertificateName
              sslResumption: sslResumption
              connectivity: connectivity
              primaryChecked: primaryChecked
              MaskState: MaskState
              channelImagePath: channelImagePath
              interfaceStatusReason: interfaceStatusReason
              InterfaceKey: InterfaceKey
              interfaceImagePath: interfaceImagePath
              contentServer:
                CServerId:
                - WeightFactor: WeightFactor
                  CSActivity: CSActivity
                  CSNotes: CSNotes
                  statusReason: statusReason
                  CSIPAddr: CSIPAddr
                  imagePath: imagePath
                  WeightFactorCalculated: WeightFactorCalculated
                  serverKey: serverKey
                  CSPort: CSPort
                  cId: cId
                - WeightFactor: WeightFactor
                  CSActivity: CSActivity
                  CSNotes: CSNotes
                  statusReason: statusReason
                  CSIPAddr: CSIPAddr
                  imagePath: imagePath
                  WeightFactorCalculated: WeightFactorCalculated
                  serverKey: serverKey
                  CSPort: CSPort
                  cId: cId
              localPortEnabledChecked: localPortEnabledChecked
              channelStatusReason: channelStatusReason
              contentServerGroupName: contentServerGroupName
              flightPath:
                flightPathId:
                - fId: "0"
                  flightPathSelected: "On"
                  Name: HTML Extension
                - fId: "0"
                  flightPathSelected: "On"
                  Name: HTML Extension
              ChannelID: ChannelID
              subnetMask: subnetMask
              serviceName: serviceName
              monitoringTimeout: monitoringTimeout
              sId: sId
              port: port
              cachingRule: cachingRule
              monitoringInterval: monitoringInterval
              maxConn: maxConn
              loadBalancingPolicy: loadBalancingPolicy
              sslClientCertificate: sslClientCertificate
          - - serviceType: serviceType
              ConnectionTimeout: ConnectionTimeout
              ChannelKey: ChannelKey
              connectionPoolSize: connectionPoolSize
              InCount: InCount
              SecurityLog: SecurityLog
              InterfaceID: InterfaceID
              CipherName: CipherName
              OutCount: OutCount
              ipAddr: ipAddr
              enableConnectionPool: enableConnectionPool
              serverMonitoring: serverMonitoring
              sslRenegotiation: sslRenegotiation
              acceleration: acceleration
              sslCertificate: sslCertificate
              SNIDefaultCertificateName: SNIDefaultCertificateName
              sslResumption: sslResumption
              connectivity: connectivity
              primaryChecked: primaryChecked
              MaskState: MaskState
              channelImagePath: channelImagePath
              interfaceStatusReason: interfaceStatusReason
              InterfaceKey: InterfaceKey
              interfaceImagePath: interfaceImagePath
              contentServer:
                CServerId:
                - WeightFactor: WeightFactor
                  CSActivity: CSActivity
                  CSNotes: CSNotes
                  statusReason: statusReason
                  CSIPAddr: CSIPAddr
                  imagePath: imagePath
                  WeightFactorCalculated: WeightFactorCalculated
                  serverKey: serverKey
                  CSPort: CSPort
                  cId: cId
                - WeightFactor: WeightFactor
                  CSActivity: CSActivity
                  CSNotes: CSNotes
                  statusReason: statusReason
                  CSIPAddr: CSIPAddr
                  imagePath: imagePath
                  WeightFactorCalculated: WeightFactorCalculated
                  serverKey: serverKey
                  CSPort: CSPort
                  cId: cId
              localPortEnabledChecked: localPortEnabledChecked
              channelStatusReason: channelStatusReason
              contentServerGroupName: contentServerGroupName
              flightPath:
                flightPathId:
                - fId: "0"
                  flightPathSelected: "On"
                  Name: HTML Extension
                - fId: "0"
                  flightPathSelected: "On"
                  Name: HTML Extension
              ChannelID: ChannelID
              subnetMask: subnetMask
              serviceName: serviceName
              monitoringTimeout: monitoringTimeout
              sId: sId
              port: port
              cachingRule: cachingRule
              monitoringInterval: monitoringInterval
              maxConn: maxConn
              loadBalancingPolicy: loadBalancingPolicy
              sslClientCertificate: sslClientCertificate
            - serviceType: serviceType
              ConnectionTimeout: ConnectionTimeout
              ChannelKey: ChannelKey
              connectionPoolSize: connectionPoolSize
              InCount: InCount
              SecurityLog: SecurityLog
              InterfaceID: InterfaceID
              CipherName: CipherName
              OutCount: OutCount
              ipAddr: ipAddr
              enableConnectionPool: enableConnectionPool
              serverMonitoring: serverMonitoring
              sslRenegotiation: sslRenegotiation
              acceleration: acceleration
              sslCertificate: sslCertificate
              SNIDefaultCertificateName: SNIDefaultCertificateName
              sslResumption: sslResumption
              connectivity: connectivity
              primaryChecked: primaryChecked
              MaskState: MaskState
              channelImagePath: channelImagePath
              interfaceStatusReason: interfaceStatusReason
              InterfaceKey: InterfaceKey
              interfaceImagePath: interfaceImagePath
              contentServer:
                CServerId:
                - WeightFactor: WeightFactor
                  CSActivity: CSActivity
                  CSNotes: CSNotes
                  statusReason: statusReason
                  CSIPAddr: CSIPAddr
                  imagePath: imagePath
                  WeightFactorCalculated: WeightFactorCalculated
                  serverKey: serverKey
                  CSPort: CSPort
                  cId: cId
                - WeightFactor: WeightFactor
                  CSActivity: CSActivity
                  CSNotes: CSNotes
                  statusReason: statusReason
                  CSIPAddr: CSIPAddr
                  imagePath: imagePath
                  WeightFactorCalculated: WeightFactorCalculated
                  serverKey: serverKey
                  CSPort: CSPort
                  cId: cId
              localPortEnabledChecked: localPortEnabledChecked
              channelStatusReason: channelStatusReason
              contentServerGroupName: contentServerGroupName
              flightPath:
                flightPathId:
                - fId: "0"
                  flightPathSelected: "On"
                  Name: HTML Extension
                - fId: "0"
                  flightPathSelected: "On"
                  Name: HTML Extension
              ChannelID: ChannelID
              subnetMask: subnetMask
              serviceName: serviceName
              monitoringTimeout: monitoringTimeout
              sId: sId
              port: port
              cachingRule: cachingRule
              monitoringInterval: monitoringInterval
              maxConn: maxConn
              loadBalancingPolicy: loadBalancingPolicy
              sslClientCertificate: sslClientCertificate
    ipService_flightPath:
      type: object
      properties:
        flightPathId:
          type: array
          items:
            $ref: '#/components/schemas/flightPathId'
      example:
        flightPathId:
        - fId: "0"
          flightPathSelected: "On"
          Name: HTML Extension
        - fId: "0"
          flightPathSelected: "On"
          Name: HTML Extension
    ipService_contentServer:
      type: object
      properties:
        CServerId:
          type: array
          items:
            $ref: '#/components/schemas/CServerId'
      example:
        CServerId:
        - WeightFactor: WeightFactor
          CSActivity: CSActivity
          CSNotes: CSNotes
          statusReason: statusReason
          CSIPAddr: CSIPAddr
          imagePath: imagePath
          WeightFactorCalculated: WeightFactorCalculated
          serverKey: serverKey
          CSPort: CSPort
          cId: cId
        - WeightFactor: WeightFactor
          CSActivity: CSActivity
          CSNotes: CSNotes
          statusReason: statusReason
          CSIPAddr: CSIPAddr
          imagePath: imagePath
          WeightFactorCalculated: WeightFactorCalculated
          serverKey: serverKey
          CSPort: CSPort
          cId: cId
    IPServicescombo_ServiceTypeCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/TypeComboOne'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    IPServicescombo_ServiceTypeCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/IPServicescombo_ServiceTypeCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    IPServicescombo_SNICertificateListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/SNICertCombo'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    IPServicescombo_SNICertificateListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/IPServicescombo_SNICertificateListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    IPServicescombo_SSLRenegotiationString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/SSLRenegCombo'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    IPServicescombo_SSLRenegotiationString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/IPServicescombo_SSLRenegotiationString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    IPServicescombo_SecurityLogString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/SecurityCombo'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    IPServicescombo_SecurityLogString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/IPServicescombo_SecurityLogString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Licence_Data_data:
      type: object
      properties:
        success:
          type: string
          description: "true"
        IssuedTo:
          type: string
          description: jetNEXUS Evaluation Licence
        ContactPerson:
          type: string
          description: sales@jetnexus.com
        DateIssued:
          type: string
          description: 26 Apr 2012
        ServerRef:
          type: string
          description: ALB-X VA
        ALB:
          type: string
          description: 'Not licenced - Please contact jetNEXUS Ltd quoting Machine
            ID 0800 - 271 B- E752 '
        SSL:
          type: string
          description: 'Not licenced -Please contact jetNEXUS Ltd quoting Machine
            ID 0800 - 271 B - E752 '
        Cache:
          type: string
          description: 'Not licenced -Please contact jetNEXUS Ltd quoting Machine
            ID 0800 - 271 B - E752 '
        FlightPath:
          type: string
          description: 'Not licenced -Please contact jetNEXUS Ltd quoting Machine
            ID 0800- 271 B - E752 '
        JetSTREAM:
          type: string
          description: 'Not licenced -Please contact jetNEXUS Ltd quoting Machine
            ID 0800- 271 B - E752 '
        Interfaces:
          type: string
          description: 'Not licenced -Please contact jetNEXUS Ltd quoting Machine
            ID 0800- 271 B - E752 '
        RealServers:
          type: string
          description: 'Not licenced -Please contact jetNUS Ltdquoting Machine ID
            0800- 271 B - E752 '
        MachineID:
          type: string
          description: '0800 - 271 B - E752 '
        GLBLicense:
          type: string
          description: ""
        AuthLicense:
          type: string
          description: 'Permanent licence '
        FirewallLicense:
          type: string
          description: ""
        Throughput:
          type: string
          description: ""
        B2BLicense:
          type: string
          description: ""
        Layer4BaseLicense:
          type: string
          description: ""
        HttpBaseLicense:
          type: string
          description: ""
        ALB1:
          type: string
          description: '09 F5 - 1E0 A - FBB5 - AF03 '
        SSL1:
          type: string
          description: ""
        Cache1:
          type: string
          description: ""
        FlightPath1:
          type: string
          description: ""
        JetSTREAM1:
          type: string
          description: ""
        Interfaces1:
          type: string
          description: '07 C0 - B978 - C942 - 8 AA8 '
        RealServers1:
          type: string
          description: ""
        MachineID1:
          type: string
          description: '0800 - 2745 - 80 BF '
        GLBLicense1:
          type: string
          description: ""
        AuthLicense1:
          type: string
          description: '01 DD - 1 ABD - 9 FD1 - F446 '
        FirewallLicense1:
          type: string
          description: ""
        Throughput1:
          type: string
          description: ""
        B2BLicense1:
          type: string
          description: ""
        Layer4BaseLicense1:
          type: string
          description: ""
        HttpBaseLicense1:
          type: string
          description: ""
        UUID:
          type: string
          description: '5985 F176 - 0 DBF - 417 D - A62B - 614785505219 '
      example:
        Throughput1: Throughput1
        FlightPath1: FlightPath1
        ALB1: ALB1
        Throughput: Throughput
        B2BLicense: B2BLicense
        ContactPerson: ContactPerson
        FirewallLicense: FirewallLicense
        Interfaces1: Interfaces1
        Layer4BaseLicense: Layer4BaseLicense
        Cache1: Cache1
        RealServers: RealServers
        AuthLicense1: AuthLicense1
        IssuedTo: IssuedTo
        UUID: UUID
        ServerRef: ServerRef
        RealServers1: RealServers1
        AuthLicense: AuthLicense
        JetSTREAM: JetSTREAM
        MachineID: MachineID
        GLBLicense: GLBLicense
        SSL1: SSL1
        FlightPath: FlightPath
        MachineID1: MachineID1
        SSL: SSL
        B2BLicense1: B2BLicense1
        Interfaces: Interfaces
        DateIssued: DateIssued
        success: success
        ALB: ALB
        GLBLicense1: GLBLicense1
        FirewallLicense1: FirewallLicense1
        Layer4BaseLicense1: Layer4BaseLicense1
        HttpBaseLicense1: HttpBaseLicense1
        JetSTREAM1: JetSTREAM1
        HttpBaseLicense: HttpBaseLicense
        Cache: Cache
    Logging_Data_W3CCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/W3CCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Logging_Data_W3CCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Logging_Data_W3CCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Logging_Data_W3CFCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/W3CFCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Logging_Data_W3CFCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Logging_Data_W3CFCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Logging_Data_SecurityLogCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/SecurityLogCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Logging_Data_SecurityLogCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Logging_Data_SecurityLogCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Logging_Data_RsysProtocolCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/RsysProtocolCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Logging_Data_RsysProtocolCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Logging_Data_RsysProtocolCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Logging_Data_LogClearListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/LogClearListString_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Logging_Data_LogMessageLevelCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/LogMessageLevelCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Logging_Data_LogClearListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Logging_Data_LogClearListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Logging_Data_LogMessageLevelCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Logging_Data_LogMessageLevelCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Monitor_Logging_w3CLoggingList_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/w3CLoggingList_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Monitor_Logging_w3CLoggingList:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Monitor_Logging_w3CLoggingList_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Monitor_Logging_sysLoggingList_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/sysLoggingList_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Monitor_Logging_sysLoggingList:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Monitor_Logging_sysLoggingList_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Logging_Data_syslog:
      type: object
      properties:
        LogMessageLevel:
          type: string
          description: "1"
      example:
        LogMessageLevel: LogMessageLevel
    Monitor_History_dataset:
      type: object
      properties:
        VSRS:
          type: array
          items:
            $ref: '#/components/schemas/Hisdataset_opt'
      example:
        VSRS:
        - RS:
          - ipPort: ipPort
          - ipPort: ipPort
          ipPort: ipPort
        - RS:
          - ipPort: ipPort
          - ipPort: ipPort
          ipPort: ipPort
    Network_Data_data_ProtocolCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/NetworkDataSNAT_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Network_Data_data_AdapterOptionsListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/NetworkData_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Network_Data_data_ProtocolCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Network_Data_data_ProtocolCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Network_Data_data_AdapterOptionsListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Network_Data_data_AdapterOptionsListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Network_Data_data_NetworkStaticRoutesGrid_dataset:
      type: object
      properties:
        row:
          type: string
          description: ""
      example:
        row: row
    Network_Data_data_NetworkStaticRoutesGrid:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Network_Data_data_NetworkStaticRoutesGrid_dataset'
      example:
        dataset:
          row: row
    Network_Data_SNATGrid:
      type: object
      properties:
        ProtocolCombo:
          $ref: '#/components/schemas/Network_Data_data_ProtocolCombo'
        id:
          type: string
          description: "1"
        interface:
          type: string
          description: "0"
        sourceip:
          type: string
          description: 192.168.1.1
        destinationip:
          type: string
          description: 192.168.1.1
        protocol:
          type: string
          description: all
        sourceport:
          type: string
          description: "80"
        destinationport:
          type: string
          description: "80"
        snattoip:
          type: string
          description: 192.168.1.1
        snattoport:
          type: string
          description: "80"
        notes:
          type: string
          description: notes
        error:
          type: string
          description: "Error: Success"
      example:
        SNATGrid:
          dataset:
            row:
            - id: "1"
              interface: "0"
              sourceip: ""
              destinationip: ""
              protocol: all
              sourceport: ""
              destinationport: ""
              snattoip: ""
              snattoport: ""
              notes: ""
              error: "Error: No such file or directory"
        ProtocolCombo:
          options:
            option:
            - id: all
              value: All
            - id: tcp
              value: TCP
            - id: udp
              value: UDP
            - id: icmp
              value: ICMP
    Network_Data_data:
      type: object
      properties:
        AdapterOptionsListString:
          $ref: '#/components/schemas/Network_Data_data_AdapterOptionsListString'
        DefaultGateway:
          type: string
          description: 192.168.1.1
        DefaultGatewayIPv6:
          type: string
          description: ""
        DefaultStatusImage:
          type: string
          description: images/jnpsActiveNo.gif
        ServerNagle:
          type: string
          description: "false"
        ClientNagle:
          type: string
          description: "false"
        ServerRefField:
          type: string
          description: ALB-X
        DNSServerField:
          type: string
          description: 8.8.8.8
        DNSServerField2:
          type: string
          description: ""
        NetworkStaticRoutesGrid:
          $ref: '#/components/schemas/Network_Data_data_NetworkStaticRoutesGrid'
        CurrentTable:
          type: string
          description: Destination Gateway Mask Flags Metric Ref Use Adapter\n 255.255.255.255
            0.0.0.0 255.255.255.255 UH 0 0 0 eth0\n 192. 168.1.0 0.0.0.0 255.255.255.0
            U 0 0 0 eth0\n 169.254.0.0 0.0.0.0 255.255.0.0 U 1002 0 0 eth0
      example:
        DefaultGatewayIPv6: DefaultGatewayIPv6
        ServerNagle: ServerNagle
        NetworkStaticRoutesGrid:
          dataset:
            row: row
        CurrentTable: CurrentTable
        DefaultStatusImage: DefaultStatusImage
        DNSServerField2: DNSServerField2
        ClientNagle: ClientNagle
        DNSServerField: DNSServerField
        DefaultGateway: DefaultGateway
        ServerRefField: ServerRefField
        AdapterOptionsListString:
          options:
            option:
            - id: id
              value: value
            - id: id
              value: value
    Network_Combo_EthDuplexListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/EthDuplexList_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Network_Combo_EthDuplexListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Network_Combo_EthDuplexListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Network_Combo_EthSpeedListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/EthSpeedList_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Network_Combo_EthSpeedListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Network_Combo_EthSpeedListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Network_Combo_BondModeListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/BondModeList_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Network_Combo_BondModeListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Network_Combo_BondModeListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Network_Combo_EthBondListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/EthBondList_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Network_Combo_EthBondListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Network_Combo_EthBondListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Hardware_Data_HardwareGrid_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/HardwareGrid_opt'
      example:
        row:
        - ethName: ethName
          duplex: duplex
          ethStatus: ethStatus
          id: id
          ethBond: ethBond
          speed: speed
        - ethName: ethName
          duplex: duplex
          ethStatus: ethStatus
          id: id
          ethBond: ethBond
          speed: speed
    Headline_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/Headline_opt'
      example:
        row:
        - data: data
          id: id
          nature: nature
          message: message
          colour: colour
    Headline_Data:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Headline_dataset'
      example:
        row:
        - data: data
          id: id
          nature: nature
          message: message
          colour: colour
    Hardware_Data_HardwareGrid:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Hardware_Data_HardwareGrid_dataset'
      example:
        dataset:
          row:
          - ethName: ethName
            duplex: duplex
            ethStatus: ethStatus
            id: id
            ethBond: ethBond
            speed: speed
          - ethName: ethName
            duplex: duplex
            ethStatus: ethStatus
            id: id
            ethBond: ethBond
            speed: speed
    Hardware_Data_BondGrid_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/BondGrid_opt'
      example:
        row:
        - bondMode: bondMode
          id: id
          bondName: bondName
        - bondMode: bondMode
          id: id
          bondName: bondName
    Hardware_Data_BondGrid:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Hardware_Data_BondGrid_dataset'
      example:
        dataset:
          row:
          - bondMode: bondMode
            id: id
            bondName: bondName
          - bondMode: bondMode
            id: id
            bondName: bondName
    Hardware_Data_AdapterListString_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/AdapterList_opt'
      example:
        row:
        - id: id
          value: value
        - id: id
          value: value
    Hardware_Data_AdapterListString:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Hardware_Data_AdapterListString_dataset'
      example:
        dataset:
          row:
          - id: id
            value: value
          - id: id
            value: value
    Appliance_Data_AdapterListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/AdapterList_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Appliance_Data_AdapterListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Appliance_Data_AdapterListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Appliance_Data_ApplianceGrid_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/ApplianceGrid_opt'
      example:
        row:
        - address: address
          ethtype: ethtype
          RestEnabled: RestEnabled
          ethVlan: ethVlan
          webconsoleChecked: webconsoleChecked
          id: id
          gateway: gateway
          mask: mask
          desc: desc
          RpFilter: RpFilter
        - address: address
          ethtype: ethtype
          RestEnabled: RestEnabled
          ethVlan: ethVlan
          webconsoleChecked: webconsoleChecked
          id: id
          gateway: gateway
          mask: mask
          desc: desc
          RpFilter: RpFilter
    Appliance_Data_ApplianceGrid:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Appliance_Data_ApplianceGrid_dataset'
      example:
        dataset:
          row:
          - address: address
            ethtype: ethtype
            RestEnabled: RestEnabled
            ethVlan: ethVlan
            webconsoleChecked: webconsoleChecked
            id: id
            gateway: gateway
            mask: mask
            desc: desc
            RpFilter: RpFilter
          - address: address
            ethtype: ethtype
            RestEnabled: RestEnabled
            ethVlan: ethVlan
            webconsoleChecked: webconsoleChecked
            id: id
            gateway: gateway
            mask: mask
            desc: desc
            RpFilter: RpFilter
    Protocol_Data_XFFCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/XFFCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Protocol_Data_XFFCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Protocol_Data_XFFCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Protocol_Data_CompressAsYouGoCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CompressAsYouGoCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Protocol_Data_SameSiteListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/SameSiteListString_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Protocol_Data_CompressAsYouGoCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Protocol_Data_CompressAsYouGoCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Protocol_Data_SameSiteListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Protocol_Data_SameSiteListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Config_Monitoring_MethodCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/RealMethodCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Config_Monitoring_MethodCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Config_Monitoring_MethodCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Config_Monitoring_ConfigMonitoringGrid_dataset:
      type: object
      properties:
        row:
          type: array
          items:
            $ref: '#/components/schemas/RealConfigMonitoring_opt'
      example:
        row:
        - AppliedtoVS: AppliedtoVS
          Username: Username
          name: name
          description: description
          id: id
          type: type
          url: url
          content: content
          Password: Password
          Threshold: Threshold
        - AppliedtoVS: AppliedtoVS
          Username: Username
          name: name
          description: description
          id: id
          type: type
          url: url
          content: content
          Password: Password
          Threshold: Threshold
    Config_Monitoring_ConfigMonitoringGrid:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Config_Monitoring_ConfigMonitoringGrid_dataset'
      example:
        dataset:
          row:
          - AppliedtoVS: AppliedtoVS
            Username: Username
            name: name
            description: description
            id: id
            type: type
            url: url
            content: content
            Password: Password
            Threshold: Threshold
          - AppliedtoVS: AppliedtoVS
            Username: Username
            name: name
            description: description
            id: id
            type: type
            url: url
            content: content
            Password: Password
            Threshold: Threshold
    DeleteCustomMonitor_delCSMCombo_options_option:
      type: object
      properties:
        id:
          type: string
          description: Custom:customer/script0.pl
        value:
          type: string
          description: test
      example:
        id: id
        value: value
    DeleteCustomMonitor_delCSMCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/DeleteCustomMonitor_delCSMCombo_options_option'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    DeleteCustomMonitor_delCSMCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/DeleteCustomMonitor_delCSMCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    UpdateRealRequest_inner:
      type: object
      properties:
        Password:
          type: string
          description: test
        Threshold:
          type: string
          description: "23"
        Username:
          type: string
          description: test
        content:
          type: string
          description: ""
        description:
          type: string
          description: Check home page for 200 OK
        id:
          type: string
          description: "1"
        name:
          type: string
          description: 200OK
        type:
          type: string
          description: Check200
        url:
          type: string
          description: /test/ab.aspx
    Security_Data_SCP_CertificateListStringGUI3_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/SCP_Certificate_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Security_Data_SCP_CertificateListStringGUI3:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Security_Data_SCP_CertificateListStringGUI3_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Software_Data_SmartFiles:
      type: object
      properties:
        Files:
          type: array
          items:
            $ref: '#/components/schemas/SmartFiles_opt'
      example:
        Files:
        - Order_Id: Order_Id
          DockerImageName: DockerImageName
          Description: Description
          File_Name: File_Name
          Product_Id: Product_Id
          Certified: Certified
          Message_Digest: Message_Digest
          Vendor: Vendor
          ReleaseDate: ReleaseDate
          Name: Name
          Type: Type
          Version: Version
          Machine_Id: Machine_Id
          Icon: Icon
        - Order_Id: Order_Id
          DockerImageName: DockerImageName
          Description: Description
          File_Name: File_Name
          Product_Id: Product_Id
          Certified: Certified
          Message_Digest: Message_Digest
          Vendor: Vendor
          ReleaseDate: ReleaseDate
          Name: Name
          Type: Type
          Version: Version
          Machine_Id: Machine_Id
          Icon: Icon
    Software_SaveLocationResp_Details:
      type: object
      properties:
        LOCATION:
          type: string
          description: "true"
        PUBLIC_IP_ADDRESS:
          type: string
          description: "true"
      example:
        LOCATION: LOCATION
        PUBLIC_IP_ADDRESS: PUBLIC_IP_ADDRESS
    GetCertificate_CerKeyLenghtCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CerKeyLenght_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    GetCertificate_CerKeyLenghtCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/GetCertificate_CerKeyLenghtCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    GetCertificate_CountryCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CountryComboCer_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    GetCertificate_CountryCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/GetCertificate_CountryCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    GetCertificate_CertificateManageCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CertificateManage_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    GetCertificate_CertificateManageCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/GetCertificate_CertificateManageCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    GetCertificate_ACE_CertificateListString_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/ACE_Certificate_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    GetCertificate_ACE_CertificateListString:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/GetCertificate_ACE_CertificateListString_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Setup_IPServices_dataset_ipService:
      type: object
      properties:
        sId:
          type: array
          items:
            $ref: '#/components/schemas/StatusData_row'
      example:
        sId:
        - interfaceImagePath: interfaceImagePath
          conn: conn
          data: data
          cacheperc: cacheperc
          compress: compress
          rsStatusReason: rsStatusReason
          channelStatusReason: channelStatusReason
          pool: pool
          RowType: RowType
          VIPPort: VIPPort
          serviceName: serviceName
          realServerNotes: realServerNotes
          realServer: realServer
          rsImagePath: rsImagePath
          hitsecnew: hitsecnew
          channelImagePath: channelImagePath
          interfaceStatusReason: interfaceStatusReason
          reqsec: reqsec
        - interfaceImagePath: interfaceImagePath
          conn: conn
          data: data
          cacheperc: cacheperc
          compress: compress
          rsStatusReason: rsStatusReason
          channelStatusReason: channelStatusReason
          pool: pool
          RowType: RowType
          VIPPort: VIPPort
          serviceName: serviceName
          realServerNotes: realServerNotes
          realServer: realServer
          rsImagePath: rsImagePath
          hitsecnew: hitsecnew
          channelImagePath: channelImagePath
          interfaceStatusReason: interfaceStatusReason
          reqsec: reqsec
    Setup_IPServices_dataset:
      type: object
      properties:
        ipService:
          $ref: '#/components/schemas/Setup_IPServices_dataset_ipService'
      example:
        ipService:
          sId:
          - interfaceImagePath: interfaceImagePath
            conn: conn
            data: data
            cacheperc: cacheperc
            compress: compress
            rsStatusReason: rsStatusReason
            channelStatusReason: channelStatusReason
            pool: pool
            RowType: RowType
            VIPPort: VIPPort
            serviceName: serviceName
            realServerNotes: realServerNotes
            realServer: realServer
            rsImagePath: rsImagePath
            hitsecnew: hitsecnew
            channelImagePath: channelImagePath
            interfaceStatusReason: interfaceStatusReason
            reqsec: reqsec
          - interfaceImagePath: interfaceImagePath
            conn: conn
            data: data
            cacheperc: cacheperc
            compress: compress
            rsStatusReason: rsStatusReason
            channelStatusReason: channelStatusReason
            pool: pool
            RowType: RowType
            VIPPort: VIPPort
            serviceName: serviceName
            realServerNotes: realServerNotes
            realServer: realServer
            rsImagePath: rsImagePath
            hitsecnew: hitsecnew
            channelImagePath: channelImagePath
            interfaceStatusReason: interfaceStatusReason
            reqsec: reqsec
    Setup_IPServicesLayout_dataset:
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/Statuscolumns_row'
      example:
        columns:
        - width: width
          id: id
        - width: width
          id: id
    Troubleshooting_Data_CaptureAdapterCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/CaptureAdapterCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Troubleshooting_Data_CaptureAdapterCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Troubleshooting_Data_CaptureAdapterCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Troubleshooting_Data_SupportFileCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/SupportFileCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Troubleshooting_Data_SupportFileCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Troubleshooting_Data_SupportFileCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Trouble_TraceDetail_flightpathCombo_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/flightpathCombo_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    Trouble_TraceDetail_flightpathCombo:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/Trouble_TraceDetail_flightpathCombo_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    Users_Data_Members:
      type: object
      properties:
        dataset:
          type: array
          items:
            $ref: '#/components/schemas/UsersMembers_opt'
      example:
        dataset:
        - NewPassword: NewPassword
          UserName: UserName
          isGUIR: isGUIR
          isSSH: isSSH
          isGUIW: isGUIW
          isAddOn: isAddOn
          id: id
          isAdmin: isAdmin
          OldPassword: OldPassword
          isAPI: isAPI
          UserType: UserType
        - NewPassword: NewPassword
          UserName: UserName
          isGUIR: isGUIR
          isSSH: isSSH
          isGUIW: isGUIW
          isAddOn: isAddOn
          id: id
          isAdmin: isAdmin
          OldPassword: OldPassword
          isAPI: isAPI
          UserType: UserType
    GetWidget_ConfiguredWidgetsComboStore_options:
      type: object
      properties:
        option:
          type: array
          items:
            $ref: '#/components/schemas/ConfiguredWidgets_opt'
      example:
        option:
        - id: id
          value: value
        - id: id
          value: value
    GetWidget_ConfiguredWidgetsComboStore:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/GetWidget_ConfiguredWidgetsComboStore_options'
      example:
        options:
          option:
          - id: id
            value: value
          - id: id
            value: value
    EditIPServiceResp_widget1:
      type: object
      properties:
        responseError:
          type: string
          description: ""
        responseWarning:
          type: string
          description: ""
        type:
          type: string
          description: System
        periodEndNow:
          type: string
          description: "1"
        periodEnd:
          type: string
          description: ""
        period:
          type: string
          description: day
        columns:
          type: string
          description: "Average CPU %,Average Memory %,Average Disk Free %"
        axesCount:
          type: string
          description: "3"
        timesUtc:
          type: string
          description: "1423735200, 1423738800,1423742400,1423746000,1423749600,1423753200,1423756800,1423760400,1423764000,1423767600,1423771200,1423774800,1423778400,1423782000,1423785600,1423789200,1423792800,1423796400,1423800000,1423803600,1423807200,1423810800,1423814400,1423818000,1423821600"
        timesServer:
          type: string
          description: "1423735200,1423738800, 1423742400,1423746000,1423749600,1423753200,1423756800,1423760400,1423764000,1423767600,1423771200,1423774800,1423778400,1423782000,1423785600,1423789200,1423792800,1423796400,1423800000,1423803600,\
            \ 1423807200,1423810800,1423814400,1423818000,1423821600"
        systemData:
          type: string
          description: "3"
        dataset:
          $ref: '#/components/schemas/Monitor_History_dataset'
      example:
        period: period
        systemData: systemData
        responseError: responseError
        timesUtc: timesUtc
        columns: columns
        timesServer: timesServer
        axesCount: axesCount
        periodEndNow: periodEndNow
        type: type
        dataset:
          VSRS:
          - RS:
            - ipPort: ipPort
            - ipPort: ipPort
            ipPort: ipPort
          - RS:
            - ipPort: ipPort
            - ipPort: ipPort
            ipPort: ipPort
        responseWarning: responseWarning
        periodEnd: periodEnd
    DashEventWidget2_Headlines:
      type: object
      properties:
        dataset:
          $ref: '#/components/schemas/Headline_dataset'
    POST_7iAction1sendlicense_body:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          description: file
          format: binary
    POST_25iAction4iType1sendprotocol_body:
      required:
      - file
      type: object
      properties:
        file:
          type: string
          description: html file
          format: binary
    POST_19iAction3iType1sendsslimport_body:
      required:
      - file
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: SslCertificatesImportCertificateNameText
        value:
          type: string
          description: ABC
        file:
          type: string
          description: .pfx file
          format: binary
    POST_19iAction5iType1sendsslimport_body:
      required:
      - file
      - name
      - value
      type: object
      properties:
        name:
          type: string
          description: SslCertificatesImportCertificateNameText
        value:
          type: string
          description: ABC
        file:
          type: string
          description: .pfx file
          format: binary
x-original-swagger-version: "2.0"
